(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1735148,      35369]
NotebookOptionsPosition[   1569220,      32405]
NotebookOutlinePosition[   1732987,      35307]
CellTagsIndexPosition[   1732905,      35302]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["\[IndentingNewLine]"], "hidefromslideshowgraphic",
 CellChangeTimes->{{3.4483017593296423`*^9, 3.448301769562791*^9}, {
  3.4487297016867533`*^9, 3.448729710294153*^9}, {3.449486136735977*^9, 
  3.449486146926845*^9}, {3.449490735677544*^9, 3.4494907482045183`*^9}, {
  3.473785056790244*^9, 3.4737850735465307`*^9}, {3.485608891427413*^9, 
  3.485608902078108*^9}, {3.690151426507949*^9, 3.690151438177907*^9}},
 Background->None],

Cell[CellGroupData[{

Cell["R3M Multidimensional Timeline", "Title",
 ShowGroupOpener->False,
 CellChangeTimes->{{3.448190122176695*^9, 3.44819012385317*^9}, {
  3.485609127497636*^9, 3.485609133015955*^9}, {3.48795432628125*^9, 
  3.48795436509375*^9}, {3.487954882390625*^9, 3.48795491578125*^9}, {
  3.48795557346875*^9, 3.4879555996875*^9}, {3.690151315506151*^9, 
  3.6901513485450497`*^9}, {3.69066214508484*^9, 3.690662178527039*^9}, {
  3.69066239548321*^9, 3.690662397956841*^9}}],

Cell["", "Subtitle",
 CellChangeTimes->{{3.485609136120798*^9, 3.4856091511532907`*^9}, {
   3.4856091945334663`*^9, 3.485609199379443*^9}, {3.48795437090625*^9, 
   3.487954399015625*^9}, 3.690151355353321*^9, 3.6906621845770617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Visualizing Multi-Dimensional Evidence", "Section",
 CellChangeTimes->{
  3.483202458955147*^9, {3.4879544594375*^9, 3.4879544664375*^9}, {
   3.488035981265625*^9, 3.488035984375*^9}}],

Cell[TextData[{
 "\n\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
/Mmf/Mmf/Mmf/MmfR3/+B6mudEU=
     "], {{0, 497}, {705, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{1166.98046875, Automatic},
   ImageSizeRaw->{705, 497},
   PlotRange->{{0, 705}, {0, 497}}]], "Input"]
}], "Text",
 CellChangeTimes->{{3.487954926609375*^9, 3.487955128484375*^9}, {
   3.4879551723125*^9, 3.487955435421875*^9}, {3.487956513234375*^9, 
   3.487956518765625*^9}, {3.48795655796875*^9, 3.4879565596875*^9}, {
   3.487956673671875*^9, 3.487956787453125*^9}, {3.487957658234375*^9, 
   3.487957673375*^9}, 3.6902004535574207`*^9}],

Cell[" ", "Text",
 CellChangeTimes->{{3.48795566971875*^9, 3.48795567721875*^9}, {
   3.487956468453125*^9, 3.487956494734375*^9}, {3.487956823015625*^9, 
   3.487957096546875*^9}, {3.487957254109375*^9, 3.487957258828125*^9}, {
   3.48795768375*^9, 3.487957692875*^9}, 3.69019509902448*^9}],

Cell[CellGroupData[{

Cell["\<\
The purpose of analytical displays of information is to assist thinking about \
evidence:\
\>", "ItemNumbered",
 CellChangeTimes->{{3.48795566971875*^9, 3.48795567721875*^9}, {
   3.487956468453125*^9, 3.487956494734375*^9}, {3.487956823015625*^9, 
   3.487957096546875*^9}, {3.487957254109375*^9, 3.487957258828125*^9}, {
   3.48795768375*^9, 3.487957692875*^9}, 3.4960733595*^9, {
   3.49607343353125*^9, 3.496073456359375*^9}, {3.49607353878125*^9, 
   3.49607354103125*^9}, {3.496073666921875*^9, 3.49607372496875*^9}, {
   3.496076010984375*^9, 3.496076021*^9}}],

Cell["\<\
What are the evidence-thinking tasks that this display is supposed to serve?\
\>", "Subitem",
 CellChangeTimes->{{3.48795566971875*^9, 3.48795567721875*^9}, {
   3.487956468453125*^9, 3.487956494734375*^9}, {3.487956823015625*^9, 
   3.487957096546875*^9}, {3.487957254109375*^9, 3.487957258828125*^9}, {
   3.48795768375*^9, 3.487957692875*^9}, 3.4960733595*^9, {
   3.49607343353125*^9, 3.496073456359375*^9}, {3.49607353878125*^9, 
   3.49607354103125*^9}, {3.496073666921875*^9, 3.49607372496875*^9}, {
   3.496076010984375*^9, 3.496076058640625*^9}}],

Cell["\<\
Analytical graphics should be constructed to serve the fundamental cognitive \
tasks in reasoning about evidence: \
\>", "ItemNumbered",
 CellChangeTimes->{{3.48795566971875*^9, 3.48795567721875*^9}, {
   3.487956468453125*^9, 3.487956494734375*^9}, {3.487956823015625*^9, 
   3.487957096546875*^9}, {3.487957254109375*^9, 3.487957258828125*^9}, {
   3.48795768375*^9, 3.487957692875*^9}, 3.4960733595*^9, {
   3.49607343353125*^9, 3.496073456359375*^9}, {3.49607353878125*^9, 
   3.49607354103125*^9}, {3.496073666921875*^9, 3.49607372496875*^9}, {
   3.496076010984375*^9, 3.496076093296875*^9}, 3.690197777250873*^9}],

Cell[CellGroupData[{

Cell["Describing the data", "Subitem",
 CellChangeTimes->{{3.48795566971875*^9, 3.48795567721875*^9}, {
   3.487956468453125*^9, 3.487956494734375*^9}, {3.487956823015625*^9, 
   3.487957096546875*^9}, {3.487957254109375*^9, 3.487957258828125*^9}, {
   3.48795768375*^9, 3.487957692875*^9}, 3.4960733595*^9, {
   3.49607343353125*^9, 3.496073456359375*^9}, {3.49607353878125*^9, 
   3.49607354103125*^9}, {3.496073666921875*^9, 3.49607372496875*^9}, {
   3.496076010984375*^9, 3.496076093296875*^9}, {3.496076145796875*^9, 
   3.496076197140625*^9}}],

Cell["Making comparisons", "Subitem",
 CellChangeTimes->{{3.49607619884375*^9, 3.49607620515625*^9}}],

Cell["Understanding causality", "Subitem",
 CellChangeTimes->{{3.4960762059375*^9, 3.496076219640625*^9}}],

Cell["Assessing credibility of data and analysis", "Subitem",
 CellChangeTimes->{{3.49607623915625*^9, 3.4960762459375*^9}}]
}, Open  ]],

Cell["\<\
Logic of design replicates the logic of analysis and supports the narrative\
\>", "ItemNumbered",
 CellChangeTimes->{{3.4960762601875*^9, 3.496076309921875*^9}, {
  3.690200627399576*^9, 3.690200632879912*^9}}],

Cell["Design reasoning emulates evidence reasoning", "ItemNumbered",
 CellChangeTimes->{{3.496076517203125*^9, 3.496076519125*^9}, {
  3.496076552375*^9, 3.496076638015625*^9}, {3.496076683015625*^9, 
  3.496076683015625*^9}, {3.690200598127638*^9, 3.690200623455883*^9}}],

Cell[TextData[{
 "Spare design, content resolution. ",
 StyleBox["Simple designs, complex information",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "\"\n"
}], "ItemNumbered",
 CellChangeTimes->{{3.496076684609375*^9, 3.496076731953125*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
BwcHBwcHBweHZ/H/A8qyWp4=
      "], {{0, 291}, {464, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSize->{865.6666507058669, Automatic},
    ImageSizeRaw->{464, 291},
    PlotRange->{{0, 464}, {0, 291}}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.496076343203125*^9, {3.49609381503125*^9, 3.496093818171875*^9}}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
i8WdYtmyzq0Q1+TnpuPPNnn+nOm9AlvU6QvUlgRDLyqurA63gybzr3pZp/fC
QhrtykScqmk2MkKy2psxTY5E6ut2FkOhpCgmW3YG7GM2uC+wGKpN8fYGM3Rm
2gKHpHnnft509c4/ce7N8H2THSV4m7qwEhFm1ON1a1KLYZY5LhEMrrDsSZ6/
iTqZku0IYYA5no8Dt7aMd6AmAtTZpHn3Ku4MSbWICel4/aHWFtdKaOlHY+Qq
8ZyRHUJ5Gk8EYVx/0YwaCy7ueRFkfiCYXnhJIpasTZZpjjvK/drpvTDPuzx/
PhBQ/H7F651wn9UH+5MJhVK4A5RT2NjI7T9PRQs2RF80BDzA68uieL/bVlyr
yfgQTno8hr8+5l5/JtGqF5JUdvp4WhJmKSc52em9MEtBmK+95vkVV06+wDRT
7M8WqcfeQs37miv+gdo/WnYMAWtzkuM63EZu1mRQGzMPgJt7Xiz7BkhtK+++
Zqk1DqruC8f34jl6ONTsT1leAo0VxRVMn0/9L8dN+nxpnB4qCHMMs4I+v5vi
Lwi/lLEKBlecPpbWHBpyOBwukaCavMtZ3y/FE/7SZvJQQTkU7ZzMxGva75DT
5BU9jvFmwtkYZBYdv0YtWX/hTLLk1mU+4CmOc6LtSJlh7ovieb//Kuqpl0X3
gnafQy0rNOvzXef5T+EBqv4Jbu3bTp/UFozFHNbkL77YX2t5HVhL1L2N1LVz
vbwZjmt2ZRDv/WQ+7qJ+n02qzQUp4vg1akmyGdauXeZb8vlOCsdt+0FBWJOk
S6g6EMmbus5lUajTZxdxeNiSHiLaUSqVZNnx5U5XECfq/sQwYx7PcQ0D1QOe
n+H5ct07xHukPiJaH/MOy5qJv0VFqdw4swfrkeBpN5C/aQ/TPB/nRFt+6rEg
TFpWmrXCVytC+/2ua/LIuCNtZGwsXdfCdb8EWrSimqi7gs4Co+0L8MlLoliu
fZ903VIDudWdacYIhIM9w7/q9DVqSZLLfDfNOXmsIxiXBzwei9fFXnDcJMqY
s/RQioKwwKjNmNzpUs4XCg7HwgHW1rLLy5mLF5V9HoNxLXAA9+DTqMk7aAw7
w7K19h/XiQZTEddksO27Ro904KYgurOTMsFlPjjhdx0/njYc57ijzLw1295G
a3Y37bHKUIbI/WDwP0vSDadPajMLP//svCZjFItFUdzXS36LQmCOZYv6y53M
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
uKDF6rG4mUWULdLc9qWIFgEd96tYdMiZcDgVCsV5Ph2NgrTWXzhVse/daxao
eDicqxth04KgpFK9HvDWGS9fFlE4itYSqT3Nd7hDBG91XWUz58wVGK9nAVWt
KZM+O/PVomQVVOloSZaJV6gn1Vk1KYR69GatoJ6Jl0Qx7Y7ef04Rhn5lcDAu
iilGrZ0BSgujNVjG9dIElnBycLAWFlZQOw9KyZMn8/l8OzXrJxQKhbU1tUXs
yEjGaEEUt3OQWSSYyVDWWf6FVA0izFLHHtbGuL33iPByGHFl3hTEhGS2gtxb
wjxsh+zh20Cw3mcEwaI5SO8yjWQ5zjBJeHH6dM0GLhaLcVkuVs3j1NhYYWur
vy3kdtjczKMKGDXvuuMXjQzP8K8S9NHc1XlqSNXqrBFM2SmvF7hOziuyJIoN
p6imzKSUBB6xMTFsbhvbUeYrIj3H7STYOqtO74PjxNYeTjkBKVZCoSxqz63a
wEAQ3mg0wnE1X3H68OEd5PHoxUZOZAHnpICQzebj8T5xOH8ukOy/oLf9xHOU
hkr2kLDjFMSZVBjGNqqs3vx+BTXyq61GmSFY+O8LBkLjymPCobNy/KIYus3q
ThhxlrhfLdwwNncrdBsr1WyQWqQy/DMdiaQGBpKimFTXGph0Op25datmDINh
nI7H1RXbfa/J9UBxKe6PhexCsKzIemQu6XcdEOn91JLj5Ja0Fjo2186hA8ct
RA3/REl/UxIixUmcoj0NpNzPEgqZyMRiKiUpyXHACIpUxqt4FaTYoDURns/l
fsmS3p+CvLGRm5jIABXlh9XVzMOHe9LGX74shsO9nYKdYEk+FNvIbtT7LcON
3bvyiijOmNPJGssa6mkUUY+hJVk2bDYXd63lPbscYnIJ6fgxYbRVr9VyUiCT
5mMn86j59botjVZ7lKDSoMAM0mGwmTNDQ8mhIXW9D3Q7kciMjKgvQH1mZ53S
RqcAIxEufHHihDI2ptZrSiQUEOrNzd0lTuTBcPwCGmSMnyRrZaVbNdx5zjA/
dYz0srT+WAVV071AIvx3rqOpXP+LagiBJC0Yqt4AP/EBJw97/HGvDHsNUqyI
gZ2qs/ETKXRWjr/J1vS5/Csu3EOxFmpdC0kaJFdQtF9ZSyqBix7hOJDlCMPE
kZO54XwqU1POiqT9APMY7GSQ4h9+2EQKrHZmGR5O4r+COKPMmh56LHYJ1hd+
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
9YEq4qALhlkeGkrFYk7vMkVrJAcH3exnpuWJKCi0QIsm51AlH3jkg4JAncmu
hZo5vr7u5qYnVJYpKLpCGR/X4lLOyjJMkE/H47k//tHpXaZoC5jFuNarXJPl
5NAQlWUKinZQ0xA0P1Cfvv3233o5fa/vkdvYcLP7YgfNufLUWqag6Ij02JjG
kKrlDz+0tPgwhUmoniWnVVcL1RWKVMrps0VB4VKoJd811C5TG4vEYlST3Qwz
Ff9sZiYcpqYyBUU7ZBKJrg8RzDoLhUL63Dmnd5aiNdQaJoODjoutRpZQ2rXT
54yCwqWAOW9X90UB1fXFDfgoXAi4OgZq/TlIMJV7t9wrBYWlKGxtaWlRpMTj
6bNn6ZTTnVA0THbcRnWfKSgomoA7O3d9gnJ+/53lZZf3Ftm36K0ynph5hrGu
MSIFRU8jMzHRdeYLH/hOUcBUdnpnKVqgtzS5gEpapWQ5zvM52uSagqIJajvO
1VW1y3PHRykzPU1DL9wJrMlw+ZIcp0Y1oOvVE4XjFFQD1unzR0HhRqhlbQ4f
7vAEpUdGcg8f5jc3nd5TikbgQDi19yvLxg8dSg4PF1CjrlQ06rjwdqYag0EH
egqKNlB71Y2MZNuYWGCM/fOf/6QB/y5EfXAyqHFycFCtGnfxYk+0JkkODTl9
/igoXI3svXstuy2rM83x8dTp007vIEUjii9fxlH5vgpaO4OxFaYzyuCg+90X
OyguzkDXFQqKfYXcw4dpQWjx+ExMqG2vaWV79wEuCpjH8UBAnemsrWlJz3QJ
1bF+asrp80dB4XbkNjZUBR4aqndlgP385NEj+JPTe0fRApVKBQxmsJCTraY5
biYtzU1BoQUwo1Qf82JRbbuMavOqrXyOH6eLMq5F7scfGYaJs2xSFCMoKd5x
vdVC1R9OQUGhB2Ab5wMBeHySfn/2+++d3h2K1oABNB2JVNDoWeiFcLhdTabl
LygodAIM5tSJExmYZp44QYsRuRkwu0mPjPRY+Qs686Kg0A81gPnsWbrA1xNI
DQw4rrRUkykoKCgwlKkpRRQdF1uqyRQUFBQY2e++61xUuYh8zo4LMtVkCgqK
fYLC1lYt/adhva+EwjPc0FYVxgWasE9BQbFPoMaZSxK2itMMo4hiHl4EAilZ
domRnIV9o4sUFBQU+wYgy0lRLFWNUuXixfTIiONSXGOGJoxQUFDsM5RKJWV8
HNQvEw5nJiaUEyfqVbECwojojCbThiMUFBT7FS9fvlyensZZmbuSGA6nHF3s
g8HC6bNCQUFB4QzAYE4ODc39/+3dIWvDQBTA8ZhCaAJVJYG2NNQsboyaspqK
lNlOBEJ1KExUTJ2omYyLqoiaiJsp0xH7AvkK+wr5DLskMEahMNYut3b/Hyci
InIRj8dx773hsA7CL6bpKz24qMfvqv4rAKBMURQyLC96PaHrXqultv5aOA5z
RgD8czJbflwun7dbz7KEbasKyHTpBIA9yWaj6jBZJurcggOAPSvPa75nUWIY
0XqteusA8OcURbEajZoMyDn9OQHgsCxNfctqrNS6HN4KADhMZssiCJoZ5CcW
C9XbBYAzEIVhWejX75dFf3LpelLdIs6qtkWnOrh4mM9VbxQAzo9MnrNamo5l
oD46IL9p2rVpJnGsemcAcMbyPB9Xk/6OzJBvDIO55wBwvHImo+P8+Nbcq6bd
djoEZAA4oZXnCV3Pvt22SL4mbPuu270yzWy3U/35AHBR6i5G/mAwMk2tmmPu
9ftfG83Vq9C0qN32XfcpDO+n0ygMVX84AFymaL2Wqe97FXizqkQ6quryhOuK
yUTGYTGbiSDI8zyJY/lAlyEA+FUyWy4jcxB8LjpXAAAAAAAAXKQPyv39lQ==

    "], {{0, 302}, {476, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{877., Automatic},
  ImageSizeRaw->{476, 302},
  PlotRange->{{0, 476}, {0, 302}}]]]], "Text",
 CellChangeTimes->{{3.48795566971875*^9, 3.48795567721875*^9}, {
   3.487956468453125*^9, 3.487956494734375*^9}, {3.487956823015625*^9, 
   3.487957096546875*^9}, {3.487957254109375*^9, 3.487957258828125*^9}, {
   3.48795768375*^9, 3.487957692875*^9}, 3.4960733595*^9, {
   3.49607343353125*^9, 3.496073456359375*^9}, {3.49607353878125*^9, 
   3.49607354103125*^9}, {3.496073666921875*^9, 3.49607372496875*^9}, {
   3.496076010984375*^9, 3.496076093296875*^9}, {3.496076145796875*^9, 
   3.49607616803125*^9}, 3.496076334859375*^9, {3.496093827828125*^9, 
   3.49609383503125*^9}, 3.49609508515625*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Early Examples", "Section",
 CellChangeTimes->{{3.48795566971875*^9, 3.48795567721875*^9}, {
   3.487956468453125*^9, 3.487956494734375*^9}, {3.487956823015625*^9, 
   3.487957096546875*^9}, {3.487957254109375*^9, 3.487957258828125*^9}, {
   3.48795768375*^9, 3.487957692875*^9}, 3.4960733595*^9, {
   3.49607343353125*^9, 3.496073456359375*^9}, {3.49607353878125*^9, 
   3.49607354103125*^9}, {3.496073666921875*^9, 3.49607372496875*^9}, {
   3.496076010984375*^9, 3.496076093296875*^9}, {3.496076145796875*^9, 
   3.49607616803125*^9}, 3.496076334859375*^9, {3.496093827828125*^9, 
   3.49609383503125*^9}, {3.49609508515625*^9, 3.496095122375*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
4NlSurOy7taM/V4SQyHnnAKoyftZVpmpBlGKxB5odg7d2yenq2chD5zkzI3O
UlEUNg5yULIrr6HSdVvPo716WpeesgM18leZcN9TuzyOq9mBvXfS4bZZOPZM
1bd/LYuHbTXWIOWHIvh77LdnAqfnQSN/9f/P7cb5FU6O7CTl5ZmRp/+4PHkK
flvoejZTJGYi8msdPcig4DsBuWdmtUyWTsuzd5/S4A7IbEzGZR76begHUSlR
JNWlsYMLJF5N6Exhx90+Df/bXCBdVGDO++e6NBKGmKTBUPGRxpfNLf8bEha2
oorQ/E6OYXDDEnpbSk4A91vcXZ0iEylP5dqk3qczExnG2flkR7MOyF1QNy40
ZUSUkolBEf2XZfGwfhNHF/qyOVmP9diZOTEopcu2X/4SyQto7r76BWtgbhLy
C/5MKizTjLPifPtrYnxd1AMs1Lz3H+OlnkojM1eWERgrIgBsGx6sE0H9EKv1
GA7EXa6gapNSMwixgByIwZN2rqLlgB30dk3eJmjpzJNpgk/3c4RBfg/+K093
vOq6XNuFfPGigSXqjuckYDMX6Cm1QoP2HvNFfsUggPB/51kALwHQisMhpZQ2
K25D2s77vhKGPW6vn6RItwFK6YbWwWD9KTKqwI9HmSc6b1dbb5JwS+LE3InZ
4G91IWBgWjn9k4oavxDgFE03rwg406M2ywobSqS1lh+pngy2mVrqWAoCV3Vm
4Nl0UQgjtT3D71HKBufjROaEKjXkLvMLvaUtFgjMLLcXK+rIdJk4kqWHMBvI
WgNoMnxtzhk1ecEs4Kwzg35ACVCY2YAEfCXhGxgvGv/1LSXzRzxCcYEI/3PD
fzQrEqsAjP+HbJPaSUP4AZ48/o+FX7DtuQLaR9/eTYtu4Ow+4NatLvBr65SK
Y8AzzQDzh951VHpxkWV4T8VnjgxHHfLHlJj6Q2PR4NF8qWgDl82mlndb5OLU
OH5r7iVb0VoiP8AczVRFg8sA31DbY2X+81ZGzel0r8MxbEJOluftUjr1PPWS
UeYElcw1/JKqwYNE0qgmDbo1TrPSaSNZYnX9jTGfchp4lxyhrXrbeYGdC3Ci
5xT1M4S9bSJIzbhUrA7jmtMOb47t+0FQ86AfFKQXW7yHRb4/X6h4uefqk5l9
NURm6k52lQ4KShcVZMHR3i6VZ3TLG/DHVZ1I8t4sZ4Ud9NnNDO17ccvOhLq1
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
quK1sFABlrOs8nkawom/qIRaJcf7YZ0l2l8t7tUUWInRdoG+YamuWrFa5DX9
QdExOKz/oL20T51n+iToqYR9wUjlCnWZTvnuwRmxlMMBKJpGNHoCPZfWSdp2
LhOTUE6zinLw3xP/z451o47yECVpsmk7v6fZtuFupNVMch0Po/Of2r0jkf5y
sIf5dXxHyoDeJUIK/0bnkhMggPcutw/eNot/CxqIuoL/55SrX1EPUfc2f5ve
8jotLkMX/9zA0C2GZfU+nsw8DFdvOtSB1DEC9Jkk7yjAm9ZQjlxB/rpkQX5C
5tra09d4KwnC90TP13ezZHH28ytkPlDyB1q93R3aw3+N8/qulMB2Hjbvzzag
f2ssH19+O5RWsC6tz2GmxZF/HRF5TLfo8Xswqb4ewtmEXL5vhRqBNwP/A1qE
93KMsEtjPpew+/PV1h5rqznW+VvbTrSYz/b/8VyAq5MsIi9Am/fxwJFuOxyq
/b5M7NPZ9K/r/PNZX6kk3AOyFleqVxdMihZvyUQvzh3a8wvNyNrj48HWmF69
x8w0piRVRZ5TbHylvt6Krs5fQ3eL4UqHN+ltGkL4eqW4svPjIooy7zcHrwzt
OZ3GmCaZQ83nuIHOvzpkiaB2+XSn9W9s8umiVm9GRTdg9Rb2qPQZH+yNVo/g
Fx7sq7OLeK1yq241ywe6DNT5nyTgbFdXXQN+jfmV1xcF7HVYreE6BSYuSkTG
vjMQj96L9K3um7fSDYSI28OD5QOKpq2ho0J+Tb/BgfNNAZ94y95I68Mp06tT
0c/T+hwSvYvJYTmIgU9YDrzfvpv3Gj9ZhX7wfn6N9p6i7tr5HW3f4D9npHDU
CD/eF4QfCjzYRUMxT11oyW7r1ZFN4sFUy69kTuf/6RhfSAMcT84u8/mV5j0n
mLyVt68RfUuyMN0H+T/27ijMYeTfl2AHyQ5LHOxXROQPZVengespO097bHpn
jpDoTrW261UaCfd3hT+yB2ZmePrBjxYCJm+doVsM4DvZ+X9OgyEzYO9dQ2As
L6aliT8sVxqnDofX2Pv0Q31lHnqg8/ezSUjv4qm/NMmUDz7aZUviRRYL8s5W
H89c44F8c6lNPdWHAzYS9Lm6BfZzYGTtGUjDsQh4ffaksi+uXKU1Pz712uxV
Pj/cD+8XTO9lWA/qBXu8ogwSv2bimD7CZANcgvxbpfP3aq/N1MeWCt7bU1Z4
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
XOCqIyyMtSfWG/g7n+hyZBS034qbzbw/P2ZvDM+yM+C3H+fWrMjPmHOQeUfJ
N2/V6ed6H91iAN+CybQ8n4uzpykupPP7BGtb9oTeNg/tW298O/+8VaeX2EYW
X52M/KLDJ/ZpmaLS/GOx3qMZZ8N1W/oUd9fts1NI8uFZ797hRyuR7lKFa4Hh
Bpl62Bmj0AFd6WLvI6nlhvRHrCgz869+Nv/e2tC6OHua4vIrvLdozHYVjxzN
pRR2BTiOVPTpN0MKzHt7Jr7kGlUgPhxqRG2sPTFvtozoKhE35UDky90P/67h
b7xLZ/+NGfB9/8k1pSLTgN3dxajEBDi3I/psxJTkINHc5WI4cu8FVZq+lR9H
f2ssf+y60PesqHw81t4dTYw8kPXzDHWZdUWpVCGVYh/RXfVhMmeHCMXBsk4G
tVNHnitRv9e+MiR77/NnkdFGWHdGoN7/UIn1M4v56bMS6g30jU+h38Ttwaeg
C9DLff09C7xc5kXYLbLjVgLQy02tNNyUC3w8PN/F+h2sIs8QS5Z9DMfobtG3
u3Qe+/6c+MgmnbiR6X5ictGN7M96vDg7X/DTK6u+O3eofBmNphvp7IhqtYKZ
TMOYDnt7QMF7an5NAuMIMbbSLdnL1j+wiYx1GuNCGTisYgaB4kVZS1ie3zls
9P+kZboP0vHJHKtnsW6fW+fPrEtA9TiUTDVIOaAh1oVLymifvdvCVtkwvLka
C8Xji5syx4ol71crKsYns/UgTTy0zVgHoPX2rP0tx6KWkDbCmgxm1L/1LfOw
9tWI1V0PKwBMwI4caDIaJnN89tWJ6nAQj835ERq1v0Zp/qfmi66xqILMLf8V
FHQJDILZ9HHHcv0Nr/G3QCIgO1Im0z0t12aP2PMsHTM5l1KQXz2c04YtYkPb
zkfAPs+zznSLSesdmEzL83mP7SiZpvf2gA3YS4A6UEBABSRBe6sqQX4NqArq
auieEPpwJv2lvzJZTrQTMq9wPmimH4LxOzcBzDV20XMAkM6vDqWdBVtd+wiH
qXw+h7cGf3anKWb83RakMb8qfxYtPWEEbTmOtCpWi7YcxVPDTBvZV/VfoVug
wdqIKrQ48t+lGdP6LZne+uJ8zPDTzui3fVVzewN6sCk8KeQP2s6vErSZm6sD
/TnZvT2p2HZ22Bdfmtmkv0XtP7/Cz0E9LqsOyPez2EqhEgqHdX2Z1t+i0M6b
lqXFxej6fS20PvKvz2HyNiC51qTjgjoAmN9MXjjYvSjXa0kHcHoCFcM+WXmw
kYot/KLq509uw6Nvz3dx+HW07zOcWukzLvmw8LfC4A2Uq3SPt2ynxfm8iwC9
xbC8Q2OOrO5Cb1L/tx2AGfl9Td/Fum7qyriUgd/s6qT9+bt3HfGiDAfPc7nX
nIwjlIZ5fXVelLyVbvGK3UXnX32P9+JTEkW3GJa/5uCYLu3fkMxOcU4CXvLu
7u0ZFWLDoAO1YTwLFkF+/AI379vZf/OCRb0GAX5RF5R2/27y2qjk5b091QO6
Bv+muplee20ErvSZfJdugAOZVudzcfY0rY+r63N4qIq8hhwSQj0/ezVurD0v
FEuXHIFfcvGuzkB7NWW7prO4L1cvw6xYitzStPFKJQCwLI1KnufBRB1kGZe3
PhrcR+dfHFpv0NdC67N6hzH5BlfSoyVR/hetPZvd25Ou6tId0rtG81dO1cGI
zV7Zivt2W45zyVkGHE6Vg5uPICnJNWHkT3Vzf3KMrf+Z/E53eMvS8tC6OHua
bsDqHcak75XrFcZ99XmnXeXfHgcdN7XVx18PtV9yVagldhUPXV3IHXByaOYa
xZPab+38B2LioPYZTs7THZD/Njr/D/DqTMPcAE6ZbsDqmhw2uuerOr8tzo+O
qPNvtc4/yDjWmb34DQ/JCoz8Wvcem/EH5Zs0BwwclGNvGeSfKtlejFcE3kG5
DT9UtkfX6lp85ZRpcbxanD1N67O6Pofp0M7v53FjRgCodX7vOBKda56f+lNW
+w3vmwBhvpyTO3BAfUP3mjG/l3I2YY/uoPNf7eivi4vF5ya3ACukG7C6bF8b
24aFaD6H5MVipXSpJSP/bo2Z6rjBJ06u3SaT3s+PjtnYaQMZ1euNTJVBvrHP
Q5uYI0/sieqg+oldncdVvKeYin7sGuvwoai7rk7WvkuL7+q8AZwyrc/q4lLe
fXHQe6RR9k49Rc/ak+kJ+46d/0TxUF+KxSPXq+387AaTfFpmT0T4V3xmVoF9
E2jcssuiciuEcrfE5PNa1K3i6QjvSvrwCPlH16s44MTNje4lPxO52KqeA+8C
JwOMCehvEyRMtzCS/GRGOqaYAuSyr1QauLQYyx+VBuTyWnxSRVAHHxS3UVoK
p45chiZLEbIoKimmjCsSodWaif2FBO6Ab1da3LWXF1/lt0n5jyHKRWXvF7Q+
q7/ncEYbahTRkAnDAlAv1QL0De/s3p6r74jR+beHX1rXrqJs5ue2R3oF6jlL
Z5ZhW96GzeyjnlxY/3KNWyfMaGKOAsmJzCNhoxh9txdDl9HEJ/DcNj7jXVeZ
9je5CUpAhqe6xX4jq0txMlm7mrS+K9vf9m7f4yX5vXzyU8L0iwpDlpL5uxL6
bT1guwXWgTocOuGaW+4FCXMAintJ5ZU0xrrXqr8YnUvj4tLzotkWWJfDCTx/
4KiXAlhPmy57NTMek51aRn/F5XhqSqB3NsZYR0pGp7p0FJOGidn/J9/SWhby
Q78Wf6LaWPhEZoSjRx6l20af9z4hu+T1wa+DriUC4HBvT7eKCekAtc7v26hL
LuD5Qk8QDGTEgJMTreTYi8YVnU32Mt3gS643Wsw+TJ1hP2a+nX70tQU3PN84
P1dTp+mktcedCroB7xLcxrQBgFI4AmbUHxDJa24TQ3U3OXdBZRmECUks1Ldh
HUmaJyF/ZIf84REIrNF390Mbf1KXahwrQdQodlvP7JdcDSpOUNiMnb/bawcF
92+b1+tVwHEg65R4PX6QOv9ZWwEsf/iRHsmL0+rW6cXZ07Q+q3cYkzX+WLlQ
X3aKOKyFkX+HfnaYdqmoIiidLPmsFVfnb4tthRTUdxxm5trBkYCOIlFsv6On
7sA1yK2mhME8ouVkSKuDVbqTzj+HVz97lhv0NdMNWL3FmHxxy8EIHQtq+To/
EAI2JRwioQ9u2ZjkIb8LjHYWAG7J7nNN2oXqKV6dxaz6GVEruXrZx9p7797p
jl7/FXMsZsvS2nt7btOM6Q46//ocprdvNms050y47SS7U3tgjTC25xwr/00d
ANoXqGPnH6wjCEcz9v+ZMt14U7JF/hMksP/5V3V9NLgP8q8uRhcXTEK3mOWt
xqGLRpXfnhdZ7mTv6PzHGTv3fONG/kT4gQMj8vksfsbWajRQpAe2lBHXnaqZ
1EpEZ7rhzBSaZKdEz0laHayQVnvLOrR6Y/55aX4jvWtMvlLMoe48KetnUdon
sfMLMndqIQP4VB2NQXurTmAfJC7xqfts89r+AMD7hUT9DW/Dk1/IwYgSG9F7
6B4rvDehpfHqFoq00MotiXSHxnxnj7PNRJeO/9Y6/5Qxp3Ojn3Ub7O1pWKqr
mUXXIRV7Ub9e2ybNXZfPTlFN7VMTh2mK2+q7Om9k518Z+XEX36+5mKUbsLo+
h4NmnHmf2rXITjl2b89h0YcTDB+xt7D5Ov9oBdZeDvC/tx5tIqk16lUML9wf
wLOzBrorZv9W8r5Gv/8U8ZBuAvtp8ca8lc6/PvIvzaEgXMvk2SEATSDVr6TW
+UeKbhpiby+SCSULvmKzjT+vWs/y4896WtJ7nJzEs7amjmQcyOJpWnoAZ/rT
+d9Gi7OnaPWW/C2H02b578h69KIzpfNfW0LNYfQL5Nv5x7VcaISDEo4XZ0dW
r3M7XT9F679id4H99ZXqpackltYflutzmNL5XZ0HyX1rg17hnbLzn684IfKX
M7mOrD1ODRM4PFlCu3DcTAQ6dv6hQBlcfgBYPoIGb2XzT+d/F32GvXfaHkuh
a7dkugOHaVLnn+y+XjKYsPOfAzHfRC92fmA/k+yCgv1Cdkh7wqTskdxvtgl0
DHAW5UVTFRVKmeJVs5RA3kRrTnocDriH6qa9FB9TAI4bqBKpPGRieqlUp6+L
KpdqrQTs6g80kaDjqUuhEn/FoNUFEGiHyjWo+bz0cFhdhypN6d2lv7ewpVsy
0/2Qn179ue+YaoPSSDv17fzj8o83pIK9Am3nn51ZnF9NmElcgZhc6mcvOn/z
IN1IHW9N/QqKVXa8pFvWpWGC8SWKm+Zu5RfRdbnZJnOzN/45jUtJ7S7SxrPj
TRFznfIP/8ShYkyhzZjvGneX2sulcOilMZHUktTd8lDyG60DSYrxPFjGlj25
G1UhauTLMCh/5hIbkNWYIspVrqaQ1ttkVYVUrbNLjA604bYoGyjDMmm1wTyR
w55TuH5H/BKqALQZmwSVnmb4bKvThfRutdmhaE0Gqyu4aIwM6jKZZszW+Fgc
0Ud01zzhsBEOQbro/NvE3p7DBG4a9v/ftfNXY+By1bPJ3DTSVo2WpXv/sLr2
WerO7Zc2TTdQXV57wO8RvqQ2Rl+o+VGZArWlNHndXu68j1XJ5beAVa0A6Bib
ZeKZG7bfQLmZzLCcF/T9R3P+xirE6G5pzKmi5v96Slf+a/1RlzTEDGSop3Bi
g0Du0MBe9J+ci1kmPMKZ6VUla+jf+kuu69jblTJc/obcEq5OVtRLNnpb+4zN
offxrGSy9lOFTFMeMssj//ocZio2tyUps3ePltzJdQKwFK3TmB31M/+KIrEP
gP2kqW0Hzwcr57CFIX4e1ZIJJxHT+/ktY07RDiTuMqu3wluXdpWOIb0RaqV5
7exrT9js6uxXPLlTdLrAOVr/i/53PemnqdX5l6LP2vnfSqixrkyL9zVTZXXH
U/bUxOHaPhxTQeJTcWvvDWiNGs1Mj0uWAFjvEBn/+2W25Ttz66NJgY/qR3d5
Xu9p1Dzrl7m/Sj9i7/DyEq2v86/PIdLiSvXi7NW0Pqvrq0zpA1oT2450nL+3
Zwy2ndL71UKY388/rvQaqI4FQb5RAtD5ylgnrvH/DL0F+df32/MKCHxTL1tc
qb6spv5Ct11f3H+Dw5db/m093i9HljyOPbZNlDaoRSQLyIu2zrTLES9zNjSb
ZzpyUMosfRv5z/N7sGb0OTpZJ47Iz7DyBlqcvZrWeal7dIvGfKkZG1uNq7pa
5L+4UtllgaYYeW2aJAuM7fxnK5rHWz9Na+3ZyV/h7dq/phko8W3vnHnwxdXU
TD9D/rO0eGO+hb1v9QMsbkuB5TnMdKx5DjrUuQVu8GCF1zenDEdSU0i1d+h4
JF/G83MFdi88DieweiDCwG/869t7VgarTPW+5VVpcaV6cfYMweJW9N4S3q9J
jABlnbEDFxcL96kg/8x+/nHprR3D7u05sva4a7tQF3sontoSJhPz3WZWklgO
X5oTvTKp6dDSairS+hwirb3fY9/xfZeWvGyg/hrB+16cQ4vKOP0gwYWJyaVW
x28EHTt/b72gq/aPVhMcOz8VxYhaHrwyiXRg01utbnD16K6RtupG/UGKJBMZ
NyECPvkWrI8Gd7H2wOLIfyOdv1JWv133XLKfN+aUKfoDzdiUqXT+zYHTyyyo
Qp5Ddwubg/yligbkX6jOiZnaAlQiYwzDlIdFfZjWBiuk2+DV4o25OHuW1mf1
exxO1uPaoV8UoK0WDc7d03t7Thr5sYpa59eK/WFRM7jdw/lLeQ+mhK/w0y3z
OIlJvvBnp0h3Qf7F5yZxXfYcrtbv9PU5TF9hEthj1ROX8QPhQVI/XAw1XQCs
Vnif+r/2tAlExX+W3NJEiWOX4BSZYkNbURXALLYE46XTDeNXcm0J6fgvNQGe
jqkqVGSTPqVU3HwlkzLpS08rGPQ+2Ms+eTO7JWkVpdrnYWnB5MyzV2WV6TfI
f1Khhsm3clTaQU4BqLzAO+Grc75ntbUnI39wrT2Vkf9svZf40XW7bVuvQbtr
Ct649+pSeTW2V7f8sH8rN2KwjEmxTYwJx/pWnWDSOVUc54Xsi7vJ1TizAs/v
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
    "], {{0, 356}, {510, 0}}, {0,
     255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{837., Automatic},
  ImageSizeRaw->{510, 356},
  PlotRange->{{0, 510}, {0, 356}}]], "Input",
 TextAlignment->Center],

Cell[TextData[{
 "\n\n\n\n\n\n\[AliasDelimiter]",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvXfYlcW1wPsZK5ZoTI5KEgtRxF4wIhYQNFiwKwKCooBYokZUwIaKKGID
uyIoCipYUSzYGwjSexHsig17clJUYN/fnd991zPs7/vQeIzn3OfZ64/9zJ53
ypo1s9rUep1OP7zTilVVVY1WqKq67xdVVf9vuFSBClSgAhWoQAUqUIEKVKAC
FahABSpQgQpUoAIVqEAFKlCBClSgAhWoQAUqUIEKVKACFahABSpQgQpUoAIV
qEAFKlCBClSgAhWoQAUqUIEKVKACFahABSpQgQr8MFi6dKmB77777ttvvzW8
ZMkSf7/66isC33zzjTH//Oc/TfDXv/7VjB9//LEp//a3v/mJxIsXL47En332
WV7dv/71ryg8YiI9kRQbn0CJTyQg/OWXX5bh/E2CqNQE//jHP2yFnyjBBKLH
XxLk8SJJLQaoWmT+/ve/20yTffTRRwZsrygJn3zySV5F4FNGXsu0Xmp55513
IsHXX39tWGr7SxoKySuKQsQw6JajHYSSCNGhwOeff24gIkXyiy++CGpLBBKA
FX9NABEkmtj+93//tx0UbfRr9FReaQUqUIEKVOD/GiDVUVgI/NBQqLb77rvP
AOrp6aefJsG77747fPjwESNGjBw5ctSoUZMnT0Zf3HXXXWaZNWvWmDFjSknm
v/LKK/Pnzy8lDUX20aNHUzLlo4+effZZNSlqtF+/fieccMKrr75KOagM0jzy
yCMvv/wyv6+99lopqb+333572rRpVoFyRMOqpFBhqJ5FixaB2JVXXnnttdda
I4WAGL+oJAIUTgICoP3BBx+8//77c+fOFUmskeeff57we++9F6YLkZdeeukd
d9xBLqoInfvcc88ZeCtBhNGAn3766cyZM0GYVlMdKJUKzUshfCoVpgW1QEPK
JMvHCUqFdVFKShyaqJohGn8XLlwIzhRiGqqgcJoJETSHNDNA+8MPP6QKkkGc
sE/4OmHCBAhuMn/nzJljvRRi68IYKCX1DekoWYUOwU1jmXQcVThUAnPtJcJh
EFagAhWoQAX+fwSIcXQiYh9N+l//9V+q9ccff3zjjTdG79x9991VVVV169bl
d6211mrXrt0zzzzz+9///rHHHkP77LPPPquuuirpUVgrrbTSUUcdZZnk+sUv
foHyJdyqVauddtoJ1fP6669vs80266+//r777ktRnTp14iuqkxIo/Je//CW1
k4BiUVW/+tWvMADQs3vssUfTpk1zVTVlyhRS/uY3v6lTp85GG200ZMgQIhs3
bnzIIYdgroDq6quvToHrrLPOZpttdsUVVwwaNIhIaifZ4YcffsQRR6BMe/fu
3a1bN9C+6aab+EpjybLrrruiT63l4YcfpoRx48ahB4nfaqutsEnISOEYCQMH
DqQJDRo0ABMw33zzzdH7esQHHXTQeuutF6r2sMMO++1vf0sCUCUANbBDtttu
u5tvvrmU3O0OHTqcffbZhEkJcbbffvsVVlgBikFhsm9TQMOGDTt27IjVIXqY
B7vtttsOO+yw++67k6VRo0a0Zfbs2bvssguIrb322ltssQVGDshTzl577bXl
llv++te/phxMJktAp2urPPTQQxCZMPqdwQC5KHbnnXfu37+/KR988EGyUwvl
zJs3j5jx48fvueeeVHHooYdOmjSpVEySVLz+ClSgAhX4vwxKaefYlybo0aMH
6q9evXr4fXiOq6yyCgluvPFGNCNeZCl5oEh4HD308imnnEIAhbjyyivj9o4a
NYpkaBkSqAG33npr9CxZUHmXXHIJ5Z955pmkmT59OjoUM4O6xo4di3IncM89
9+Cb85cwZgPaHPWHs9ymTZsNNtgAXYmDqWdNMpQ+xgM6+o033jjyyCObN2+O
2kL3odNJMHXqVHTZaqutdsIJJ4AVadCSFNunTx98Z6yF22+/nWQoOJUg5kHr
1q1LafYbfXfiiSeWkkYmF83EcgBblCbNRJuj8SHLm2++iY0BYrfddhvJaNGs
WbNKyX1+8cUXsYswZqCbanrixIkoStQ0ihJzYubMmWAO3TA5SmlmoG3bttgD
0I2GHHzwwdhLUJvyP/vsM3oBC6p79+5YIIMHD6YVw4cPt/ug+RprrHH++eff
d999EPmll15Cy1MOWvvRRx+lCqyyDTfcEHuABGSksfQOvQYFHnnkEb11iI85
Aa2o5b333iMGw4/GXnfddTSNlvKXcYK1Ax1oI9of+4QY8MdaABmMAewZUK0o
/QpUoAIV+L8PuHj/ShAxvXr1wrlDbaEg0MIIfPTaDTfcgAbp3LkzHj1qAq2H
EkcZ/elPf0KxooXRFP369UOV169fP9a+UWRPPvkkGgeVh7uK1kZvrrjiil27
do3qyNiuXTscVVQYihJt+8ADD+D24kXirqJ30JX43c60q1ko5P7778ernTFj
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
kt9jQSEWjmPmPBYCwkHWDFDjKO4sX0dbrSSqhJ3TDjWtzaAIMpnSTN2kCAWg
56BBg9Bc8AjZwU23XTYRpXzeW8GopI2Gh7mlA6sIJU2spMdyhr2gfWIJoRBt
aUjLmLsAE7wGrESoR0YNJ0vLLTp1qJ61Mzb2lMvrdnEsnU+stkPD2kUvVnNi
PASIoZTUDoRuHs1wlkkSRScaEwsxuSJwjiWfU4oxkA+PGBsGwNnVZxHDZvYo
0w477OBRR9x5ryzzYJQ75Bs2bOgu6B133NFzWA0aNIhLsf785z/nwgEXg1GR
MzuciH0YHF0qHtGGYUHj6aefLmUPyNIoJHOZkEFeIcwNu0uZZAoQp/3DqKB2
JDPld+jQQR+QZsbmEHfLhEEehNLxzBe5grliQUeOiDSxf6OM3bST7RQTE487
E+spioIw4cJliJ0wYQznk43yvtN0sb4Qut7m5Po0puJViGpAvWzVeuxq4Bf/
iHFujEsJKrjclXZXZCz3h1sdayVhh8QsqJMSoUBDNUej1NEWEvsHXAKwXaKH
msMT1Nkn0mltmqAGd5Yglj/4a9Vh5IS5YnNyQyh2aOs7mz3mKGLPrSjlZNEm
AT766CPagoj4SR6X/yEgp+C/33zzzdLENw3dZ4Wsq1evnrY0WjI0JpwFCxhP
R3zyyScEGIrEOA3CX9qIvqZTCC9atIiRaXVh2GDnuK6hpiY9nhG1QwH+Uoha
DG0L3XxCHYMNG55cTqIST6Qr9RTrXgvCNCdWTEhfSiobeeLeQsuP981F3o0N
oEQYc44ecW92GaEAn8olgTLWVUt+R4wY0bFjR7c7xhpZSOncbY/JutjapE73
UICiPtzqMtdPVWW8JcSafsx7x4y9EomudK/yhRdeOGTIEF0YZ+o0QWOvVEwV
5qohisq1oWpd6ZRv0NJnqT51qcJ69tln+YrTpL+s86IqgZ533nkng5B+d5uo
hk2owvHZuQ8xmZCdICib91DzhsZUjNgRioJ8UkUxq9yLZdyYjZQOzkk+8cQT
3bt3V+XxV39ZiWQVMY0pSSemra0uCSmrowmxdB7dRKTbLcK+EjF3qYmGJqIT
EQ4zYuxQVT+acWY6WxFTMbH4kh+1CEVjf8VySUwsaMXlWx3yaWqXY8ji8Uyg
U6dO3nIANerXr7/mmmviYbVv337gwIEnn3zyRhtt5NwmcNlll22yySaUc+ih
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
U7MuXkrPiBR8XScZIBMF0LXSBcL7pEnnLwvIvGK3McPDS6WctGVr6C2hajLT
SImaxOWJ2url70pQFrJXfc5puAYuGbTyg9EBnoBbC1KtX4/9JLlKwihj3BJl
oDVMGIuoKXi3eSriui9qC7EsL6KXkoPw6dQiby8qOQESa6AUkRwCDqmb/p4T
PZfi57Vat2E43Vi/WK904dGkK6P2yucuuugippDKbglmTFChiqQb9OtSZh2k
BrOggQ4p+Ulggq4Puh4kHXgGsGE90kNastHodzCIW2655cYbbwRyQMkrr7wS
Umw+W23vQg7slREiJIP1waywfp9szfrjXgJDh5d5pp+8AQwJwQOOwEQQyXrW
lBoiGt+CWxlxBtryFtK+U4PZmauH2bFWl19+Oe332Wefyy67zHxQFviDFDCd
d955h+VFLt1tt90YW79+/cA43QURFWAiSPgyTTVu6Q/jYUn1xlley/ytaoqt
cPEhc06y6ffffz/EsI0U8/zac2EPaiHROgIheKxfvz76adL6MdRY7SCAppEx
UkzBT6U+rD8nUCr15uw1RY8RcGbwU9nXDqD/v8mCLG6CJg73RwxgFiCaHBn+
Hv897r0BWtpEfEgFyAZfeNyv8wAygAJDggG9YfVuuukmhiH5MtNFu9SJq+Xf
RSXDLROBNnZKBpg4QXXV3HoeNa6oJfzU7tPPklr1I2w6NrpYxVfXRF7uMoow
5HpxyaWjRBFz4mtbFhvSXNAe5S+tNcTziRxQOuZVTULRZSU1H/sCU7jzzjvX
rl2b03M5tZ1oSKel5JE2AN6kSZOWlooA2hCWlBJvMnQ+YV3anXfemRulBaCa
xgY405vKu9DuF/fYYw+TdHliLraaMhRwglYcd9xxjlnsMH7WIFnT+ICMEG1+
BQ6vueaaU089FaR77rnnmDX817I7nSZXP7iv2M/nNPsnBZls12Y8PPLIIxkh
bDQ2BDuxvZw3Rn45u1Z0/sKhumqCOP5qMPSIzfq2neJsbMwapBicVVtR8Og0
kf5cVh9eumUNwaQ5pSVEz9QHi0v+wJtvvplmOuQA9iwLDB2upJsN5FHiA/lV
jmV3THLCMKByHouo/IojHgc7AAu2snQSUlMQR3DiCYMxpYOWq5x3q1yrhC6u
efJl654f8Zac0Z8YmOdTKum89c1vfpOF5Scd7bqJCjq8/byWilZ9Vt3O8Vbr
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
dSiMhh+IR57AKvqvLoH+GAHWZwL+UIMW/qwlnRQoYPP6mjg8Ksb/uVw/rFfS
8IkdbRChNMnyYro6fMvwSsJe5QRcEc9u+kX2ApILYxhD9ABcxOFozgdrTj3Z
7Kg4Bgc3y0cfE7JWzGyZ86D/UE3yFSSV69ZYTuRibRt+Fhooly7ixJsgiveh
xoswsrOahFaZk+600D9QXf9kRRwN5RehX5VmzghGQT9Sf2BdK4LYqGRyoxUJ
TyJ/YjMy4DmbyHFSGBVblRMHj0taJk21g+PpJygW6LcjrZYpeicVBY65+oH+
4knBdfXVV0NbkLg98lCDMVxTTrfQ76/jxo0LhUdwgJIAFogD3D/33HPIO516
cCkRQKoy6M3flaD9EDf68sQTTwR5EawgO7ANUiHJI8QWngSJxhwWUAY2lyGF
/TT3oBXyFDjF15XHoZ8mBhXQd911VyBp/PjxaVIsAGUA4mn1zW9+U4EUsgz3
AmQDgsCuIf6UZY4//nj6OGnSJApA0BBzTNAwefJk6uFbCNGeMrOSqcGjJcV5
Mws7s9r1mXDQg4CoAhxkykM51ZOwNZg+Y/jDEgSvE4GHwc+RfQ7r24P7P3oZ
+5cXWQ8q58EsbugXiw16zmKj4wwjdJ7uJIPeYGMA7I26cTrFZDG88oSIG4xe
Ir2oHkfMRz6lgP8CoxSAyWF5UMxjbjAFUi/Z1L5rlIHxUI22AX0GN5XueSJb
7urVv9W9zILUv6CnuF17fiehYG3A8tlg5vf6669njcHgIcrB6bGb+Otqufji
i2kY48NfirEAvva1r8HewHvAHTFK1GPwcBa2DmjKCGyul0vObtCcpSXDA9sJ
v+FSXLx48WWXXeZSNBpep8SV8rxPDblB8DxMycGTQfMYMagT6K92xSgZxuPV
cSaOqw41o8d6Q5R2/DVihIGn8VJsg5TSEaCcbaXpi2HDwX3EfJaiGQ91/9H8
j7d07czRHtyCeWP7q0eAhFGY0/+CKTP0vdb7rq41NScs9SOxXnnllbp4R+Gf
g/veasUnNbZCidVQjaXWu7mH2nATzM1zBAWiSHAK4Po1BxMjJMaVOzZ77Jcl
S5Y4xVp19mwesMK3NFbXdjQ/9VWHVoeoddjXHE7WpZUfI04GUEZqCjktb4U/
BU9mhyX60EMPvVwywPqh9gAir+fcISfpVijBzwhEHm/17eK7NuoCnGTN4W3N
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
3SHQe97znpqYHQjAg3mC0yfbbhIDzxC3vCPOJwhxZkxIbPFbhj5dkW6EpSZs
u1KkKZdGGdmF5re7o4S7otrOpGf6SYfKYZ5TwS5Eo8/vgu23aSHd3qSHXgO7
dnMeSPdE60JTLFRc621/AoJepTqwTSYmNHY4Nw3ZPSzpHORgasEGA6AtWlFL
hPRAUXMb3nacrZF+1dbrrgXJxEsN87NTXcgCD/1im9/apRYLWrHFkE17EhB9
NEpVTN/bmgIniEXn5z+0SlsU4t/fpRnp11b2fa4HSoK6TqiVjlbDW2TpKqhu
xpHJG4FwMsjTaGtNdJyUKcn3qCHd5ChCYNLXpE3y2AMMdy9VxzFgxt/Wyrsw
ZSR0SKPaZmka48ustvjQ3+yj2poUbSIr1679OboDkkJKdjU5KiNo2zyCKtM/
2iOVklHDYGx6MX9UhVIMrpJNWyFH1oE+z2ebqppPaDEoTaUASGiY5iG1ApgO
YLaDKJnCwNl9lTQ/AwlzpVcX37CeqKOwAlioCxPl+NtCZ/v5m+qcdfnqjyeT
3Fmsr2vFS/d52O5Onx76VT9paod/BNJE+jaumAuGar0CqdzYmN2hD+VAYK7X
n+9Tx2qajxpDRgZf9KIXyaSs2s4ED1dffXUT/u29z78tAHLHNDzACVQUA1yP
mkVhOPha4XPbnaDvTi4g8Zw56i1ZbrtJdYWL4NciY0tX/32XlNGdVjzjjTxS
VPaLrF3H2WJK0yDxuQ/1KP+wD9nf3M6ZEDbi6Mpv+YXn6lDVXN+TN9VsfOP9
qpLZ5ex4jIuIT4rI1y1mnRzneT7mMY/RyoUXXthBfpB36kcxKOJJbvvTKC3c
pAOPXvDxFaU1+mXHn2fVW+UgaSW9++YaEzXaxQxpCa/CRtNE2Q5lYuD4OT5M
5NMwaYxsUyqrwuCZeUUWBLc0lVeIEsUa3PnlilODbD0OKSo1YW++kRopZJOH
BtRdo8nuy6cZsIEKsV8HjbucURmubxOq1GzB5Jv4wpBdNpd/nk1JyzX/D7D2
kzcTSJUZF7ckoeaZl8AJjYOadaRwuMcd71VzhqB4Hfqy7Y7wk/28Wa0wmk98
4hMRAgMwuHiAac6tTZbXq8Saf87ujAYYEmQXfEJVwmHecooXwv3lYEAXcaun
qe7W5auqeIBw2OCiKSyfN1KGbd3kCCnTZq34SlU8OpDnU5GRptmD/4+W1PQd
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
uZo2f9PtXOPf9PnIp/w51Ndv9d/k041kLA4Jm+FBzdkEE+hVsnvbMPwbNWr0
6xHCF/sLcYy4/OSTT4TcWbx4MYIeS9mEBYPPXW9y+ckwQleX3DSzXlTi2GUm
jnOwoFB9VfxPl58gIUP966rTokJWyy3Lli37x0Ic2Lzly5cv2QJ5uy9CeUry
Lty7YgtkcD6GzOTJk3lHJULShxs1atSoUaPfDG3cuBGT/OCDD95zzz132mmn
vfbaa9999+X3bwrtVWjvvfceNWrU3xYa1ZF//64j7tpnn3044Hf06NH85Zdj
b6GGvqrGjBlDAWvYpxDHKcDJ0R2l2v3222/cuHFjx47lwEeM2TLt19G+hVLb
2C0Qz+UpkyZNevTRR3vFrgluWKNGjRo1avQbI3OshgoIjGsBWdJKnkgWyALx
kTTkLFplo9UghPu3XgtLeYOZ6wWsIIbVdaaSJCxnaazefnRLlJW1vNGWSorl
sq7grku/ZJmyUaNGjRo1+j9LfWuXyn1EYb3gWIdPbKmen7dAudoX4GG6kCvI
nh95pm6A0RpZIM7S83/+eVQnK22WssVJr3hCfq3ubtSoUaNGjf7aZAQOIu+b
siXHXxom9FuiOpPIQNm/bnsaNWrUqFGjX4M2m8qB4V/DetTm84+bUl+ZoH/E
eN8K1bf0nRxJI69uvfKtVLVZ8sU9Ruh///33I9M9GjVq1KhRo98M6fZH2G1z
TPvPI5LC/gea9b9IQ0NDI0+KItioUaNGjRr9xqiW+D/88EOvZOlufe2+1y3u
11Z2vY7/XxWowmbt8a03aesxAyObMZLShpE6yVbey31SgsLxCzq1UaNGjRo1
atSoUaNGjRo1atSoUaNGjRo1atSoUaNGjRo1atSoUaNGjRo1atSoUaNGjRo1
atSoUaP/N/Tf5zR9Kw==
     "], {{0, 310}, {681, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{973.499988377094, Automatic},
   ImageSizeRaw->{681, 310},
   PlotRange->{{0, 681}, {0, 310}}]], "Input",
  TextAlignment->Center],
 "\n\n"
}], "Text",
 CellChangeTimes->{{3.48795566971875*^9, 3.48795567721875*^9}, {
   3.487956468453125*^9, 3.487956494734375*^9}, {3.487956823015625*^9, 
   3.487957096546875*^9}, {3.487957254109375*^9, 3.487957258828125*^9}, {
   3.48795768375*^9, 3.487957692875*^9}, 3.4960733595*^9, {
   3.49607343353125*^9, 3.496073456359375*^9}, {3.49607353878125*^9, 
   3.49607354103125*^9}, {3.496073666921875*^9, 3.49607372496875*^9}, {
   3.496076010984375*^9, 3.496076093296875*^9}, {3.496076145796875*^9, 
   3.49607616803125*^9}, 3.496076334859375*^9, {3.496093827828125*^9, 
   3.49609383503125*^9}, {3.49609508515625*^9, 3.496095089984375*^9}, {
   3.496095203296875*^9, 3.49609520525*^9}, {3.496143421859375*^9, 
   3.496143422109375*^9}},
 TextAlignment->Center],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.49609513078125*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["One Dimensional Evidence", "Section",
 CellChangeTimes->{
  3.496095671671875*^9, {3.496095703953125*^9, 3.496095714015625*^9}, 
   3.4960957795*^9, {3.496096226171875*^9, 3.49609623796875*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.690720832531888*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], Thickness[0.005], JoinForm["Round"], 
    LineBox[CompressedData["
1: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
6HEenNLbtzo+OqbLeSmg6/8mJRA9y9gdoSdCgR3cdIX76JveYfdr1lPAqq67
ZBDtny3LwCBLge9878h8+zFfd58bGZKnwFKzoesuNLOnm7WmMgVE616l+KLf
WPS3LWynwCNN2Qd30dapmhZ/VClA+uR1/z16naXl0y1ou6efozkO0Gkfmp08
gvHzV9RZ92iiI3SWIz7i8SPVrn09gd6pvO2NySYK/P4V5JqFNpPxe9kqTgE/
vt8vX6Odq+9eNhGmgH+iKzezMdYblTwTdDa8v5++Ksro9EmHo1l//uU3cEH/
K68x35f+XCufiPb+kfb9/nsybPeRXtOEbvi2sk8R871BeE7NHLooQsNHoZQM
oXGORzeaYLyJklXaUsiw391hzhJ9WrKOIn8e8+m+Qd8Y9I8t3Wbh7mSo7jEd
eYLeMmRSN2dMhmsc3rvH0Cwr96YatpPBxmx9mogpzs/upcKSomToCYn/vhfd
TSkkmzOSIaOeqnoWfWKdftTNrySQqbIPL0DP3r2ZufMVCWqPb3v9Aa22uNYw
AuM5RCpDhtMM84Vgy+2XyZhvijNiNNDup2SzrMJJ8N5tcPE4+lx7TnXwcRL4
qJSEpKOz6/ziAixJwHWWh9yOTm98eCdSjwS7N2S9/Is+qmBe8H47CTamFt2Q
N8f1pTLJNHsTCbZ1yYc4rHoky4p1HQlMtGsjrqK/KnjESZFIMPbuXn4dWoLe
/JLMT4I2wbdTs+iCJ1+mp3lIoDvXbyF1kE5LlGtceMr7L78NH0L/K68FSbBF
WTomGn0lXLxiM5UER0SHTSvR2Z1DcQ2SJHjQcFRjHM2R9uO6siIJEp6l6q49
hPNR48VFZyDBgjCbuzF6mPf1ipIp3o/7x/xwdCW5bDrkKAn0O1fWVKBbrJc2
kYNx/vo66juKrlI04Xl1gwQrr14sUizotOPvtgo5lJDg6sYT8UboQfvvT69h
+6eI2ymdQ+vVV8RTx0gg6fB0qBTN1X1DroCI40vI/OoIumHX8Z3fZcgQsy53
F8mSTnNzyJsL2UOG9lm5GQO0JE3Gl82VDAHRFTeD0DyzzBVKF8hQcM5GqRht
q2oJhVhftMgkPP+I9j+vKr2ljgxHzkqqClrh+oeh5M/xQTJoSmxJ0UObXW75
sG0Bx+dx6pcAdFblRdc9WP/U2jwWKkA3tU+8OIPx9CdFTHYA/bN+8vZtLQrE
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
9OKQYYODUkcvaKGtB5xeKYSywWnqtSce6GZ32wniOzbgOXt5SzK6iPPjNd6N
7EBlvvOl8cvq74VZ/7z2ZYcNjUZjP9Gcj398H3nODrqy4tobvmK+kqktmmDi
gG30j6MmaC6/B7zZNA6Q4Q0aDUWTNi45VZ/h+Pf8oOTrf7+f4wBxz9yZIXTe
kcLSoA8cEGnfscIzivVaYvnIMBMnPN3G5AroxrNmvqo4f3y68UP6JPrAjkn9
CG1OKIx11cxGB/v/au415wRnd8+7XWhBj/5PZkc4oe/DBkeWb7hebF1PXH+C
E8IH3rmooh/3HNgafIoTDtYsFB9Dnzo4237/JCeMbJTZmYaeir8zynKcE8x5
JBbb0SRbwuKYIyccru4cY6Tj/gJ1HK/MOEG3V49JBS15PSpXWocTVA+0bndD
5x92moyQ44TM6MshqejIMOm7PsKcEHPSvLMdvXD3k2zAMgfMhMVtYBqj0ypE
FWJ5PnNAzTMTbxX0+65tl4qaOOBNsU2xG/q3W/Kd2gIOGPfh60tFs69LZyq8
wgEv758ba0dHDTOGv/LhAO4Y6w+M3+m0/drCD30sOcC8bvmuMrr4dNnID00O
WJt+3MgVfcxRkxAiyQEfv5m8SF7dfjm7xY6TYzV+eF+h5/7VB+zQ1eQt+xed
x37iWNcwOySV7BZQGMf2KD0qXtbGDiEVTS8d0Yo69vJnn7FD/uHRfQnow7F/
GjQK2WHzI42sBvQxRvd6hix2+OtAqPuFvl7jXNN0nR34w7ZWSP+g065d2sJy
MRbH00sIskCf77wWpxrBDs5+p0Wi0YsZk5yPQ9hB2vhuwmP0r1LpkbEz7KCe
Zzf+Df3NPXfz3QC0fdMmygTOP29ci576s0NxX4WJAfpe8sTYBJrhXIp7IPoF
u2jaCu6fFMh0Ng8teU47JR+PJ3mVHPMeHf1a+llJEDv430hOYZvE+DWZtu/B
81+07y7fic6s5/H4FsoOZ1/n9R9Dcznq7n0Qzg4J7y4Jp6BXerKnCXj94Bx+
tAXtYxjfX4MW8JXoXERrmNVzPUG/4k84tHmKTuNf2sXz+jzWO0bXlmzQ55o8
Zn6EsUOO2vGGS+jPBV8OLIT8q69LqtCB/35gwg5Pmp7XTKDdPvKH3cT43N9Y
MLduGtvXtUxW2IsdXHcePmiCbvMOXTzoiv3pOvc+HF2h/kzO0o4dIm9tjyxH
N59djJYwZ4dUbZdDX9GHrcQtn+qzw8EcByPyDJ12++SRE0oa2D7qN132ovPf
7ZdO28oOVwO4soLQxjxPHDnF2eFwn9lCEdqE1B6TycsO9qPxJz6id9mzX/Fl
YIc78kFLArN02s1X6vQHk2xgbWSfqYdOfBKWFDrIBrsPiJoFoq0zdnRxtLFB
7qXTAvfRN8xEasKfssE6lwP9g2iDg3aifPlsQK2oyeP7idfvcWd26CYb9HUT
A3TRZQULGULRuD65eX2XP/q3b3vDW382yD6wTMxHt/kzWNHc2GBbI/FFP7om
/22anxUbXNmVd5rnF512x3x57VWsL4mxy4I6v1a/T4t/mqfFBqUfjG+fRm/N
5kl7t40NTk6JiN1FMx5wVd28kW01v517j/73+ttaNhh51vmS4zfWl0Tr5Vhh
Njh18OK8Jnr/6PubpTxs0OZziN0bPR7yp1ORnQ2+acYu30LL+j/O5Gdlg6iD
BZ1d6JQGHyMLZjbY2esSzjJHp4neW/BgYGIDe/tEPlX056JzwxzoTQy7g93Q
rg9y3p/G/W8a5jYkowN7vbuV8Hi++6mjLWi5hIOpWng+p6uKI3/Qk1lyetF4
Pc3k20+3zNNp3pyaaox4vZ+OHPK0RZdvUZRNEmMDoU6Hhcvoh89uaKhIs0F5
mrjDc3TLUP+DF/Js0MlkkT2BXpJyjVdSY4PrcbK1axfotP+r4W5jmrrCOIBT
XjT33GuAWLGiYZqmNJgZN6aCq+hzCa5E8aWgFRXNqqxWKQqtgGB0RrERrYgg
UUTQIliKTplbCkUFqSIJiIAuo5O31Ch4qxRrIoITukfiPv4+nE8nz3n+T869
p+bq6P09KykImyuuX4tuddUK4mUU0G8jig+jlQt+2MBtoyA9q2nLzbEv7zls
FExLouCDMdPdi+7L0L6/jfOnf8VB/bRPHOu1iY1v1VGQMSLziUD/9NBmlBZS
0Lf/dbIa3aAxiwPLKeCvyWspRnNFdVOW/EFN/r/Qip6Mb1YKinbEaT+hYx5V
imc/pWCohG4J+ZdjozuiZO12CoQLfedvRlsSkkxlLpyHB01FJ9DeS52v9TwC
c9/qv6lFu8yev+v8CVwwP7EOoq/fYE/lzMN65L85OfMzrt9v5M58j/UX/OBX
KdrXWRBcyBJo2lliykCPHmzJLpQR6D0n8q9Ei6ZoFuYqCLzsUjfY0FWj/B8P
pRKoL+XuUeMc6xFluKLA82H7rYwACXosQSWVnCXgG8o+U6P9tFucxECAWWsd
L0X7Np0t76wmEPLocUknuv1DryTvPgFqaqrFe4Jj1ZFuibSDgFg8sSEcvf7o
tRcj/QQ6BnhaNVooThNeHsb6r47mG9A9y8aNK9wE+Od7w/5GW3Y3tnfh/Kba
TLppN8eyzkXVyiAaLNs3jbHoFRV3+G8W0JBee0p/AN3iVXV4J/ajnnm/6W+h
l89aKXoSM5kPhgfc/39fhf1NMfV6kIeDfW6KLkhNosHlzq6Wo4nUKa/APOET
kenKRSv769Y15tCgFAm3NaNvH78Wab1Aw+p9HnY3mjdYVFVupMGc1aYK5zlY
w6q9tYlmGnSy430p6O/yh2InHtKwy6iYb0LnL30akPyMhu5/nofa0SPyZvkN
Ow2L3xl7BJ4O9vFF1eyaYRouF9eT9ei/1kUKT2A/nx4WV6pD+23tfDGLZuDn
Zlv6XXSr5Fi2UsBAiu1bjQsdJO96t0vEQLI7c6/Iy8FmB7eJBaEM2BMCY+LR
h9JiL6YuZ4CX9WAoB+1Xlhi6bxUDldG68Dq01eAXx8gZUAjbp3PoSg+tLQrz
yda2X3YHeDvYWHvNzBmYXzSaZFEkuu9zYH9mOgMhxsQlavSrssG0lCMM/KkS
nT6HzrMcuDSSw8DAnFdz7qB198L1pADn9fxF3f3osUbDx6pi5sv+NHj6OL7e
nzLwHw8d9aw=
     "]]}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesOrigin->NCache[{3363379200, 2.}, {3.3633792*^9, 2.}],
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"\"", "AxesTitle", StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"Retail Labor Index\"", "AxesTitle", StripOnInput -> False], 
     TraditionalForm]},
  FrameTicks->{{Automatic, None}, {{{
       NCache[3376598400, 3.3765984*^9], 
       FormBox["\"2007\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3408134400, 3.4081344*^9], 
       FormBox["\"2008\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3439756800, 3.4397568*^9], 
       FormBox["\"2009\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3471292800, 3.4712928*^9], 
       FormBox["\"2010\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3368649600, 3.3686496*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3384374400, 3.3843744*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3392236800, 3.3922368*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3400185600, 3.4001856*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3415996800, 3.4159968*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3423859200, 3.4238592*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3431808000, 3.431808*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3447532800, 3.4475328*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3455395200, 3.4553952*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3463344000, 3.463344*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3479068800, 3.4790688*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3486931200, 3.4869312*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}}, None}},
  
  GridLines->NCache[{{{3376598400, 
       GrayLevel[0.8]}, {3408134400, 
       GrayLevel[0.8]}, {3439756800, 
       GrayLevel[0.8]}, {3471292800, 
       GrayLevel[0.8]}}, None}, {{{3.3765984*^9, 
       GrayLevel[0.8]}, {3.4081344*^9, 
       GrayLevel[0.8]}, {3.4397568*^9, 
       GrayLevel[0.8]}, {3.4712928*^9, 
       GrayLevel[0.8]}}, None}],
  ImageSize->900,
  PlotLabel->FormBox[
    StyleBox[
    "\"Trend in the Kronos Retail Labor Index\"", "GraphTitle", StripOnInput -> 
     False], TraditionalForm],
  PlotRange->{{3.3633792*^9, 3.4922879999999995`*^9}, {2.101415771554727, 
   7.451638112789438}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->If[{False, False}, 
    Graphics`DateListPlotDump`getAxesTicks[
    Graphics`DateListPlotDump`ticksopt, Graphics`DateListPlotDump`dtformatopt, 
     If[
      And[Length[Graphics`DateListPlotDump`pltrange] === 2, Length[
         Part[Graphics`DateListPlotDump`pltrange, 1]] === 2, 
       VectorQ[
        Quiet[
         Map[DateList, 
          Part[Graphics`DateListPlotDump`pltrange, 1]]], 
        Graphics`DateListPlotDump`dateQ]], 
      Map[DateList, 
       Part[Graphics`DateListPlotDump`pltrange, 1]], 
      Graphics`DateListPlotDump`datedata], 
     Graphics`DateListPlotDump`prpadding], None]]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], Thickness[0.005], JoinForm["Round"], 
    LineBox[CompressedData["
1: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
Poqzgf11YL758AzInw1qXlsGOgAAD91ZuQ==
     "]]}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesOrigin->NCache[{3363379200, 60.}, {3.3633792*^9, 60.}],
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"\"", "AxesTitle", StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"\"", "AxesTitle", StripOnInput -> False], TraditionalForm]},
  FrameTicks->{{Automatic, None}, {{{
       NCache[3376598400, 3.3765984*^9], 
       FormBox["\"2007\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3408134400, 3.4081344*^9], 
       FormBox["\"2008\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3439756800, 3.4397568*^9], 
       FormBox["\"2009\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3471292800, 3.4712928*^9], 
       FormBox["\"2010\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3368649600, 3.3686496*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3384374400, 3.3843744*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3392236800, 3.3922368*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3400185600, 3.4001856*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3415996800, 3.4159968*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3423859200, 3.4238592*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3431808000, 3.431808*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3447532800, 3.4475328*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3455395200, 3.4553952*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3463344000, 3.463344*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3479068800, 3.4790688*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3486931200, 3.4869312*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}}, None}},
  
  GridLines->NCache[{{{3376598400, 
       GrayLevel[0.8]}, {3408134400, 
       GrayLevel[0.8]}, {3439756800, 
       GrayLevel[0.8]}, {3471292800, 
       GrayLevel[0.8]}}, None}, {{{3.3765984*^9, 
       GrayLevel[0.8]}, {3.4081344*^9, 
       GrayLevel[0.8]}, {3.4397568*^9, 
       GrayLevel[0.8]}, {3.4712928*^9, 
       GrayLevel[0.8]}}, None}],
  ImageSize->900,
  PlotLabel->FormBox[
    StyleBox[
    "\"University of Michigan Index of Consumer Sentiment\"", "GraphTitle", 
     StripOnInput -> False], TraditionalForm],
  PlotRange->{{3.3633791999999995`*^9, 3.4896096000000005`*^9}, {
   54.24269703096283, 97.00805728867826}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->If[{False, False}, 
    Graphics`DateListPlotDump`getAxesTicks[
    Graphics`DateListPlotDump`ticksopt, Graphics`DateListPlotDump`dtformatopt, 
     If[
      And[Length[Graphics`DateListPlotDump`pltrange] === 2, Length[
         Part[Graphics`DateListPlotDump`pltrange, 1]] === 2, 
       VectorQ[
        Quiet[
         Map[DateList, 
          Part[Graphics`DateListPlotDump`pltrange, 1]]], 
        Graphics`DateListPlotDump`dateQ]], 
      Map[DateList, 
       Part[Graphics`DateListPlotDump`pltrange, 1]], 
      Graphics`DateListPlotDump`datedata], 
     Graphics`DateListPlotDump`prpadding], None]]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], Thickness[0.005], JoinForm["Round"], 
    LineBox[CompressedData["
1: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
oW+1RvGLxQz+A3XNCQQ=
     "]]}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesOrigin->NCache[{3363379200, 0}, {3.3633792*^9, 0}],
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"\"", "AxesTitle", StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox[
     "\"Normalized Level in Dollars\"", "AxesTitle", StripOnInput -> False], 
     TraditionalForm]},
  FrameTicks->{{Automatic, None}, {{{
       NCache[3376598400, 3.3765984*^9], 
       FormBox["\"2007\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3408134400, 3.4081344*^9], 
       FormBox["\"2008\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3439756800, 3.4397568*^9], 
       FormBox["\"2009\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3471292800, 3.4712928*^9], 
       FormBox["\"2010\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3368649600, 3.3686496*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3384374400, 3.3843744*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3392236800, 3.3922368*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3400185600, 3.4001856*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3415996800, 3.4159968*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3423859200, 3.4238592*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3431808000, 3.431808*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3447532800, 3.4475328*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3455395200, 3.4553952*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3463344000, 3.463344*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3479068800, 3.4790688*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3486931200, 3.4869312*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}}, None}},
  
  GridLines->NCache[{{{3376598400, 
       GrayLevel[0.8]}, {3408134400, 
       GrayLevel[0.8]}, {3439756800, 
       GrayLevel[0.8]}, {3471292800, 
       GrayLevel[0.8]}}, None}, {{{3.3765984*^9, 
       GrayLevel[0.8]}, {3.4081344*^9, 
       GrayLevel[0.8]}, {3.4397568*^9, 
       GrayLevel[0.8]}, {3.4712928*^9, 
       GrayLevel[0.8]}}, None}],
  ImageSize->900,
  PlotLabel->FormBox[
    StyleBox[
    "\"Trend in U.S. Dept. of Commerce Retail and Food Services Sales Survey \
Results\"", "GraphTitle", StripOnInput -> False], TraditionalForm],
  PlotRange->{{3.3633791999999995`*^9, 
   3.4896096000000005`*^9}, {-0.001343708358332358, 1.0012465290584749`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->If[{False, False}, 
    Graphics`DateListPlotDump`getAxesTicks[
    Graphics`DateListPlotDump`ticksopt, Graphics`DateListPlotDump`dtformatopt, 
     If[
      And[Length[Graphics`DateListPlotDump`pltrange] === 2, Length[
         Part[Graphics`DateListPlotDump`pltrange, 1]] === 2, 
       VectorQ[
        Quiet[
         Map[DateList, 
          Part[Graphics`DateListPlotDump`pltrange, 1]]], 
        Graphics`DateListPlotDump`dateQ]], 
      Map[DateList, 
       Part[Graphics`DateListPlotDump`pltrange, 1]], 
      Graphics`DateListPlotDump`datedata], 
     Graphics`DateListPlotDump`prpadding], None]]], "Input"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.690720841212888*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Two Dimensions of Evidence", "Section",
 CellChangeTimes->{{3.496096332578125*^9, 3.496096372765625*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJw8nHk8lN37xxHG2MdgNkuIIfu+DOYzzFAJadVK2kuFSrv2srSriLQqRcnQ
oihlaU8LSrtIWmhHpfI79/34/vzzvE73dj7nfX2u67rPzDxmMfOHT1NSUFDo
UVZQoP5L/xnF+3ZaT9hW2clF+qUjzKb3e8Vhn+oeTVDjYQl3++GyunxxhYPh
QjcjHq5vWHDb5cYZcfLlI8mWzjyEpV0NX7KtXNwS/9ddM5iHHsv1Lx9PqBRr
GOfmVE/kIbNH23vuwWtiv13c1wMX8cCZ1P52hc5t8fmCZ2aCLWQ8bVMGI++e
+IznvDXxR3kw3mX5V9XloThOM8JM/TIPqVERUTcO1Ytt/ilbXH3EQ9HBP4MH
mT0WC16rH0/4zENMy3N9xukn4tUpLQ9+M/gYVpLH2TD4uXj3bZ1K9/58LNyn
lx/w+aV433LdrF5PPoJ2v2dF32sS35o7fblbOB/nFoZ/8rdtFkcl7txUNI2P
uGIDw6TUFvHuWQZN4cv5iNbnnJ3Y/kZcIIg79mkbH7OiHbqNh70VP4+2+DPz
CB9LJ3io9Z5pE0/TKlLKPsvHolqmvoT/Xry2c8+z6Gt8+K9YFzRg1QfxvI7I
43sa+Ki1Tbr9rvmjeNbNxFRuCx9KR+pra6Ud4pMT449UfuKjJm/yCsPcT+KF
STf143/y0Uv/fRb/B0qAdt3jjN8FX8Thum01o1UEwOH1Vf9GfRVvlO6pTlET
4Kyw/q3w31fxtrTEvaVMAXr1GwZsy/0mHlb/5bUSGT96UeMUNvi7+JzWPFGy
qgA/O99cSmr/Ls6zGhM4U0kA3oO4VT5bf4h1tQ0yKv/w8b05zzrboVP8qFi3
/lwnH54HbsRevNspbu1XkjG1g4+jS1m98jldYssvU1d9JHo6W6/szFbrFq+Z
vs16zhM+no8xeLY9t1vcMirbqV8tH6zA0LQC8U+x46mvbnVX+QgR5I1WefpT
PGJ8z8PfZwifkZO/nF/wS+wRbnZ8bx4fFydf1Hih+VtcvfhOxL29fEw4/2X8
1qO/xc1V0+aWpfHRdiNgV6tfjzjJfHTmypV8aKl/nvGngYzXqsa5z+djyyfX
1Pa5f8R3H77aoTSZD6MP4YX3VP6KI5RCspVHkPiIW7OpIuev+Fdvkc14GZlP
p+rNBvd/4hMXlz219OJjVLuJlV3tP3GYGStkvS0fw28yhj+f3iu+Z/6Cu8f0
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
p+eChi60aT7keK/PZwM9XRTSfMh858X4O+vrIpzmI8L0rpk35az/5TdfUO7x
o/xL8/HFstdXLJ2JX//rr30xNHAvqx/xZyvNxxc/a41G5BM/bqT5+KJrVUZm
U6IOBtJ8fHE1YtT2KB8d3KL5+KJBfPhdU5c25tJ8fLFbdivc5JQ2dOiC4ou1
k3gLH0zUxmmajy/MNz7rd4apjQiajy9un59wapVcC99pPr5Q/vzO5BPxSzrN
xxcBwjuqF7o14UL3B77QmjCcnZWhiQc0H1+UJl//NsRDE3E0H1/cOb54xIZ6
DWjRBdwX988Xtigt0EA+zccXhvLSiJV6Ggii/eMLq+2vQwpL1PGa5uOLJcMW
rQ4fo46lNB9f7OioyOH/Y0KXfj/1xfUYreE3jzNxjObji/0FJ0IMIpnwofn4
IqeqyatUk4m7NB9f9D/27/qc62qgt2O6fJEXFp73Plmtj49f3/6bGrbSfPzw
J2O45k9zNQhoPn5oW+f59GYPA0dpPn6Yebsk+d0zBhxpPn64cumU/FklAxfo
91M/BOVrfB5YxICE5uOH4KaSpxOPMHCb2j6X+kHr9GbtP9kMjKL944eP01YM
2LKXgWbKwJF+cBw561wmOT6HTqB+ML/pPenYIQZ+UQky1g88/fqzfgUMpFhR
gv0Qtd5kzNvzDAho//gBs3qfCa8zUEgnZD9o6018mdLIQFARxccPhrXGP9M/
kuclUwvoh7x2YdXdXgZWT6b4+EH90uQnl/XVYEH7xw+7tsrrP9mo4RbVcJf5
YWfR37BWfzUspPRU+2Fogl2zzQg1WNH+8QPXYoC1dLoantEJicxH7/bFssVq
2EPv7/iBtY3hxt2khkiajx9evauwf52uRvIGxccPnfOeSvbn/I+PP47SBUgN
jTQffzg125Q7H1PDGZqPP5hDQ37X5qphN72/44+MZ3lKnw6oYTHdQPljyGUZ
uzZDDZOoBtbZHxvNbGcXblaDlG5Q/VHqMklWm6QGG6oBlfpjqGlrc+w8NWjS
DaY/8vSvrb45Xg0dVEMc6Q9PMCZaBKvhBt3w+mPqvcKzF5zUsD+C4uOP/Z8r
b9zmqmHuQIqPP4JqB9dnkvV17Uf5xx93MgcbRrcy8IluoP2xb8WNO9G3GDh8
huLjD37eHfenhYTXFoqPP4plE7ZppDPwfBrFxx8NG1Zy3BYzMM2fWgB/NO/y
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
eN07wIvO18aMwrLwdmkg0u2ndh5t1kbr6o37GwcH4vLKIKvd+jpYXBVKCkQg
iqPDm/eJdeBoyPKVjwhE4uJNUXZTdGDEu5+aExkInSnddcVJOoiITX2SMjEQ
adV5iw7s0MHL02JScALx0ffQssnZOqhb95n4hzx/bjt3JhmLk/fWhMUGYlHX
jo3m5HyPiX76ovhA5C/N+tW7XAfXDj8l/gnEywzt4/PH60DxVxzxTyD6f+u6
3uSg07cfH4gu+vf12phzZBPxTyDmW0eH1ZzWRv5fNeKfQHzul3opZ6I2bizc
8LF6ayA28Zadliho4868f97y9ECIr9/vOpaphYqIRck5mYGwn+MwvUqohYJ1
H0lBIuMprvc3F2pi7+wYy8TDgRijtZrxy14T22OfLYjJC8T162de/j2mgX2f
x1SGnQzEyC/x1jv4Gqge+0RXJA8Ep3XM+eMp6mCxJkcJzwXCQJkxyaeTibTl
X06xy8h8C0w/iyYxIe5N/tNbEYjvXgF+R2rU4KJkF9JeHYhL6jqC6XZqmP/h
6d7Gm4H4mmQ1fhl5H/1nnPGuujYQ479b32/oUcU7pRhPeR2Jt2vnhs6brgqP
Xt+NOY2BcB4Vd8S7XgXfltg0pLwIRMW/zmP2JP8MeGQ9ILE5EJn939ngkjIa
VvguiGkLRAO37d90H2Vo1U2rDGsn8SFL/5lxuR8e+x9jib4G4oTylvc3hvSD
n1VvtLArEG5nFuZ+fqUE6ef4InZPIDyLP/QorlLq84+0b39UCczcE+HtylIs
a38du/KlItIvzT7QyJTigtqLLr8Dipip7/+5WlsKL5dx/zJnK2J0nIlYzpZi
5gcXsy9iRVjtVd2Ww5VCXoy/uSaKODr668sUYylmaU504qkqYn/cE4dEcyn+
LZkcWdipgOeFF5JihFLULxWyr7UrwO7J5towOynCtyf/u/pBAWPOh5qInKV4
6DeptN9ncpzVPVfoIUVVv7Uv238qYEHhuktskRRrp9zVfsVQxO/RnzQVQOb/
ktcmEigi7aHzhHapFBpdUJnmoojv7wYVNA6WYp+tEaN8qCL+Tnb4XR0mRZrC
htTDsxSRoPJikHyEFNKukfbLkhVhkR2ekRMpxcCt07bkHldEw4fVrSkTpcga
vH3QupuKGFs+xzUxRgrl/MI/iz8oYvFj9TUxM6S47pQV/EZdCT39xtaGxZL7
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
   "], {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Thickness[0.0125], JoinForm["Round"], 
     LineBox[CompressedData["
1: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
5BOf+cJXvvGdH/zkV5D///r+Bzmphks=
      "],
      VertexColors->Automatic]}},
   VertexColors->{{
      RGBColor[0, 
       Rational[16, 25], 
       Rational[9, 25]]}, {
      RGBColor[0, 
       Rational[16, 25], 
       Rational[9, 25]]}, {
      RGBColor[0, 
       Rational[16, 25], 
       Rational[9, 25]]}, {
      RGBColor[0, 
       Rational[16, 25], 
       Rational[9, 25]]}, {
      RGBColor[0, 
       Rational[16, 25], 
       Rational[9, 25]]}, {
      RGBColor[0, 
       Rational[16, 25], 
       Rational[9, 25]]}, {
      RGBColor[0, 
       Rational[16, 25], 
       Rational[9, 25]]}, {
      RGBColor[0, 
       Rational[16, 25], 
       Rational[9, 25]]}, {
      RGBColor[0, 
       Rational[16, 25], 
       Rational[9, 25]]}, {
      RGBColor[0, 
       Rational[16, 25], 
       Rational[9, 25]]}, {
      RGBColor[0, 
       Rational[16, 25], 
       Rational[9, 25]]}, {
      RGBColor[0, 
       Rational[16, 25], 
       Rational[9, 25]]}, {
      RGBColor[0, 
       Rational[16, 25], 
       Rational[9, 25]]}, {
      RGBColor[0, 
       Rational[16, 25], 
       Rational[9, 25]]}, {
      RGBColor[0, 
       Rational[16, 25], 
       Rational[9, 25]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[23, 25], 
       Rational[2, 25]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[87, 100], 
       Rational[13, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[99, 100], 
       Rational[1, 100]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[17, 20], 
       Rational[3, 20]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[3, 4], 
       Rational[1, 4]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[39, 50], 
       Rational[11, 50]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[71, 100], 
       Rational[29, 100]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[41, 50], 
       Rational[9, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[33, 50], 
       Rational[17, 50]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[61, 100], 
       Rational[39, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[27, 50], 
       Rational[23, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[19, 50], 
       Rational[31, 50]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[1, 50], 
       Rational[49, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[7, 50], 
       Rational[43, 50]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[19, 100], 
       Rational[81, 100]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 20], 
       Rational[13, 20]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 
       Rational[7, 100], 
       Rational[93, 100]]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 0, 1]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 25], 
       Rational[22, 25]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 20], 
       Rational[17, 20]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[3, 100], 
       Rational[97, 100]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[1, 20], 
       Rational[19, 20]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[8, 25], 
       Rational[17, 25]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[13, 50], 
       Rational[37, 50]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[1, 4], 
       Rational[3, 4]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[37, 100], 
       Rational[63, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[29, 100], 
       Rational[71, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[23, 50], 
       Rational[27, 50]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[41, 100], 
       Rational[59, 100]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[11, 25], 
       Rational[14, 25]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[49, 100], 
       Rational[51, 100]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[3, 10], 
       Rational[7, 10]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[33, 100], 
       Rational[67, 100]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}, {
      RGBColor[0, 
       Rational[6, 25], 
       Rational[19, 25]]}}],
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesOrigin->{0, 3.},
  Epilog->InsetBox[
    GraphicsBox[
     GraphicsComplexBox[CompressedData["
1:eJxdyzlKREEARdGHkaGBgYGBioiIiPOs3c7z1M6paOwWahv2TsxqSS5BG0X4
p6AoTl3e6Mt7560vyevP7b2/56vV/eidz9bfR7vpfjyAB/EQHsYjeAyP4wk8
iafwNJ7Bs3gOz+MFvIiX8DJewat4Da/jDbyJt/A2buF20wVnh46zS8fZo+Ps
03EO6DiHdJwjOs4xHeeEjnNKxzmj45zTcS7oOJd0nCs6znXTbVxwxblhjwuu
OB32uOCKc8seF1xx7tjjgivOPXtccMV5YI8LrjiP7HHBFeeJPS644jz/+xva
7xOk
      "], {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          Thickness[1]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100}, 
          VertexColors -> Automatic]}}}, VertexColors -> {{
         RGBColor[0, 0, 1]}, {
         RGBColor[0, 
          Rational[1, 100], 
          Rational[99, 100]]}, {
         RGBColor[0, 
          Rational[1, 50], 
          Rational[49, 50]]}, {
         RGBColor[0, 
          Rational[3, 100], 
          Rational[97, 100]]}, {
         RGBColor[0, 
          Rational[1, 25], 
          Rational[24, 25]]}, {
         RGBColor[0, 
          Rational[1, 20], 
          Rational[19, 20]]}, {
         RGBColor[0, 
          Rational[3, 50], 
          Rational[47, 50]]}, {
         RGBColor[0, 
          Rational[7, 100], 
          Rational[93, 100]]}, {
         RGBColor[0, 
          Rational[2, 25], 
          Rational[23, 25]]}, {
         RGBColor[0, 
          Rational[9, 100], 
          Rational[91, 100]]}, {
         RGBColor[0, 
          Rational[1, 10], 
          Rational[9, 10]]}, {
         RGBColor[0, 
          Rational[11, 100], 
          Rational[89, 100]]}, {
         RGBColor[0, 
          Rational[3, 25], 
          Rational[22, 25]]}, {
         RGBColor[0, 
          Rational[13, 100], 
          Rational[87, 100]]}, {
         RGBColor[0, 
          Rational[7, 50], 
          Rational[43, 50]]}, {
         RGBColor[0, 
          Rational[3, 20], 
          Rational[17, 20]]}, {
         RGBColor[0, 
          Rational[4, 25], 
          Rational[21, 25]]}, {
         RGBColor[0, 
          Rational[17, 100], 
          Rational[83, 100]]}, {
         RGBColor[0, 
          Rational[9, 50], 
          Rational[41, 50]]}, {
         RGBColor[0, 
          Rational[19, 100], 
          Rational[81, 100]]}, {
         RGBColor[0, 
          Rational[1, 5], 
          Rational[4, 5]]}, {
         RGBColor[0, 
          Rational[21, 100], 
          Rational[79, 100]]}, {
         RGBColor[0, 
          Rational[11, 50], 
          Rational[39, 50]]}, {
         RGBColor[0, 
          Rational[23, 100], 
          Rational[77, 100]]}, {
         RGBColor[0, 
          Rational[6, 25], 
          Rational[19, 25]]}, {
         RGBColor[0, 
          Rational[1, 4], 
          Rational[3, 4]]}, {
         RGBColor[0, 
          Rational[13, 50], 
          Rational[37, 50]]}, {
         RGBColor[0, 
          Rational[27, 100], 
          Rational[73, 100]]}, {
         RGBColor[0, 
          Rational[7, 25], 
          Rational[18, 25]]}, {
         RGBColor[0, 
          Rational[29, 100], 
          Rational[71, 100]]}, {
         RGBColor[0, 
          Rational[3, 10], 
          Rational[7, 10]]}, {
         RGBColor[0, 
          Rational[31, 100], 
          Rational[69, 100]]}, {
         RGBColor[0, 
          Rational[8, 25], 
          Rational[17, 25]]}, {
         RGBColor[0, 
          Rational[33, 100], 
          Rational[67, 100]]}, {
         RGBColor[0, 
          Rational[17, 50], 
          Rational[33, 50]]}, {
         RGBColor[0, 
          Rational[7, 20], 
          Rational[13, 20]]}, {
         RGBColor[0, 
          Rational[9, 25], 
          Rational[16, 25]]}, {
         RGBColor[0, 
          Rational[37, 100], 
          Rational[63, 100]]}, {
         RGBColor[0, 
          Rational[19, 50], 
          Rational[31, 50]]}, {
         RGBColor[0, 
          Rational[39, 100], 
          Rational[61, 100]]}, {
         RGBColor[0, 
          Rational[2, 5], 
          Rational[3, 5]]}, {
         RGBColor[0, 
          Rational[41, 100], 
          Rational[59, 100]]}, {
         RGBColor[0, 
          Rational[21, 50], 
          Rational[29, 50]]}, {
         RGBColor[0, 
          Rational[43, 100], 
          Rational[57, 100]]}, {
         RGBColor[0, 
          Rational[11, 25], 
          Rational[14, 25]]}, {
         RGBColor[0, 
          Rational[9, 20], 
          Rational[11, 20]]}, {
         RGBColor[0, 
          Rational[23, 50], 
          Rational[27, 50]]}, {
         RGBColor[0, 
          Rational[47, 100], 
          Rational[53, 100]]}, {
         RGBColor[0, 
          Rational[12, 25], 
          Rational[13, 25]]}, {
         RGBColor[0, 
          Rational[49, 100], 
          Rational[51, 100]]}, {
         RGBColor[0, 
          Rational[1, 2], 
          Rational[1, 2]]}, {
         RGBColor[0, 
          Rational[51, 100], 
          Rational[49, 100]]}, {
         RGBColor[0, 
          Rational[13, 25], 
          Rational[12, 25]]}, {
         RGBColor[0, 
          Rational[53, 100], 
          Rational[47, 100]]}, {
         RGBColor[0, 
          Rational[27, 50], 
          Rational[23, 50]]}, {
         RGBColor[0, 
          Rational[11, 20], 
          Rational[9, 20]]}, {
         RGBColor[0, 
          Rational[14, 25], 
          Rational[11, 25]]}, {
         RGBColor[0, 
          Rational[57, 100], 
          Rational[43, 100]]}, {
         RGBColor[0, 
          Rational[29, 50], 
          Rational[21, 50]]}, {
         RGBColor[0, 
          Rational[59, 100], 
          Rational[41, 100]]}, {
         RGBColor[0, 
          Rational[3, 5], 
          Rational[2, 5]]}, {
         RGBColor[0, 
          Rational[61, 100], 
          Rational[39, 100]]}, {
         RGBColor[0, 
          Rational[31, 50], 
          Rational[19, 50]]}, {
         RGBColor[0, 
          Rational[63, 100], 
          Rational[37, 100]]}, {
         RGBColor[0, 
          Rational[16, 25], 
          Rational[9, 25]]}, {
         RGBColor[0, 
          Rational[13, 20], 
          Rational[7, 20]]}, {
         RGBColor[0, 
          Rational[33, 50], 
          Rational[17, 50]]}, {
         RGBColor[0, 
          Rational[67, 100], 
          Rational[33, 100]]}, {
         RGBColor[0, 
          Rational[17, 25], 
          Rational[8, 25]]}, {
         RGBColor[0, 
          Rational[69, 100], 
          Rational[31, 100]]}, {
         RGBColor[0, 
          Rational[7, 10], 
          Rational[3, 10]]}, {
         RGBColor[0, 
          Rational[71, 100], 
          Rational[29, 100]]}, {
         RGBColor[0, 
          Rational[18, 25], 
          Rational[7, 25]]}, {
         RGBColor[0, 
          Rational[73, 100], 
          Rational[27, 100]]}, {
         RGBColor[0, 
          Rational[37, 50], 
          Rational[13, 50]]}, {
         RGBColor[0, 
          Rational[3, 4], 
          Rational[1, 4]]}, {
         RGBColor[0, 
          Rational[19, 25], 
          Rational[6, 25]]}, {
         RGBColor[0, 
          Rational[77, 100], 
          Rational[23, 100]]}, {
         RGBColor[0, 
          Rational[39, 50], 
          Rational[11, 50]]}, {
         RGBColor[0, 
          Rational[79, 100], 
          Rational[21, 100]]}, {
         RGBColor[0, 
          Rational[4, 5], 
          Rational[1, 5]]}, {
         RGBColor[0, 
          Rational[81, 100], 
          Rational[19, 100]]}, {
         RGBColor[0, 
          Rational[41, 50], 
          Rational[9, 50]]}, {
         RGBColor[0, 
          Rational[83, 100], 
          Rational[17, 100]]}, {
         RGBColor[0, 
          Rational[21, 25], 
          Rational[4, 25]]}, {
         RGBColor[0, 
          Rational[17, 20], 
          Rational[3, 20]]}, {
         RGBColor[0, 
          Rational[43, 50], 
          Rational[7, 50]]}, {
         RGBColor[0, 
          Rational[87, 100], 
          Rational[13, 100]]}, {
         RGBColor[0, 
          Rational[22, 25], 
          Rational[3, 25]]}, {
         RGBColor[0, 
          Rational[89, 100], 
          Rational[11, 100]]}, {
         RGBColor[0, 
          Rational[9, 10], 
          Rational[1, 10]]}, {
         RGBColor[0, 
          Rational[91, 100], 
          Rational[9, 100]]}, {
         RGBColor[0, 
          Rational[23, 25], 
          Rational[2, 25]]}, {
         RGBColor[0, 
          Rational[93, 100], 
          Rational[7, 100]]}, {
         RGBColor[0, 
          Rational[47, 50], 
          Rational[3, 50]]}, {
         RGBColor[0, 
          Rational[19, 20], 
          Rational[1, 20]]}, {
         RGBColor[0, 
          Rational[24, 25], 
          Rational[1, 25]]}, {
         RGBColor[0, 
          Rational[97, 100], 
          Rational[3, 100]]}, {
         RGBColor[0, 
          Rational[49, 50], 
          Rational[1, 50]]}, {
         RGBColor[0, 
          Rational[99, 100], 
          Rational[1, 100]]}}], {AspectRatio -> NCache[
        Rational[1, 15], 0.06666666666666667], Axes -> {False, False}, 
      AxesOrigin -> {0, 0}, Frame -> True, FrameLabel -> {
        FormBox[
         StyleBox[
         "\"Index of Consumer Sentiment Legend\"", "ScaleTitle", StripOnInput -> 
          False], TraditionalForm], None}, 
      FrameTicks -> {{None, None}, {{{1, 
           FormBox["55.`", TraditionalForm]}, {50, 
           FormBox["76.`", TraditionalForm]}, {100, 
           FormBox["97.`", TraditionalForm]}}, None}}, ImageSize -> 300, 
      PlotRange -> {{0., 100.}, {0., 0.2}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02]}}], 
    Offset[{-800, -250}, 
     Scaled[{1, 1}]], {Left, Bottom}],
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"\"", "AxesTitle", StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"Retail Labor Index\"", "AxesTitle", StripOnInput -> False], 
     TraditionalForm]},
  FrameTicks->{{{{2.75, 
       FormBox["\"2.75%\"", TraditionalForm]}, {3.25, 
       FormBox["\"3.25%\"", TraditionalForm]}, {3.75, 
       FormBox["\"3.75%\"", TraditionalForm]}, {4.25, 
       FormBox["\"4.25%\"", TraditionalForm]}, {4.75, 
       FormBox["\"4.75%\"", TraditionalForm]}, {5.25, 
       FormBox["\"5.25%\"", TraditionalForm]}, {5.75, 
       FormBox["\"5.75%\"", TraditionalForm]}, {6.25, 
       FormBox["\"6.25%\"", TraditionalForm]}, {6.75, 
       FormBox["\"6.75%\"", TraditionalForm]}, {7.25, 
       FormBox["\"7.25%\"", TraditionalForm]}}, None}, {{{0, 
       FormBox["\"August 2006\"", TraditionalForm]}, {5, 
       FormBox["\"January 2007\"", TraditionalForm]}, {11, 
       FormBox["\"July 2007\"", TraditionalForm]}, {17, 
       FormBox["\"January 2008\"", TraditionalForm]}, {23, 
       FormBox["\"July 2008\"", TraditionalForm]}, {29, 
       FormBox["\"January 2009\"", TraditionalForm]}, {35, 
       FormBox["\"July 2009\"", TraditionalForm]}, {41, 
       FormBox["\"January 2010\"", TraditionalForm]}, {49, 
       FormBox["\"Sept 2010\"", TraditionalForm]}}, None}},
  GridLines->{{{0, 
      GrayLevel[0.8]}, {5, 
      GrayLevel[0.8]}, {11, 
      GrayLevel[0.8]}, {17, 
      GrayLevel[0.8]}, {23, 
      GrayLevel[0.8]}, {29, 
      GrayLevel[0.8]}, {35, 
      GrayLevel[0.8]}, {41, 
      GrayLevel[0.8]}, {49, 
      GrayLevel[0.8]}}, None},
  ImageSize->900,
  PlotLabel->FormBox[
    StyleBox[
    "\"Kronos Retail Labor Index and Consumer Confidence\"", "GraphTitle", 
     StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 49.}, {2.1146278272081314`, 7.452628450621902}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->If[{False, False}, 
    Graphics`DateListPlotDump`getAxesTicks[
    Graphics`DateListPlotDump`ticksopt, Graphics`DateListPlotDump`dtformatopt, 
     If[
      And[Length[Graphics`DateListPlotDump`pltrange] === 2, Length[
         Part[Graphics`DateListPlotDump`pltrange, 1]] === 2, 
       VectorQ[
        Quiet[
         Map[DateList, 
          Part[Graphics`DateListPlotDump`pltrange, 1]]], 
        Graphics`DateListPlotDump`dateQ]], 
      Map[DateList, 
       Part[Graphics`DateListPlotDump`pltrange, 1]], 
      Graphics`DateListPlotDump`datedata], 
     Graphics`DateListPlotDump`prpadding], None]]], "Input",
 CellChangeTimes->{{3.496144463421875*^9, 3.49614446625*^9}, {
  3.496144518203125*^9, 3.49614452171875*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJw8nHk8lN37xxHG2MdgNkuIIfu+DOYzzFAJadVK2kuFSrv2srSriLQqRcnQ
oihlaU8LSrtIWmhHpfI79/34/vzzvE73dj7nfX2u67rPzDxmMfOHT1NSUFDo
UVZQoP5L/xnF+3ZaT9hW2clF+qUjzKb3e8Vhn+oeTVDjYQl3++GyunxxhYPh
QjcjHq5vWHDb5cYZcfLlI8mWzjyEpV0NX7KtXNwS/9ddM5iHHsv1Lx9PqBRr
GOfmVE/kIbNH23vuwWtiv13c1wMX8cCZ1P52hc5t8fmCZ2aCLWQ8bVMGI++e
+IznvDXxR3kw3mX5V9XloThOM8JM/TIPqVERUTcO1Ytt/ilbXH3EQ9HBP4MH
mT0WC16rH0/4zENMy3N9xukn4tUpLQ9+M/gYVpLH2TD4uXj3bZ1K9/58LNyn
lx/w+aV433LdrF5PPoJ2v2dF32sS35o7fblbOB/nFoZ/8rdtFkcl7txUNI2P
uGIDw6TUFvHuWQZN4cv5iNbnnJ3Y/kZcIIg79mkbH7OiHbqNh70VP4+2+DPz
CB9LJ3io9Z5pE0/TKlLKPsvHolqmvoT/Xry2c8+z6Gt8+K9YFzRg1QfxvI7I
43sa+Ki1Tbr9rvmjeNbNxFRuCx9KR+pra6Ud4pMT449UfuKjJm/yCsPcT+KF
STf143/y0Uv/fRb/B0qAdt3jjN8FX8Thum01o1UEwOH1Vf9GfRVvlO6pTlET
4Kyw/q3w31fxtrTEvaVMAXr1GwZsy/0mHlb/5bUSGT96UeMUNvi7+JzWPFGy
qgA/O99cSmr/Ls6zGhM4U0kA3oO4VT5bf4h1tQ0yKv/w8b05zzrboVP8qFi3
/lwnH54HbsRevNspbu1XkjG1g4+jS1m98jldYssvU1d9JHo6W6/szFbrFq+Z
vs16zhM+no8xeLY9t1vcMirbqV8tH6zA0LQC8U+x46mvbnVX+QgR5I1WefpT
PGJ8z8PfZwifkZO/nF/wS+wRbnZ8bx4fFydf1Hih+VtcvfhOxL29fEw4/2X8
1qO/xc1V0+aWpfHRdiNgV6tfjzjJfHTmypV8aKl/nvGngYzXqsa5z+djyyfX
1Pa5f8R3H77aoTSZD6MP4YX3VP6KI5RCspVHkPiIW7OpIuev+Fdvkc14GZlP
p+rNBvd/4hMXlz219OJjVLuJlV3tP3GYGStkvS0fw28yhj+f3iu+Z/6Cu8f0
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
p+eChi60aT7keK/PZwM9XRTSfMh858X4O+vrIpzmI8L0rpk35az/5TdfUO7x
o/xL8/HFstdXLJ2JX//rr30xNHAvqx/xZyvNxxc/a41G5BM/bqT5+KJrVUZm
U6IOBtJ8fHE1YtT2KB8d3KL5+KJBfPhdU5c25tJ8fLFbdivc5JQ2dOiC4ou1
k3gLH0zUxmmajy/MNz7rd4apjQiajy9un59wapVcC99pPr5Q/vzO5BPxSzrN
xxcBwjuqF7o14UL3B77QmjCcnZWhiQc0H1+UJl//NsRDE3E0H1/cOb54xIZ6
DWjRBdwX988Xtigt0EA+zccXhvLSiJV6Ggii/eMLq+2vQwpL1PGa5uOLJcMW
rQ4fo46lNB9f7OioyOH/Y0KXfj/1xfUYreE3jzNxjObji/0FJ0IMIpnwofn4
IqeqyatUk4m7NB9f9D/27/qc62qgt2O6fJEXFp73Plmtj49f3/6bGrbSfPzw
J2O45k9zNQhoPn5oW+f59GYPA0dpPn6Yebsk+d0zBhxpPn64cumU/FklAxfo
91M/BOVrfB5YxICE5uOH4KaSpxOPMHCb2j6X+kHr9GbtP9kMjKL944eP01YM
2LKXgWbKwJF+cBw561wmOT6HTqB+ML/pPenYIQZ+UQky1g88/fqzfgUMpFhR
gv0Qtd5kzNvzDAho//gBs3qfCa8zUEgnZD9o6018mdLIQFARxccPhrXGP9M/
kuclUwvoh7x2YdXdXgZWT6b4+EH90uQnl/XVYEH7xw+7tsrrP9mo4RbVcJf5
YWfR37BWfzUspPRU+2Fogl2zzQg1WNH+8QPXYoC1dLoantEJicxH7/bFssVq
2EPv7/iBtY3hxt2khkiajx9evauwf52uRvIGxccPnfOeSvbn/I+PP47SBUgN
jTQffzg125Q7H1PDGZqPP5hDQ37X5qphN72/44+MZ3lKnw6oYTHdQPljyGUZ
uzZDDZOoBtbZHxvNbGcXblaDlG5Q/VHqMklWm6QGG6oBlfpjqGlrc+w8NWjS
DaY/8vSvrb45Xg0dVEMc6Q9PMCZaBKvhBt3w+mPqvcKzF5zUsD+C4uOP/Z8r
b9zmqmHuQIqPP4JqB9dnkvV17Uf5xx93MgcbRrcy8IluoP2xb8WNO9G3GDh8
huLjD37eHfenhYTXFoqPP4plE7ZppDPwfBrFxx8NG1Zy3BYzMM2fWgB/NO/y
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
eN07wIvO18aMwrLwdmkg0u2ndh5t1kbr6o37GwcH4vLKIKvd+jpYXBVKCkQg
iqPDm/eJdeBoyPKVjwhE4uJNUXZTdGDEu5+aExkInSnddcVJOoiITX2SMjEQ
adV5iw7s0MHL02JScALx0ffQssnZOqhb95n4hzx/bjt3JhmLk/fWhMUGYlHX
jo3m5HyPiX76ovhA5C/N+tW7XAfXDj8l/gnEywzt4/PH60DxVxzxTyD6f+u6
3uSg07cfH4gu+vf12phzZBPxTyDmW0eH1ZzWRv5fNeKfQHzul3opZ6I2bizc
8LF6ayA28Zadliho4868f97y9ECIr9/vOpaphYqIRck5mYGwn+MwvUqohYJ1
H0lBIuMprvc3F2pi7+wYy8TDgRijtZrxy14T22OfLYjJC8T162de/j2mgX2f
x1SGnQzEyC/x1jv4Gqge+0RXJA8Ep3XM+eMp6mCxJkcJzwXCQJkxyaeTibTl
X06xy8h8C0w/iyYxIe5N/tNbEYjvXgF+R2rU4KJkF9JeHYhL6jqC6XZqmP/h
6d7Gm4H4mmQ1fhl5H/1nnPGuujYQ479b32/oUcU7pRhPeR2Jt2vnhs6brgqP
Xt+NOY2BcB4Vd8S7XgXfltg0pLwIRMW/zmP2JP8MeGQ9ILE5EJn939ngkjIa
VvguiGkLRAO37d90H2Vo1U2rDGsn8SFL/5lxuR8e+x9jib4G4oTylvc3hvSD
n1VvtLArEG5nFuZ+fqUE6ef4InZPIDyLP/QorlLq84+0b39UCczcE+HtylIs
a38du/KlItIvzT7QyJTigtqLLr8Dipip7/+5WlsKL5dx/zJnK2J0nIlYzpZi
5gcXsy9iRVjtVd2Ww5VCXoy/uSaKODr668sUYylmaU504qkqYn/cE4dEcyn+
LZkcWdipgOeFF5JihFLULxWyr7UrwO7J5towOynCtyf/u/pBAWPOh5qInKV4
6DeptN9ncpzVPVfoIUVVv7Uv238qYEHhuktskRRrp9zVfsVQxO/RnzQVQOb/
ktcmEigi7aHzhHapFBpdUJnmoojv7wYVNA6WYp+tEaN8qCL+Tnb4XR0mRZrC
htTDsxSRoPJikHyEFNKukfbLkhVhkR2ekRMpxcCt07bkHldEw4fVrSkTpcga
vH3QupuKGFs+xzUxRgrl/MI/iz8oYvFj9TUxM6S47pQV/EZdCT39xtaGxZL7
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
   "], {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Thickness[0.0125], JoinForm["Round"], 
     LineBox[CompressedData["
1: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
5BOf+cJXvvGdH/zkV5D///r+Bzmphks=
      "],
      VertexColors->Automatic]}},
   VertexColors->{{
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[49, 100], 
       Rational[51, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[47, 100], 
       Rational[53, 100], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[11, 25], 
       Rational[14, 25], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[31, 100], 
       Rational[69, 100], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[33, 100], 
       Rational[67, 100], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[6, 25], 
       Rational[19, 25], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[29, 100], 
       Rational[71, 100], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[9, 50], 
       Rational[41, 50], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[27, 100], 
       Rational[73, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[23, 100], 
       Rational[77, 100], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 20], 
       Rational[17, 20], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[3, 25], 
       Rational[22, 25], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[1, 100], 
       Rational[99, 100], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[13, 100], 
       Rational[87, 100], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[7, 100], 
       Rational[93, 100], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[3, 50], 
       Rational[47, 50], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[1, 10], 
       Rational[9, 10], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[4, 25], 
       Rational[21, 25], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[3, 10], 
       Rational[7, 10], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[
       Rational[77, 100], 
       Rational[23, 100], 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[1, 0, 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[87, 100], 
       Rational[13, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[99, 100], 
       Rational[1, 100], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[49, 50], 
       Rational[1, 50], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[93, 100], 
       Rational[7, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[41, 50], 
       Rational[9, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[33, 50], 
       Rational[17, 50], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[83, 100], 
       Rational[17, 100], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[18, 25], 
       Rational[7, 25], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[59, 100], 
       Rational[41, 100], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[14, 25], 
       Rational[11, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[13, 25], 
       Rational[12, 25], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[7, 20], 
       Rational[13, 20], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[8, 25], 
       Rational[17, 25], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[41, 100], 
       Rational[59, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[43, 100], 
       Rational[57, 100], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[2, 5], 
       Rational[3, 5], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[37, 100], 
       Rational[63, 100], 0]}, {
      RGBColor[
       Rational[7, 25], 
       Rational[18, 25], 0]}, {
      RGBColor[
       Rational[7, 25], 
       Rational[18, 25], 0]}, {
      RGBColor[
       Rational[7, 25], 
       Rational[18, 25], 0]}, {
      RGBColor[
       Rational[7, 25], 
       Rational[18, 25], 0]}, {
      RGBColor[
       Rational[7, 25], 
       Rational[18, 25], 0]}, {
      RGBColor[
       Rational[7, 25], 
       Rational[18, 25], 0]}, {
      RGBColor[
       Rational[7, 25], 
       Rational[18, 25], 0]}, {
      RGBColor[
       Rational[7, 25], 
       Rational[18, 25], 0]}, {
      RGBColor[
       Rational[7, 25], 
       Rational[18, 25], 0]}, {
      RGBColor[
       Rational[7, 25], 
       Rational[18, 25], 0]}, {
      RGBColor[
       Rational[7, 25], 
       Rational[18, 25], 0]}, {
      RGBColor[
       Rational[7, 25], 
       Rational[18, 25], 0]}, {
      RGBColor[
       Rational[7, 25], 
       Rational[18, 25], 0]}, {
      RGBColor[
       Rational[7, 25], 
       Rational[18, 25], 0]}, {
      RGBColor[
       Rational[7, 25], 
       Rational[18, 25], 0]}}],
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesOrigin->{0, 3.},
  Epilog->InsetBox[
    GraphicsBox[
     GraphicsComplexBox[CompressedData["
1:eJxdyzlKREEARdGHkaGBgYGBioiIiPOs3c7z1M6paOwWahv2TsxqSS5BG0X4
p6AoTl3e6Mt7560vyevP7b2/56vV/eidz9bfR7vpfjyAB/EQHsYjeAyP4wk8
iafwNJ7Bs3gOz+MFvIiX8DJewat4Da/jDbyJt/A2buF20wVnh46zS8fZo+Ps
03EO6DiHdJwjOs4xHeeEjnNKxzmj45zTcS7oOJd0nCs6znXTbVxwxblhjwuu
OB32uOCKc8seF1xx7tjjgivOPXtccMV5YI8LrjiP7HHBFeeJPS644jz/+xva
7xOk
      "], {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          Thickness[1]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100}, 
          VertexColors -> Automatic]}}}, VertexColors -> {{
         RGBColor[1, 0, 0]}, {
         RGBColor[
          Rational[99, 100], 
          Rational[1, 100], 0]}, {
         RGBColor[
          Rational[49, 50], 
          Rational[1, 50], 0]}, {
         RGBColor[
          Rational[97, 100], 
          Rational[3, 100], 0]}, {
         RGBColor[
          Rational[24, 25], 
          Rational[1, 25], 0]}, {
         RGBColor[
          Rational[19, 20], 
          Rational[1, 20], 0]}, {
         RGBColor[
          Rational[47, 50], 
          Rational[3, 50], 0]}, {
         RGBColor[
          Rational[93, 100], 
          Rational[7, 100], 0]}, {
         RGBColor[
          Rational[23, 25], 
          Rational[2, 25], 0]}, {
         RGBColor[
          Rational[91, 100], 
          Rational[9, 100], 0]}, {
         RGBColor[
          Rational[9, 10], 
          Rational[1, 10], 0]}, {
         RGBColor[
          Rational[89, 100], 
          Rational[11, 100], 0]}, {
         RGBColor[
          Rational[22, 25], 
          Rational[3, 25], 0]}, {
         RGBColor[
          Rational[87, 100], 
          Rational[13, 100], 0]}, {
         RGBColor[
          Rational[43, 50], 
          Rational[7, 50], 0]}, {
         RGBColor[
          Rational[17, 20], 
          Rational[3, 20], 0]}, {
         RGBColor[
          Rational[21, 25], 
          Rational[4, 25], 0]}, {
         RGBColor[
          Rational[83, 100], 
          Rational[17, 100], 0]}, {
         RGBColor[
          Rational[41, 50], 
          Rational[9, 50], 0]}, {
         RGBColor[
          Rational[81, 100], 
          Rational[19, 100], 0]}, {
         RGBColor[
          Rational[4, 5], 
          Rational[1, 5], 0]}, {
         RGBColor[
          Rational[79, 100], 
          Rational[21, 100], 0]}, {
         RGBColor[
          Rational[39, 50], 
          Rational[11, 50], 0]}, {
         RGBColor[
          Rational[77, 100], 
          Rational[23, 100], 0]}, {
         RGBColor[
          Rational[19, 25], 
          Rational[6, 25], 0]}, {
         RGBColor[
          Rational[3, 4], 
          Rational[1, 4], 0]}, {
         RGBColor[
          Rational[37, 50], 
          Rational[13, 50], 0]}, {
         RGBColor[
          Rational[73, 100], 
          Rational[27, 100], 0]}, {
         RGBColor[
          Rational[18, 25], 
          Rational[7, 25], 0]}, {
         RGBColor[
          Rational[71, 100], 
          Rational[29, 100], 0]}, {
         RGBColor[
          Rational[7, 10], 
          Rational[3, 10], 0]}, {
         RGBColor[
          Rational[69, 100], 
          Rational[31, 100], 0]}, {
         RGBColor[
          Rational[17, 25], 
          Rational[8, 25], 0]}, {
         RGBColor[
          Rational[67, 100], 
          Rational[33, 100], 0]}, {
         RGBColor[
          Rational[33, 50], 
          Rational[17, 50], 0]}, {
         RGBColor[
          Rational[13, 20], 
          Rational[7, 20], 0]}, {
         RGBColor[
          Rational[16, 25], 
          Rational[9, 25], 0]}, {
         RGBColor[
          Rational[63, 100], 
          Rational[37, 100], 0]}, {
         RGBColor[
          Rational[31, 50], 
          Rational[19, 50], 0]}, {
         RGBColor[
          Rational[61, 100], 
          Rational[39, 100], 0]}, {
         RGBColor[
          Rational[3, 5], 
          Rational[2, 5], 0]}, {
         RGBColor[
          Rational[59, 100], 
          Rational[41, 100], 0]}, {
         RGBColor[
          Rational[29, 50], 
          Rational[21, 50], 0]}, {
         RGBColor[
          Rational[57, 100], 
          Rational[43, 100], 0]}, {
         RGBColor[
          Rational[14, 25], 
          Rational[11, 25], 0]}, {
         RGBColor[
          Rational[11, 20], 
          Rational[9, 20], 0]}, {
         RGBColor[
          Rational[27, 50], 
          Rational[23, 50], 0]}, {
         RGBColor[
          Rational[53, 100], 
          Rational[47, 100], 0]}, {
         RGBColor[
          Rational[13, 25], 
          Rational[12, 25], 0]}, {
         RGBColor[
          Rational[51, 100], 
          Rational[49, 100], 0]}, {
         RGBColor[
          Rational[1, 2], 
          Rational[1, 2], 0]}, {
         RGBColor[
          Rational[49, 100], 
          Rational[51, 100], 0]}, {
         RGBColor[
          Rational[12, 25], 
          Rational[13, 25], 0]}, {
         RGBColor[
          Rational[47, 100], 
          Rational[53, 100], 0]}, {
         RGBColor[
          Rational[23, 50], 
          Rational[27, 50], 0]}, {
         RGBColor[
          Rational[9, 20], 
          Rational[11, 20], 0]}, {
         RGBColor[
          Rational[11, 25], 
          Rational[14, 25], 0]}, {
         RGBColor[
          Rational[43, 100], 
          Rational[57, 100], 0]}, {
         RGBColor[
          Rational[21, 50], 
          Rational[29, 50], 0]}, {
         RGBColor[
          Rational[41, 100], 
          Rational[59, 100], 0]}, {
         RGBColor[
          Rational[2, 5], 
          Rational[3, 5], 0]}, {
         RGBColor[
          Rational[39, 100], 
          Rational[61, 100], 0]}, {
         RGBColor[
          Rational[19, 50], 
          Rational[31, 50], 0]}, {
         RGBColor[
          Rational[37, 100], 
          Rational[63, 100], 0]}, {
         RGBColor[
          Rational[9, 25], 
          Rational[16, 25], 0]}, {
         RGBColor[
          Rational[7, 20], 
          Rational[13, 20], 0]}, {
         RGBColor[
          Rational[17, 50], 
          Rational[33, 50], 0]}, {
         RGBColor[
          Rational[33, 100], 
          Rational[67, 100], 0]}, {
         RGBColor[
          Rational[8, 25], 
          Rational[17, 25], 0]}, {
         RGBColor[
          Rational[31, 100], 
          Rational[69, 100], 0]}, {
         RGBColor[
          Rational[3, 10], 
          Rational[7, 10], 0]}, {
         RGBColor[
          Rational[29, 100], 
          Rational[71, 100], 0]}, {
         RGBColor[
          Rational[7, 25], 
          Rational[18, 25], 0]}, {
         RGBColor[
          Rational[27, 100], 
          Rational[73, 100], 0]}, {
         RGBColor[
          Rational[13, 50], 
          Rational[37, 50], 0]}, {
         RGBColor[
          Rational[1, 4], 
          Rational[3, 4], 0]}, {
         RGBColor[
          Rational[6, 25], 
          Rational[19, 25], 0]}, {
         RGBColor[
          Rational[23, 100], 
          Rational[77, 100], 0]}, {
         RGBColor[
          Rational[11, 50], 
          Rational[39, 50], 0]}, {
         RGBColor[
          Rational[21, 100], 
          Rational[79, 100], 0]}, {
         RGBColor[
          Rational[1, 5], 
          Rational[4, 5], 0]}, {
         RGBColor[
          Rational[19, 100], 
          Rational[81, 100], 0]}, {
         RGBColor[
          Rational[9, 50], 
          Rational[41, 50], 0]}, {
         RGBColor[
          Rational[17, 100], 
          Rational[83, 100], 0]}, {
         RGBColor[
          Rational[4, 25], 
          Rational[21, 25], 0]}, {
         RGBColor[
          Rational[3, 20], 
          Rational[17, 20], 0]}, {
         RGBColor[
          Rational[7, 50], 
          Rational[43, 50], 0]}, {
         RGBColor[
          Rational[13, 100], 
          Rational[87, 100], 0]}, {
         RGBColor[
          Rational[3, 25], 
          Rational[22, 25], 0]}, {
         RGBColor[
          Rational[11, 100], 
          Rational[89, 100], 0]}, {
         RGBColor[
          Rational[1, 10], 
          Rational[9, 10], 0]}, {
         RGBColor[
          Rational[9, 100], 
          Rational[91, 100], 0]}, {
         RGBColor[
          Rational[2, 25], 
          Rational[23, 25], 0]}, {
         RGBColor[
          Rational[7, 100], 
          Rational[93, 100], 0]}, {
         RGBColor[
          Rational[3, 50], 
          Rational[47, 50], 0]}, {
         RGBColor[
          Rational[1, 20], 
          Rational[19, 20], 0]}, {
         RGBColor[
          Rational[1, 25], 
          Rational[24, 25], 0]}, {
         RGBColor[
          Rational[3, 100], 
          Rational[97, 100], 0]}, {
         RGBColor[
          Rational[1, 50], 
          Rational[49, 50], 0]}, {
         RGBColor[
          Rational[1, 100], 
          Rational[99, 100], 0]}}], {AspectRatio -> NCache[
        Rational[1, 15], 0.06666666666666667], Axes -> {False, False}, 
      AxesOrigin -> {0, 0}, Frame -> True, FrameLabel -> {
        FormBox[
         StyleBox[
         "\"U.S. Census Bureau Report Retail Sales Legend\"", "ScaleTitle", 
          StripOnInput -> False], TraditionalForm], None}, 
      FrameTicks -> {{None, None}, {{{1, 
           FormBox["0", TraditionalForm]}, {50, 
           FormBox["0.5`", TraditionalForm]}, {100, 
           FormBox["1.`", TraditionalForm]}}, None}}, ImageSize -> 300, 
      PlotRange -> {{0., 100.}, {0., 0.2}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02]}}], 
    Offset[{-800, -225}, 
     Scaled[{1, 1}]], {Left, Bottom}],
  Frame->True,
  FrameLabel->{
    FormBox[
     StyleBox["\"\"", "AxesTitle", StripOnInput -> False], TraditionalForm], 
    FormBox[
     StyleBox["\"Retail Labor Index\"", "AxesTitle", StripOnInput -> False], 
     TraditionalForm]},
  FrameTicks->{{{{2.75, 
       FormBox["\"2.75%\"", TraditionalForm]}, {3.25, 
       FormBox["\"3.25%\"", TraditionalForm]}, {3.75, 
       FormBox["\"3.75%\"", TraditionalForm]}, {4.25, 
       FormBox["\"4.25%\"", TraditionalForm]}, {4.75, 
       FormBox["\"4.75%\"", TraditionalForm]}, {5.25, 
       FormBox["\"5.25%\"", TraditionalForm]}, {5.75, 
       FormBox["\"5.75%\"", TraditionalForm]}, {6.25, 
       FormBox["\"6.25%\"", TraditionalForm]}, {6.75, 
       FormBox["\"6.75%\"", TraditionalForm]}, {7.25, 
       FormBox["\"7.25%\"", TraditionalForm]}}, None}, {{{0, 
       FormBox["\"August 2006\"", TraditionalForm]}, {5, 
       FormBox["\"January 2007\"", TraditionalForm]}, {11, 
       FormBox["\"July 2007\"", TraditionalForm]}, {17, 
       FormBox["\"January 2008\"", TraditionalForm]}, {23, 
       FormBox["\"July 2008\"", TraditionalForm]}, {29, 
       FormBox["\"January 2009\"", TraditionalForm]}, {35, 
       FormBox["\"July 2009\"", TraditionalForm]}, {41, 
       FormBox["\"January 2010\"", TraditionalForm]}, {49, 
       FormBox["\"Sept 2010\"", TraditionalForm]}}, None}},
  GridLines->{{{0, 
      GrayLevel[0.8]}, {5, 
      GrayLevel[0.8]}, {11, 
      GrayLevel[0.8]}, {17, 
      GrayLevel[0.8]}, {23, 
      GrayLevel[0.8]}, {29, 
      GrayLevel[0.8]}, {35, 
      GrayLevel[0.8]}, {41, 
      GrayLevel[0.8]}, {49, 
      GrayLevel[0.8]}}, None},
  ImageSize->900,
  PlotLabel->FormBox[
    StyleBox[
    "\"Kronos Retail Labor Index and Retail & Food Services Sales\"", 
     "GraphTitle", StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 49.}, {2.1146278272081314`, 7.452628450621902}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->If[{False, False}, 
    Graphics`DateListPlotDump`getAxesTicks[
    Graphics`DateListPlotDump`ticksopt, Graphics`DateListPlotDump`dtformatopt, 
     If[
      And[Length[Graphics`DateListPlotDump`pltrange] === 2, Length[
         Part[Graphics`DateListPlotDump`pltrange, 1]] === 2, 
       VectorQ[
        Quiet[
         Map[DateList, 
          Part[Graphics`DateListPlotDump`pltrange, 1]]], 
        Graphics`DateListPlotDump`dateQ]], 
      Map[DateList, 
       Part[Graphics`DateListPlotDump`pltrange, 1]], 
      Graphics`DateListPlotDump`datedata], 
     Graphics`DateListPlotDump`prpadding], None]]], "Input",
 CellChangeTimes->{{3.496144096421875*^9, 3.496144105546875*^9}, {
  3.496144500671875*^9, 3.496144505046875*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Three Dimensions of Evidence", "Section",
 CellChangeTimes->{
  3.496096257265625*^9, {3.496096300640625*^9, 3.49609632165625*^9}, {
   3.69066333916217*^9, 3.6906633564942913`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.49614344996875*^9, 3.496143452125*^9}, {
  3.690662249655484*^9, 3.6906622529937153`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.49614344996875*^9, 3.496143452125*^9}, {
  3.690662258094775*^9, 3.690662260110024*^9}}],

Cell[BoxData[
 RowBox[{
  GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
ZhHPgvq+15EHXlvBIW6yW0EcC4ddiDt/tsLXvmtvzpO242OCFz+sUH912b1E
cn9/sohjmog1zOv3HD9L+ts6Z9ZdzVnW0BTTVfJZzwKtSQg81oBZa+OsDSxM
XawpFqJpDVqBNf1FEgu3/xmVTTG2xosKG3ZlCgvlZWS6Nta415lRaLmRhUSq
Wx/dzRq9a4dOLE1jgfPcK+qllzUKZsycJ0/ma5tBcJBpjds/m2YZkraCbtAh
vSBruNVdKl9H7h9vD3W9FkruL24+PpjKwsPlq++HrbZGjvK2R05kfc6LJZCE
ZI0nh+93hZPxFlaRcpdGxns4zMJjLQsrheGbbY0VGd+rj61iwf1tATmtiY71
HtqwjIXp2fsfbttvjUdz1VfvCSL2NCb4XmWNt6HLi1T8Wci5WSdxs84azDap
HWo0FjxXXTyy8qI1dC2kCy7bsPBdoh0S7daIiwrsU9Ul632cmPeWNVg+T7Zx
5VjwE+LJAzK/jJ1vt05m4RPJVh+fWePXm+VGfR8DkJ8/QgKYPM+FsZE7EAAT
y1Hi0Nao9XLTMrkegNY7f4iByfNv63murQ+AYA1Jv+I2eFf6U9N3fwDeyggP
G2SvOzHSuyUA6+tVjp1SsQFdx/ahYWwAxNgkXenaQGdFqkZkcAB2fDN7+tXM
BhTZtPF6rwAoFzokFjjYoPK5SYGuVQDKbalytlQbwulxJo9VA2B0b97xvnk2
KFHyG/suFoC6eI53PMcGcyWq9Yu/MmGvQMrlIhts9Vg/1veEiSahO4fbYOXW
ut13bzLhyV8jz19jg0kH6fTjDUx0f99w8vsGGwT665pnVDMhKCH4v9kGWUs8
82JLmP97f2CDvcIw2sZEzKPdKY9224C7N+7QrGQm/iaWK24ot4HN8uOrrkQz
kSec7jEbBN9Lerh3GROalwjenCHPu6Z4LTOIiTPC9NxkAw/ZBvkVAUz4/L6+
8fd1G/CKdldZzmXiaWmP8v4eGyw2freglcpEghuRawNkPWvfyU5zYULyyUu/
Jy9tIPL9Tu2ILRM1qR/fpH60wbeXd6ezLZiga0yka0zYYHOA0QxjY9JfMwnf
ybZ4oSiRJ9BjIlmIozNt4Sh3Ov66JhNKk+WZk+VtUafOK1+sxsS5cvWRcnVb
rJU3+zJdiQkOzXAzzdAWJ+5Ge56UY+Lrcyv1F1a2yLbipTpKMbFTWG5dbGE7
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
yPoccpf1TejywG6WlXnWVDY0Hk1/O6+HjN87gXp1GuGrwh+Zavc9ULhw3VFl
st6vD4p8eNfvgSdfb/kkkHoZbThv+MJT4t9hc373yLOxM/gTNeOlBx4qTT08
h+i1yBXy7fPeeuBxuJYmQ50N5bQnjlIfPaB+ejaTr0308M1VK+589UBHYIqc
GdF7CUnPtfO+e2DKpZ9z24zYWH55qanPbw9M2Jn2ziL5uKpZIuDvJE/cMzqV
N8mS+N9/37t4okX4/43WbLStHnFfNMMTyT7GgSdtib8We++bJuUJSSmjfUH2
hFcT9Zzq5DyhmLUjPteBjc1huUNcJU/Yj9x0gSMb3GObF/5U88TM9V7UNaQ9
d7fCugNanrBdtfKRCmnPS5w3StP3BEPkCN+R/J5eZlg+bOyJn4lLpa4S/1Zd
0OC5w4KMT2I6p9GG5NeJqcecbT2xcUI8Ufn/qrrzeCresH/giIiyRKVNkSVL
m1SScmQ9y5yZs4pQhCSkEkpUSqlUlOxEEtK+SauQVCqRNkLZ0iLtieo3fZ9n
Ps/r57/rNXPumbnn3i4z533o/HZUtWb6G0sH1sH1dx49pa9HVbunMX2+A6u0
5tKZz/T17pmTOVe40IEVO9U20NeAXn+tM9yo5uTAymi8Lzal1yv3Jh4MrOc6
sNLU7163oevXM663PptyYE1Qzv2dRa/P9fpZkWskDqw78td9bIfS/f32XlPS
zYE1Z368kwF9f1vnvz4xa4kDS6k3rM+e7g+niu3uGfo4sBpdu+9n0PmyeOkV
3qQV9PWV8LUNuoSsq8cE/abBDiwZh+FmTY1C1oPnqjm2ax1Y+2wOuV99KGSF
W/cP8o2gz69t6e+yciErS3dCb3KUA6s8qNyrg86fp/73/o4DK2fMtJf6R4Us
Z/XDnZPjHFhj3k2+EU2vB3r+3Lq3fY8DS/NTvJPcdiFrsVVxT89+B9ZpOfJs
OZ0/Vy5S9fJMpe/Xd+959d50vtRbbFGX5cAKyb2q40QJWetTWJFOeQ6s5hdk
6oz59PzfHud4pdCBtTtCvT3fWMh6HmhbaHKSri/q8/wSOt9Kvm14dv85B9b0
ud2vImSFrMJd39b1XnJgrVPqVvnzXsDi8QIUbK/T15fU8cP1mYBVcth2zZYK
B9aRc3WvDlUIWAb6lg9OVtP1Ne+IQhudv9b4KZtW3XdguQziH5qdLmB1yaxL
r6xzYLFaK96eiKXzyziLqQVPHVhXC/smua8WsLySFH4GNDmwPpu3bRd7CFgz
Lh8ZMuyVA2uwJJQ8xqbz24QHobs66PvZkVMaMlvAGnHChtva7cBaVuoue2WS
gJV59Hy2So8D62dBhnemhoBlpPl285DPDqxBOwSjJ8sIWJ/jMgc9/ebAOmG2
xmv1R4plnh1nubrPgaW96lPY7haKpd8dMKNhwIEVpF9xcGct9T/rAhlH1iN6
+okuZ+JRV+sJb/VFO0XwkuZtnT5m7y4RvCRZOZ28zt0ieElP/D65BNHzDeMl
Leev7piyTwQvabnE5+dMer3DeElbtBPn7z4ggpe03OK6l02yCF5SlcNZDfc0
EbwkQffMX+8zRfCSzl4ZUv07RwQvKdP1l1F6vghe0rUlNVX3j4ngJVUGOAqO
0OspxktaOmpaqHGJCF4SS45o8qfnX8ZL0qr2mx1cJYKXtFvBbprDQxG8JJFL
4dq+ZyJ4SePdPE4nt4ngJSUfm7x/8kcRvKRVHbW3LveL4CW5FIz7uWiIGF5S
f3xdg6q2GF7SsJmlKm+MxPCS5s1Ocey1FMNLsphJ/3HF8JIC83fOueAphpcU
sDU422OtGF7SxsPvVg7dKYaX9OGp8pHcQ2J4SUP6Gji/L4rhJU1slPr8fSCG
l7RelPJ1R5cYXtKyObl/w2Qk/+cluUfvPD5aAi9pTIplstJMCbykLdeeG6/k
SeAlFR1Z6XzeVwIv6ZXuz28V0RJ4SWuVd87ekCKBl3Ri5mTVklMSeEmNa1o2
u92WwEtiZ13ab98sgZe0MO6ak+SrBF6S1pCfeYFDpPCShn1bXRwwXgovKUx3
lve06VJ4SZnLuDXptlJ4SQ8Trn+IF0jhJblEp97tWCKFlxQj2+YXGyiFl5T1
saCKGy6Fl3RY45iP3mYpvCSnv/uStXdI4SV9sSud7BQvhZeksjK2q2qfFF7S
57+iQ6cTpfCSNPZuGzd+vxRe0r2cMFMDejvjJcVW7Ex9tVcKLylvy/jpK3dL
4SXt80u8/mK7FF7Ssd/26uwtUnhJbnUpnx5skMJLUgjpnhq7Vgovabh3WtK2
lVJ4Sa9mKn7s8JbCS2oK2a9c7iqFl+R/JP3cDEoKL+mN66aLhKMUXlL5uJyW
qdZSeEnuEe79H2ZI4SWN+6n5JM9ICi/J18jQegV9/xgvKTvxc59UUwovybT8
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
aoe9WeEpMbykwyWjW/puiOElVdXvpvbR95vxkqz1YpfPo8dDxksy7P6o/OiT
GF5SUfBF3Ul0+2O8pPaf5fvlh0vgJfXd/2vvrCuBl6Ri4TLh5jQJvCSr1eeU
Fs6XwEsqvvenK4stgZcUvXPSkQKxBF5Sfa+KvrmnBF5SrdNhvrqfBF5S0uNa
5RGBEnhJC19usdEMkcBL6i84VP9ytQRe0qsNWied6JjxkiyWFziaB0vgJeUf
27+o1F8CL0mB/2GaopcEXpKB2wNtRxcJvKS6p7wlOVwJvKSXDzeRrAUSeEkj
udGzKPr6GS+JK1zi8UtHAi+J7JmruYLu/4yX9MnIIK/qlxhe0oCipev8LjG8
JMeUnVt+0OMr4yVlNE/3n3BdDC/pfqe9a0uhGF5S0aWmHK8DYnhJch5qu2uj
xPCS8pu+LJPS7Y3xkrxYueHj6fbJeEkqiVOHUwvE8JKCnp7dpG0ihpfkOs5h
aO5IMbykHP+BQVryYnhJ6rc+ns34LIKXtN5qtq/3axG8pGOPOv3214vgJYX+
8yqqRPCSdr/0Sa+5LIKXNM0r+H73aRG8pFh9N2FyoQhe0rkpRPPlXBG8pNaY
QENWpghekpnJyxbVVBG8pJvGlTfUDorgJVXscIw0PSCClyTm7LzN2S+Cl5QZ
fsZVSseMl3RzRHvnbHp/xkvqNHHUb0gSwUsyvzZQNTpFBC/pdp3Ztg9pInhJ
91f3q8/NEsFL8s/Zo9eRI4KXdN1HKfjFERG8pK+VCYWyRSJ4SVNvc3fYnRDB
S0pc7Xkj7owIXpL93Q8Kly+I4CUFPtVRLysVwUsyPTTywNZrInhJRUa/7D6U
ieAlKYf3PO2oEMFLWve/94fxkj5WP79tUi2ClzQ0chvX+44IXpKtqED2Lx0z
XpJcf637oLsieElVYxMerv63/X+9JLkla2t4dHmMl2QcPKQqmT4e4yWd/tw6
VVgpgpeknhy3fstNEbyky7L7tI2ui+AlGbbERDvQ7Yfxkm49/Ty+ha4Pxksa
fjBoxXe6PTFe0sayLfV7ikXwkqIHXX9QkC+ClxSneOa+4yERvCSNsO6FQXR7
YrykhJ/fcsYniuAlhVv6urntFMFLsm659cpgiwhekiT5aFFMhAhekqVisv7a
VSJ4SYsa9W71+YrgJZlcbfyt7S6Cl2QgIm3rBSJ4SVfZQ+VMnUTwkvwUW1sn
WYvgJaW+2z+naroIXtJtTbO9Yw1E8JICss4GThktgpf0I3/KYoVhInhJrzlH
Xh2XEcFLOlw0Pm7KVyG8pFMtOU8SuoTwkjYoz5K0vhDCS9ro9Gq3wQMhvCTT
88flAm4K4SX1B2XblpwXwkvy3X+tdmShEF7SiwUalvszhPCS6hNy/prvE8JL
qspfc0puqxBeklHG3ofK4UJ4Sav29neJVwrhJalllW1+u0QILymmvV23QSyE
lzQ3ZpVIhyOEl3TiwPKshzZCeEmi2Y93fJ4lhJeUu+NqeoKZEF6SSr6R57lJ
QnhJ/x6n+owVwksa+/jH+mJNIbyk7qsrZu8aKoSXZDAxYqXMYCG8pJiSyd+G
yQjhJV2w3nLq3/cXGS8peMWOsJ5vAnhJy36wDG9+EsBLsss5l27SI4CXVDG+
45TJOwG8pGTjRtubbwTwklZFZZj1dArgJf2uM+Wd6RDAS/rZlrhRmY4ZL0kj
oD6tr10AL6lf5/umaHo74yX5Xf2rnEaXx3hJQwa+jWTTx2O8pIMpzZv2vhXA
S7rufEN3xQcBvCSLO1nPnvUK4CUV123a/PKrAF7SU52V38L6BPCSApb7aub/
EcBLGuUXenG5vBBeUuLjrMvXlYXwkv5731dDCC+J/YrYazBaCC9pUU2Rr46u
EF5SQ9ndE1HGQnhJrwWb95uZC+ElZQ5Pt9GaJ4SXpJvc1TreXggvKXGV5WFz
QggvSdnc/dQ8qRBeUlGInoUe3T4ZLynxupv7w+VCeElNJx+LzEKE8JKOPV7i
qBchhJc0vuLekvRNQnhJ/GFv7kVtF8JLWuq47eKFeCG8pBDZEK7pfiG8pKxH
Gy7eThbCS1LghE4KTRfCS6r+bXp9dJYQXtKgzavP5mYL4SU9XaZl9o2OGS/J
y7pd+pven/GSbmSe9syj+zPjJWlos1fVpgjhJYXaRp0Pos+H8ZL+6z+7hfCS
5Ix8K4/GCOElfVhNzOXR1894SYFxVnPWBQrhJen5JVovpOuT8ZLODC65XU8J
4SVd8lV34dgK4SW1RMutqJouhJdUSXyO9J8ghJc05IG9qmCYEF6SsN8zO4fu
j4yXZPso/1h4lwBe0npu9Jnv9QJ4Sem+xIwFZQJ4Sc5jIwqDjwvgJen7LztY
mCqAl/TIKTRsaKwAXlLvBbW7l1cL4CUZnkxXfewpgJekabahPIIngJfkaqrp
c8dK8H9eUsHd1Z3GAnhJUZkKAb2jBfCSshWM7ymqCOAl5TanaRK/KXhJJpOu
3WztpeAlPX/wQ9TWQcFLMp9a8CugiYKXNPvRkJM+jyl4SbdSpdrn7lPwksp8
K9ssqyl4SYqjd11+VkHBS4o+0Oy4royClyR/8af5p2sUvKT1XmrG065S8JLK
wlzrNa5Q8JIuPRnWFHmZgpdk773sA0nHjJdk/yvhTAgdM15S6qb7dWV0zHhJ
evVkvx5dHuMlVTbwG9bTMeMlefjLqhTSMeMl1a7MdkygY8ZL6i9zNx9Bx4yX
VO68NmI0XT7jJcm3a1dsukTBSzq8dttVk4sUvKToZ+9Vf5+l4CVt+BLn8/wk
BS9pXf6+5YeLKHhJ1MM55VZ5FLyk94JLOrEZFLykv28vaQbtp+Al7b93pFs2
joKXFC27qGHxRgpeUl76SZUDqyh4SU1Htt284UXBS5KbetH0l5CCl/TdbsIm
NzsKXlLi14zen+YUvKTThNKFD7oUvKQZHixZgToFL+mFF0srbICEl7T9hOKQ
uKckvKSxpXs5SmdJeEminD0LjeJJeEmd0VfdRviR8JL2hNQPyLFIeEkyibv2
TxxDwkv60Z8Wm/2VDy/J7H6pzYmHfHhJiyYeNokq5sNLmqahcnpBHB9eUvCV
43P1/Pjwku5a2cxY5MCHlyRTvEFGw5APL6ncaJRGlBIfXtL9f78H9J6Al7Ru
fPBuvXoCXtK6eXM8/K8Q8JIMT0ezNuQT8JJey2fMtEgk4CXJVry2WBNNwEt6
uvb4QvUgAl5SZQ5/8Vt3Al7S2PoJUU0EAS9pdlLY0XIbAl5ScFBRQ4Q5AS9J
+43qkEYDAl7S/j2/F9waTcBLmtZ1b52mKgEviRtdW5wrR8BLmt/k1cL9wYOX
5LnriWrPOx68JPnhsZY+rTx4SfEDFW67HvPgJXHqu9daV/PgJaVNIGKkV3jw
kmoD7LedP8GDl8ReYBhhfogHL2nxJLb78X08eElL8gZN+xPNg5d03Ol4z6Ag
Hryk/zwrVx68pOq2oNVF9jx4SfXrflVKp/LgJWUvdTesH8mDlzTswmkj6g8X
XpL8Nq3Ff9u58JK8m48Ih9/jwktSa4jOuXyaCy/pbcSNJ8bJXHhJT15s3ZEY
yYWXVKrSbT/JiwsvKXTc0Fx1Jy68pDfjlafunsKFl/Rrokx0pRYXXtLe2SqT
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
48iDl6R0sMzYfTYPXtLsZ+NZ9fo8eEkbzN0Nb2nw4CUpKp4sFv7mwktSK3U4
lNnFhZdUWSyprajlwktavFBdtfsSF16SfGuB0ZQcLrykL13896e3c+EluV6b
Y3owkAsvKbAi6dwvARde0mKPVLHcHC68JLee0Jc1Y7nwkrKeu4+PlOHCSxLH
xLRN6eDASzrD1f6rcJcDL+l9KmWjf4oDL8n8vsfaoiQOvKRS7pqAixs48JLO
hJd9WenFgZdEnt/Q/NaZAy/plk99n2gGB16S3fsBreoxHHhJv08Y/12uwIGX
ZDIsfof4Exte0tdAadTJZja8pPmmEw8l3mfDSwpI0FqhcJ0NL2lfS4Xj0NNs
eEk3Fl/PK8xjw0sa6pz0rimVDS9pR1fDzuJ9bHhJC6M0346kx1vGSyJ5L8N1
Y9jwkm6mVGTfp8dnxksqPCy9Oz6SDS9p1GlDP60NbHhJEwZVvjxHx4yX9Lj5
euafjWx4SY7bC1R/bGbDS4qzVj10aDsbXlKx/dbSX3vY8JLKXyXfUU5hw0t6
KX1uVUeP/4yXpNH1IkJEz4eMlxTcYPox4SobXpKCr/uQPTVseEndzwbMOXT9
Ml7S1NCsp3fp+me8pLb1D7w1FDnwksZOmciaqMOBl9T57/uOsznwkipb4lem
CzjwktrOnHDtCOLAS2p+8ut5yW4OvCRec/fEj3Q+ynhJd1x6vf3vceAlva/b
+ljmAwdekrBl9LGDalx4SUlDJ2vLz+TCSyLeThIZu3DhJWkobd33OpILL2nr
t8uyw3K58JJmLbRtjqXXQ4yXVBW129XkPRdeUs0ctcKndH9nvKT2v7Z/Aubw
4CUd9U1LuOnOg5d04ueuA5fo8YrxkvY7x8+bcpQHL6mnffi1gTs8eEkeHkk8
eTqfY7ykcNvtOrpqBLykZxM9l0+fTsBLGrU7cbEaRcBLqlVLnpYRTMBLyl7w
atSZ3QS8pHEFb5ynFhDwkiJciRN9ZQS8JLG/p5LucwJeUq9fcv2VjwS8pNg3
q+JeyfPhJQk2++YUafPhJe25+SnJ1JQPL2mdzb6WaGs+vCSnPZf6LvP48JLm
LXjj/mMxH15SQkdqDDeADy9py0iH9gfhfHhJjj7L+1O38eElTfTeYHszgQ8v
ySnv57QlmXx4SX2X3Vm7CvjwkoKsdd+7nuXDS+q4XHa84yofXlLanQv99rf5
8JIq+zcI9z3iw0s63L7LpKmRDy9pzailvxd28uElBRqts2/s5cNLqimwX3+1
nw8v6YEpe8SfwSS8pFOOvxNLhpPwko7vbvSXmUDCSwqcdDGty5SElySNvzbf
bS4JL8nmxfqv1k4kvKQ/E9d6hEpIeEmBoTO0O5aR8JIWv7GuXLuGhJd0OGG8
rMIWEl7SqC2Lg6P2kfCSEu5HF9/MIuElte5UW3SxmISX1HLnoCarlISX5Jub
FmVXRcJLstPPm5VfR8JLEvlZNbKbSXhJ/pFdw0Z2k/CSFoebB/V8JuEl/Q7K
Sy3pJ+ElJc19NapYloKX5HJfZcVTeQpeksXGg2oiRQpe0ghq4WL1IRS8pE7h
kwxZZQpeUuLeEbqj6ZjxkmSHVVqx6f0ZL0n3Wb7lNro8xktq7IsOuEofj/GS
Ulb8evNGhoKX5Fp0rdXoJwkv6XXxOZW09yS8pFXq5h52LSS8pGNDk1rsa0l4
SXOfWGRduUHCS7p9eFXOrRMkvKSBgkNfNqeT8JI2jZ2Yq7KdhJf0w5x3bmsI
CS9JQ3+ThaIbCS9prb7WtPMLSXhJt1f4nSg0IeElnTF+VCpHt0fGS2pJO+XZ
+pMPL+nrR/ejS1r48JJyvCwysm/x4SVt1U90ulLMh5fECX5woT6RDy8pM9Sp
VyGCDy9JP8hFNsSTDy8pbo/rl2kOfHhJISpFtcvM+PCSYsfl5hlr8eElrfme
GXZogICX9D/P5wh4SRFVe7gatQS8pLnHFmydf4WAl6RlvtJwAz0eMl6SwsjQ
pc+TCHhJiqqX3YO2EvCSRtRlOTqvJeAlGY3ZzN7oQ8BLssq+mTDWhYCX5Dyy
wsmSS8BL4lh1pLWzCHhJVuVxZ80tCXhJI/xUr1nMIOAlPX75pH3AlICXtObV
QknWZAJe0pvJ5+ZONiLgJc0MjLt2io4ZL4m7bNJQRxMCXpJpVTv1eyoBL+kB
b0pJ1ywCXtLUUx4Bo2wIeEmO+U8OZnMIeEnqXT999i0i4CXtMDMYNOBPwEs6
OuVqxvdIAl6S72Edt8REAl5S5cITK5qLCHhJpTlOSa8rCXhJxMXq8UGvCXhJ
e112vbGR48NLil3U+WScPh9e0tw9s+/dcuLDSyq587hgIJAPL0n59Rhy6wE+
vCSrY955Y6/w4SWJvivs2NHGh5fkme7ZFDeUhJfkH1AV+2oWCS8p3CrFV7SE
hJeU2mzimRNHwkt6bNIo2HWGhJc094vspPrnJLykjtgB12x6vGC8JJ7+nrWV
mhS8pCfXlzy0NqTgJW23yfV8M4eCl7QsIXp4oTMFL2lthn6T+yIKXtIlTtnx
Lj8KXtK8uOh1xqEUvKTf8+ONBm2m4CUpSkeel+yi4CV5XGYPlTtAwUvKvDk5
+FMaBS/pVqgKd+ohCl5SBHuC173DFLwk8kJicOMRCl5Sx5SEGavzKXhJTyY7
+x+itzNe0o2xXbUR9OcZL8lqY7qxOl0+4yW13dg3PSKdgpfk4v41ryKJgpdk
fvubrcJeCl7S0LCb1eR2Cl7S9uZt3y9EUfCSLMOCdnLo+mC8pJtnC20mBlDw
ki4N8XnKXkLBS7reW6P6QkTBS1r5Uv1ImxMFL8ndwUOyfh4FL2lKdkvriakU
vKRIj1vySboUvKTmn/M2LdCi4CV97whRLRtMwUsqsZj0SkrPf4yX5Doq5bbh
UxJeksKSVN6IqyS8pCtvsqUOuSS8pOhFyaEP6fmA8ZJG2O84dCeQhJfEs91Q
yxaR8JI+doTL+FmR8JLKb8dNttAj4SXt33jB9q4yCS/JIH2ww4J/z4//10ty
vrjN9GgzH17STT/LnlF3+fCSXG1Nthdd5MNLam70fh9yhA8vSbPm7ehtdP9k
vKRbBXcV+7by4SVdlVc51bGODy+pIuK80tIVfHhJh9MeDoum5w/GS9L97VMi
kfDhJQ2ZG/VngODDSzJsm9i005kPL8kmcRF7OD3fMF7SxOdmNsft+PCS9lJH
LwbZ8+Eluey5XxhIjzeMl2RrUKx6g17PMl7Sfx62mA8v6dzCQ0QxfX6MlyQd
vpGavpIPL4l8lDGmZT0fXtK7mVeb4nfx4SVt7Em/rZrFh5dEXfimYnWGDy/p
ivWuF21VfHhJQ+aO9Hn1kg8vaY+ny3PF73x4SUleKivN1Eh4SWu+f2TrG5Pw
kkIflR+ttCPhJX04anv2tScJL8nY1CRLtIGEl7RhuFXq+4MkvCRzjWmPY+jx
j/GSchurtryrIeElaRreeNTfRcJLCq4L2GBPr+cYL8lgcPswC1UKXpKL0rF5
JWMoeElm58ZmXqLHR8ZLqmlNua1nTsFLWrIyStpqTcFLUp1i+qrRkfr/vSSK
gpdkHP67ax49fjJe0jGl06xEuv8zXtKaNkf+YHo8ZbykNbM/iXNXUvCSDkxv
TvUPoeAlVcnM9/SmxxfGS/rZYN2dFE7BSxrTMjR68AYKXtIIbtPSa5EUvKRG
5xcNNzZS8JIWKc7W1aLHL8ZL2nBBZ0cZvZ3xkmbEVHDv0Z9nvKSATNE5K7p8
xkvSnPlHdkQEBS9p9LrPkUvXUfCSAhOX+E5aQ8FL+nkxVM4nmIKXdFzLK2Uy
PT4yXlL4c5F/uC8FL8nRYmOpdCkFL0lRPORhjRsFL6lwucmHFjEFL2l0tuqi
ZD4FL8nBsEP0nR5PGS/pHycy2JaCl/RF1Ti1Zi4FL+leqeIhIX2/GS9pGPfK
uVwTCl7SuOZYqkKPgpfku7foYxndfhgviRvur3JkOAUvyfK8vE4Yvf5nvKSD
S8tyWXIUvKSEaVd0x3wl4SUFv7W+d6eNhJeUNXmXRV49CS+pbaKRsLSChJek
pZyqPeE8CS/p7xivjV1HSHhJ63YNXmOQTMJLst03tOfdDhJekuXSH+0E3d8Y
L8nAgsv1DCLhJT2zjR8x3YuElzSpbIHlEzr/Y7yk+o7OgmVcEl7SlW4l13e2
JLykfDlj1mY6n2S8pGXL7wlmmZPwkqr5oTHjzUh4Sdn//AMjEl5SVHP6zppJ
JLyk4UZ2Gvt1SXhJj8ydxsRNJOElTVlJeKXTMeMlZc0dOHye3p/xkvYq/soo
p8tjvKSIBR+UThuS8JIeOm086k/nK4yXJL+HmPFsKgkvaU+4ot/bmSS8pKYQ
SnY3fX2Ml+Tz+sGNfBsSXlL6LGNPQ0cSXtKXeoW0nzwSXlKzocoUJTEJL6ku
peUJazEJL8kuwVi015uEl5S3fp9n0woSXpLftZILI1eT8JL+VjqPMI4g4SW1
972Z+zeahJcUe2tB67ZYEl6SS2JvZf5uEl5STdWRI0QiCS/J86GstT/dfhgv
KfLfDwbS+SHjJX15t3Hd0WwSXtKA+7c5J+j1AuMlTVt87/P7PBJe0vgXZ4d4
5JPwkpbcX9L6lY4ZLyl28vYXxXTMeEkGLc8Xr6fbM+MlNbSrVosPk/CSjKY8
j5l1iISXdLr4/cfhGSS8JAXx7zXt9PzBeElXRt9YlbuPhJfk29vBtqXX14yX
lHLPwPfKJhJeUle2uYFiGAkv6Z1H2YexK0l4SRYDMXqf6PmL8ZKkQVONogUk
vKTuI2FLLtP5MOMlbU5Wm5ZFt3/GSzo+60TfeLp9Ml6SYtigSRaqJLwkPW6V
6tM+PrykpMKiiX/ofILxkj5s8bqaU8OHl3Tzbq7DxXN8eElmestHzE/jw0ua
31DrSkbx4SUlNDnOVl3Kh5d0YfqMB+m2fHhJ9nd/2I/U48NLqsuVu54ry4eX
9PNUqbtnKwEvyfnDNvug6wS8JDdhTerHDAJeUvnTHxsHryfgJY0OW6VVLyHg
JX02yIgJMyfgJbW3vH6roUbAS9qaeTKk6h0PXpK/2G/OhWoevCQjmTXef/N5
8JJcU+eOqNrKg5e0b4TBWhNvHrwkr5DMQ4QtD16ST67idUqXBy9pRu6DT2I5
HrwkN39Xz8h2LryksI9qRh23ufCSxk9zW3XuOBdeUtuEHDfFA1x4Sf/lP5Fc
1v8DLdjoFg==
    "], {
     {GrayLevel[0.5], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl2uMWIDizBdCetm3btm3btm3bnLZt27Zt27am7+7v/tgrD5CclaSqEjRs
V7FtwAABAvxD0hABAkwKHCDAZKYwlWlMZwYzmcVs5jCXecxnAQtZxGKWsJRl
LGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97OcABznEYY5wlGMc
5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc5wEPecRjnvCUZzzn
BS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/uMPAYLYOwISiMAEISjBCE4I
QhKK0IQhLOEITwQiEonIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQhKclITgpS
korUpCEt6UhPBjKSicxkISvZyE4OcpKL3OQhL/nITwEKUojCFKEoxShOCUpS
itKUoSzlKE8FKlKJylShKtWoTg1qUova1KEu9ahPAxrSiMY0oSnNaE4LWtKK
1rShLe1oTwc60onOdKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorR
jGEs4xjPBP5lIpOYzBSmMo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatY
zRrWso71bGAjm9jMFrayje3sYCe72M0e9rKP/RzgIIc4zBGOcozjnOAkpzjN
Gc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7POAhj3jME57yjOe84CWveM0b
3vKO93zgI5/4zBe+8o3v/OAnv/jNf/whQFD5JyCBCEwQghKM4IQgJKEITRjC
Eo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKS
jvRkICOZyEwWspKN7OQgJ7nITR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO
8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGNaEwTmtKM5rSgJa1oTRva0o72
dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjGAkoxjNGMYyjvFM
4F8mMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSvb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4SznOM8F
LnKJy1zhKte4zg1ucovb3OEu97jPAx7yiMc84SnPeM4LXvKK17zhLe94zwc+
8onPfOEr3/jOD37yi9/8xx8CBJN/AhKIwAQhKMEITghCEorQhCEs4QhPBCIS
ichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3pSE8GMpKJ
zGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK0pShLOUoTwUqUonK
VKEq1ahODWpSi9rUoS71qE8DGtKIxjShKc1oTgta0orWtKEt7WhPBzrSic50
oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzjGM8E/mUik5jM
FKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwW
trKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CSnOM0ZznKO81zgIpe4zBWu
co3r3OAmt7jNHe5yj/s84CGPeMwTnvKM57zgJa94zRve8o73fOAjn/jMF77y
je/84Ce/+M1//CFAcPknIIEITBCCEozghCAkoQhNGMISjvBEICKRiEwUohKN
6MQgJrGITRziEo/4JCAhiUhMEpKSjOSkICWpSE0a0pKO9GQgI5nITBayko3s
5CAnuchNHvKSj/wUoCCFKEwRilKM4pSgJKUoTRnKUo7yVKAilahMFapSjerU
oCa1qE0d6lKP+jSgIY1oTBOa0ozmtKAlrWhNG9rSjvZ0oCOd6EwXutKN7vSg
J73oTR/60o/+DGAggxjMEIYyjOGMYCSjGM0YxjKO8UzgXyYyiclMYSrTmM4M
ZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJzWxhK9vYzg52
sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconLXOEq17jODW5y
i9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic984Svf+M4PfvKL
3/zHHwKEkH8CEojABCEowQhOCEISitCEISzhCE8EIhKJyEQhKtGITgxiEovY
xCEu8YhPAhKSiMQkCfH/taSJgZ0rJjCecYxlDKMZxUhGMJxhDGUIgxnEQAbQ
n370pQ+96UVPetCdbnSlC53pREc60J52tKUNrWlFS1rQnGY0pQmNaURDGlCf
etSlDrWpRU1qUJ1qVKUKlalERSpQnnKUpQylKUVJSlCcYhSlCIUpREEKkJ98
5CUPuclFTnKQnWxkJQuZyURGMpCedKQlDalJRUpSkJxkJCUJiUlEQhIQn3jE
JQ6xiUVMYhCdaEQlCpGJREQiEJ5whCUMoQlFSEIQnGAEJQiBCURA/iEAfwI5
9/zmFz/5wXe+8ZUvfOYTH/nAe97xlje85hUvecFznvGUJzzmEQ95wH3ucZc7
3OYWN7nBda5xlStc5hIXucB5znGWM5zmFCc5wXGOcZQjHOYQBznAfvaxlz3s
Zhc72cF2trGVLWxmExvZwHrWsZY1rGYVK1nBcpaxlCUsZhELWcB85jGXOcxm
FjOZwXSmMZUpTGYSE/mXCYxnHGMZw2hGMZIRDGcYQxnCYAYxkAH0px996UNv
etGTHnSnG13pQmc60ZEOtKcdbWlDa1rRkhY0pxlNaUJjGtGQBtSnHnWpQ21q
UZMaVKcaValCZSpRkQqUpxxlKUNpSlGSEhSnGEUpQmEKUZAC5CcfeclDbnKR
kxxkJxtZyUJmMpGRDKQnHWlJQ2pSkZIUJCcZSUlCYhKRkATEJx5xiUNsYhGT
GEQnGlGJQmQiEZEIhCccYQlDaEIRkhAEJxhBCUJgAhGQfwjAn4Dyz29+8ZMf
fOcbX/nCZz7xkQ+85x1vecNrXvGSFzznGU95wmMe8ZAH3Oced7nDbW5xkxtc
5xpXucJlLnGRC5znHGc5w2lOcZITHOcYRznCYQ5xkAPsZx972cNudrGTHWxn
G1vZwmY2sZENrGcda1nDalaxkhUsZxlLWcJiFrGQBcxnHnOZw2xmMZMZTGca
U5nCZCYxkX+ZwHjGMZYxjGYUIxnBcIYxlCEMZhADGUB/+tGXPvSmFz3pQXe6
0ZUudKYTHelAe9rxt9nVhta0oiUtaE4zmtKExjSiIQ2oTz3qUofa1KImNahO
NapShcpUoiIVKE85ylKG0pSiJCUoTjGKUoTCFKIgBchPPvKSh9zkIic5yE42
spKFzGQiIxlITzrSkobUpCIlKUhOMpKShMQkIiEJiE884hKH2MQiJjGITjSi
EoXIRCIiEQhPOMIShtCEIiQhCE4wghKEwAQiIP8QgD//yD+/+cVPfvCdb3zl
C5/5xEc+8J53vOUNr3nFS17wnGc85QmPecRDHnCfe9zlDre5xU1ucJ1rXOUK
l7nERS5wnnOc5QynOcVJTnCcYxzlCIc5xEEOsJ997GUPu9nFTnawnW1sZQub
2cRGNrCedaxlDatZxUpWsJxlLGUJi1nEQhYwn3nMZQ6zmcVMZjCdaUxlCpOZ
xET+ZQLjGcdYxjCaUYxkBMMZxlCGMJhBDGQA/elHX/rQm170pAfd6UZXutCZ
TnSkA+1pR1va0JpWtKQFzWlGU5rQmEY0pAH1qUdd6lCbWtSkBtWpRlWqUJlK
VKQC5SlHWcpQmlKUpATFKUZRilCYQhSkAPnJR17ykJtc5CQH2clGVrKQmUxk
JAPpSUda0pCaVKQkBclJRlKSkJhEJCQB8YlHXOIQm1jEJAbRiUZUohCZSEQk
AuEJR1jCEJpQhCQEwQlGUIIQmEAE5J9//n9A4Y/lP37zi5/84Dvf+MoXPvOJ
j3zgPe94yxte84qXvOA5z3jKEx7ziIc84D73uMsdbnOLm9zgOte4yhUuc4mL
XOA85zjLGU5zipOc4DjHOMoRDnOIgxxgP/vYyx52s4ud7GA729jKFjaziY1s
YD3rWMsaVrOKlaxgOctYyhIWs4iFLGA+85jLHGYzi5nMYDrTmMoUJjOJifzL
BMYzjrGMYTSjGMkIhjOMoQxhMIMYyAD604++9KE3vehJD7rTja50oTOd6EgH
2tOOtrShNa1oSQua04ymNKExjWhIA+pTj7rUoTa1qEkNqlONqlShMpWoSAXK
U46ylKE0pShJCYpTjKIUoTCFKEgB8pOPvOQhN7nISQ6yk42sZCEzmchIBtKT
jrSkITWpSEkKkpOMpCQhMYlISALiE4+4xCE2sYhJDKITjahEITKRiEgEwhOO
sIQhNKEIGeB/Jay/Zey/ray/7ey/Iy1/v/t/n/x/r/3/zSb9H+H8peU=
        
        "]]]}, {{}, {}, {}, 
      {Hue[0.67, 0.6, 0.6], Thickness[0.0001], JoinForm["Round"], 
       LineBox[CompressedData["
1:eJwl2NMSGAgSAMDYtm3btm3btm3btm3uxrZt29xcp+6ha2o+YJiwUftK7QIG
CBBgcpAAAf7GQARGGiAowQhOCEISitCEISzhCE8EIhKJyEQhKtGITgxiEovY
xCEu8YhPAhKSiMQkISnJSE4KUpKK1KQhLelITwYykonMZCEr2chODnKSi9zk
IS/5yE8BClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tSh
LvWoTwMa0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93oTg960ove9KEv
/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z
mM8CFrKIxSxhKctYzgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vY
zz/8ywEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu
97jPAx7yiMc84SnPeM4LXvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/8xx/+
Fn9AAhGYIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJ
QEISkZgkJCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlA
QQpRmCIUpRjFKUFJSlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBD
GtGYJjSlGc1pQUta0Zo2tOVv825PBzrSic50oSvd6E4PetKL3vShL/3ozwAG
MojBDGEowxjOCEYyitGMYSzjGM8EJjKJyUxhKtOYzgxmMovZzGEu85jPAhay
iMUsYSnLWM4KVrKK1axhLetYzwY2sonNbGEr29jODnayi93sYS/72M8//MsB
DnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrXuM4NbnKL29zhLve4zwMe
8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK9/4zg9+8ovf/Mcf/g7+gAQi
MEEISjCCE4KQhCI0YQhLOMITgYhEIjJRiEo0ohODmMQiNnGISzzik4CEJCIx
SUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3echLPvJTgIIUojBF
KEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1o
SjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6M4CBDGIwQxjK
MIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoy
lrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+9vMP/3KAgxziMEc4
yjGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84CHPOIxT3jK
M57zgpe84jVveMs73vOBj3ziM1/4yje+84Of/OI3//GHv0t/QAIRmCAEJRjB
CUFIQhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJ
QUpSkZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgiFKUYxSlB
SUpRmjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnNaUFL
WtGaNrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR/9GcBABjGYIQxlGMMZwUhG
MZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZy1nBSlax
mjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+/mHfznAQQ5xmCMc5RjHOcFJ
TnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte
8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGb//jD34M/IIEITBCCEozghCAkoQhN
GMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAhiUhMEpKSjOSkICWpSE0a
0pKO9GQgI5nITBayko3s5CAnuchNHvKSj/wUoCCFKEwRilKM4pSgJKUoTRnK
Uo7yVKAilahMFapSjerUoCa1qE0d6lKP+jSgIY1oTBOa0ozmtKAlrWhNG9rS
jvZ0oCOd6EwXutKN7vSgJ73oTR/60o/+DGAggxjMEIYyjOGMYCSjGM0YxjKO
8UxgIpOC/P+X9D/G0zM3
        "],
        VertexColors->Automatic]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Thickness[0.0001], JoinForm[
       "Round"], LineBox[CompressedData["
1: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
/wEkHXVf
        "],
        VertexColors->Automatic]}}},
    VertexColors->{{
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.42105263157894735`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.19736842105263158`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}}],
   AspectRatio->NCache[
     Rational[1, 3], 0.3333333333333333],
   Axes->{False, False},
   AxesOrigin->{0, 50.},
   Epilog->InsetBox[
     GraphicsBox[
      GraphicsComplexBox[CompressedData["
1:eJxdyzlKREEARdGHkaGBgYGBioiIiPOs3c7z1M6paOwWahv2TsxqSS5BG0X4
p6AoTl3e6Mt7560vyevP7b2/56vV/eidz9bfR7vpfjyAB/EQHsYjeAyP4wk8
iafwNJ7Bs3gOz+MFvIiX8DJewat4Da/jDbyJt/A2buF20wVnh46zS8fZo+Ps
03EO6DiHdJwjOs4xHeeEjnNKxzmj45zTcS7oOJd0nCs6znXTbVxwxblhjwuu
OB32uOCKc8seF1xx7tjjgivOPXtccMV5YI8LrjiP7HHBFeeJPS644jz/+xva
7xOk
       "], {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           Thickness[1]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100}, VertexColors -> Automatic]}}}, VertexColors -> {{
          GrayLevel[0]}, {
          GrayLevel[0.05]}, {
          GrayLevel[0.1]}, {
          GrayLevel[0.15]}, {
          GrayLevel[0.2]}, {
          GrayLevel[0.25]}, {
          GrayLevel[0.3]}, {
          GrayLevel[0.35]}, {
          GrayLevel[0.4]}, {
          GrayLevel[0.45]}, {
          GrayLevel[0.5]}, {
          RGBColor[0.5, 0.5, 0.5]}, {
          RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
          RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
          RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
          RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
          RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
          RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
          RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
          RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
          RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
          RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
          RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
          RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
          RGBColor[0.625, 0.5, 0.375]}, {
          RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
          RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
          RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
          RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
          RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
          RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
          RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
          RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
          RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
          RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
          RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
          RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
          RGBColor[0.75, 0.5, 0.25]}, {
          RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
          RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
          RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
          RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
          RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
          RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
          RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
          RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
          RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
          RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
          RGBColor[0.8557692307692308, 0.5, 0.14423076923076922`]}, {
          RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
          RGBColor[0.875, 0.5, 0.125]}, {
          RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
          RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
          RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
          RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
          RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
          RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
          RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
          RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
          RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
          RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
          RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
          RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
          RGBColor[1, 0.5, 0]}, {
          RGBColor[1, 0.5, 0]}, {
          RGBColor[1, 0.4868421052631579, 0]}, {
          RGBColor[1, 0.4736842105263158, 0]}, {
          RGBColor[1, 0.4605263157894737, 0]}, {
          RGBColor[1, 0.4473684210526316, 0]}, {
          RGBColor[1, 0.4342105263157895, 0]}, {
          RGBColor[1, 0.42105263157894735`, 0]}, {
          RGBColor[1, 0.40789473684210525`, 0]}, {
          RGBColor[1, 0.39473684210526316`, 0]}, {
          RGBColor[1, 0.3815789473684211, 0]}, {
          RGBColor[1, 0.368421052631579, 0]}, {
          RGBColor[1, 0.35526315789473684`, 0]}, {
          RGBColor[1, 0.34210526315789475`, 0]}, {
          RGBColor[1, 0.32894736842105265`, 0]}, {
          RGBColor[1, 0.3157894736842105, 0]}, {
          RGBColor[1, 0.3026315789473684, 0]}, {
          RGBColor[1, 0.2894736842105263, 0]}, {
          RGBColor[1, 0.2763157894736842, 0]}, {
          RGBColor[1, 0.26315789473684215`, 0]}, {
          RGBColor[1, 0.25, 0]}, {
          RGBColor[1, 0.2368421052631579, 0]}, {
          RGBColor[1, 0.22368421052631576`, 0]}, {
          RGBColor[1, 0.21052631578947367`, 0]}, {
          RGBColor[1, 0.19736842105263158`, 0]}, {
          RGBColor[1, 0.1842105263157895, 0]}, {
          RGBColor[1, 0.17105263157894735`, 0]}, {
          RGBColor[1, 0.15789473684210525`, 0]}, {
          RGBColor[1, 0.14473684210526316`, 0]}, {
          RGBColor[1, 0.13157894736842107`, 0]}, {
          RGBColor[1, 0.11842105263157893`, 0]}, {
          RGBColor[1, 0.10526315789473684`, 0]}, {
          RGBColor[1, 0.09210526315789475, 0]}, {
          RGBColor[1, 0.07894736842105265, 0]}, {
          RGBColor[1, 0.06578947368421051, 0]}, {
          RGBColor[1, 0.05263157894736842, 0]}, {
          RGBColor[1, 0.03947368421052633, 0]}}], {AspectRatio -> NCache[
         Rational[1, 15], 0.06666666666666667], Axes -> {False, False}, 
       AxesOrigin -> {0, 0}, Frame -> True, FrameLabel -> {
         FormBox[
          StyleBox[
          "\"Percent Unemployed over 27 Weeks\"", "ScaleTitle", StripOnInput -> 
           False], TraditionalForm], None}, FrameTicks -> {{None, None}, {{{1, 
            FormBox["15.8`", TraditionalForm]}, {50, 
            FormBox["31.`", TraditionalForm]}, {100, 
            FormBox["46.1`", TraditionalForm]}}, None}}, ImageSize -> 300, 
       PlotRange -> {{0., 100.}, {0., 0.2}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {
         Scaled[0.02], 
         Scaled[0.02]}}], 
     Offset[{-820, -265}, 
      Scaled[{1, 1}]], {Left, Bottom}],
   Frame->True,
   FrameLabel->{
     FormBox[
      StyleBox["\"\"", "AxesTitle", StripOnInput -> False], TraditionalForm], 
     
     FormBox[
      StyleBox["\"Consumer Confidence\"", "AxesTitle", StripOnInput -> False],
       TraditionalForm]},
   FrameTicks->{{Automatic, None}, {{{0, 
        FormBox["\"August 2006\"", TraditionalForm]}, {5, 
        FormBox["\"January 2007\"", TraditionalForm]}, {11, 
        FormBox["\"July 2007\"", TraditionalForm]}, {17, 
        FormBox["\"January 2008\"", TraditionalForm]}, {23, 
        FormBox["\"July 2008\"", TraditionalForm]}, {29, 
        FormBox["\"January 2009\"", TraditionalForm]}, {35, 
        FormBox["\"July 2009\"", TraditionalForm]}, {41, 
        FormBox["\"January 2010\"", TraditionalForm]}, {44, 
        FormBox["\"May 2010\"", TraditionalForm]}}, None}},
   GridLines->{{{0, 
       GrayLevel[0.8]}, {5, 
       GrayLevel[0.8]}, {11, 
       GrayLevel[0.8]}, {17, 
       GrayLevel[0.8]}, {23, 
       GrayLevel[0.8]}, {29, 
       GrayLevel[0.8]}, {35, 
       GrayLevel[0.8]}, {41, 
       GrayLevel[0.8]}, {44, 
       GrayLevel[0.8]}}, None},
   ImageSize->900,
   PlotLabel->FormBox[
     StyleBox[
     "\"Consumer Confidence and Unemployment\"", "GraphTitle", StripOnInput -> 
      False], TraditionalForm],
   PlotRange->{{-3.1170812458958252`*^-19, 44.}, {50.783071271215604`, 
    101.462}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]},
   Ticks->If[{False, False}, 
     Graphics`DateListPlotDump`getAxesTicks[
     Graphics`DateListPlotDump`ticksopt, 
      Graphics`DateListPlotDump`dtformatopt, 
      If[
       And[Length[Graphics`DateListPlotDump`pltrange] === 2, Length[
          Part[Graphics`DateListPlotDump`pltrange, 1]] === 2, 
        VectorQ[
         Quiet[
          Map[DateList, 
           Part[Graphics`DateListPlotDump`pltrange, 1]]], 
         Graphics`DateListPlotDump`dateQ]], 
       Map[DateList, 
        Part[Graphics`DateListPlotDump`pltrange, 1]], 
       Graphics`DateListPlotDump`datedata], 
      Graphics`DateListPlotDump`prpadding], None]], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.690662367786319*^9, 3.6906623706937647`*^9}, {
   3.690663362379737*^9, 3.690663372362981*^9}, 3.690721385059888*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["R3M Visualization", "Section",
 CellChangeTimes->{
  3.483202458955147*^9, {3.487957284921875*^9, 3.4879573120625*^9}, {
   3.496144584734375*^9, 3.496144593328125*^9}, {3.690200755805492*^9, 
   3.6902007609967213`*^9}, {3.690662380243819*^9, 3.690662380969428*^9}, {
   3.690826490104816*^9, 3.690826511205926*^9}, {3.6908281160246477`*^9, 
   3.6908281290424385`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}], "\n", 
   RowBox[{
    RowBox[{"lSmoothingRate", " ", "=", " ", 
     RowBox[{"1", "/", "40"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"R3M", " ", "=", " ", 
     RowBox[{
      RowBox[{
      "Import", "[", 
       "\"\<C:\\\\Users\\\\ry5t\\\\Workspaces\\\\Neon1\\\\R3MVisuals\\\\\
DataSet_1.xlsx\>\"", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dschrgDate", " ", "=", " ", 
     RowBox[{
      RowBox[{"Transpose", "[", "R3M", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", 
        RowBox[{"1", ";;", "300"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dschrgCount", " ", "=", " ", 
     RowBox[{
      RowBox[{"Transpose", "[", "R3M", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", 
        RowBox[{"1", ";;", "300"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"admitCount", " ", "=", " ", 
     RowBox[{
      RowBox[{"Transpose", "[", "R3M", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"3", ",", 
        RowBox[{"1", ";;", "300"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"readmitRate", " ", "=", " ", 
     RowBox[{
      RowBox[{"Transpose", "[", "R3M", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"4", ",", 
        RowBox[{"1", ";;", "300"}]}], "]"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"cohortCount", " ", "=", " ", 
     RowBox[{
      RowBox[{"Transpose", "[", "R3M", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"5", ",", 
        RowBox[{"1", ";;", "300"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cohortLoad", " ", "=", " ", 
     RowBox[{
      RowBox[{"Transpose", "[", "R3M", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"6", ",", 
        RowBox[{"1", ";;", "300"}]}], "]"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ReadmitRateRelative", " ", "=", " ", 
     RowBox[{"ExponentialMovingAverage", "[", 
      RowBox[{"readmitRate", ",", " ", "lSmoothingRate"}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"AcuityRate", " ", "=", " ", "cohortLoad"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"CohortSizeRelative", " ", "=", " ", "cohortCount"}], ";"}], "\n",
    "\n", 
   RowBox[{
    RowBox[{"AcuityRateSmoothed", " ", "=", " ", 
     RowBox[{"ExponentialMovingAverage", "[", 
      RowBox[{"AcuityRate", ",", " ", "lSmoothingRate"}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"AcuityRateScaled", " ", "=", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"99", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"AcuityRateSmoothed", " ", "-", " ", 
            RowBox[{"Min", "[", "AcuityRateSmoothed", "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Max", "[", "AcuityRateSmoothed", "]"}], " ", "-", " ", 
            "\n", "         \t", 
            RowBox[{"Min", "[", "AcuityRateSmoothed", "]"}]}], ")"}]}], 
         ")"}]}], " ", "+", " ", "1"}], "]"}]}], ";"}], "\n", "      ", "\n", 
   
   RowBox[{
    RowBox[{"CohortSizeSmoothed", " ", "=", " ", 
     RowBox[{"ExponentialMovingAverage", "[", 
      RowBox[{"CohortSizeRelative", ",", " ", "lSmoothingRate"}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"CohortSizeScaled", " ", "=", " ", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"99", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", " ", 
           RowBox[{"CohortSizeSmoothed", " ", "-", " ", 
            RowBox[{"Min", "[", " ", "CohortSizeSmoothed", "]"}]}], ")"}], 
          "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Max", "[", " ", "CohortSizeSmoothed", "]"}], " ", "-", 
            " ", 
            RowBox[{"Min", "[", " ", "CohortSizeSmoothed", "]"}]}], ")"}]}], 
         ")"}]}], " ", "+", " ", "1"}], "]"}]}], ";"}], " ", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "AcuityRateTemp", " ", "is", " ", "a", " ", "color", " ", "scale", " ", 
     "I", " ", "designed", " ", "by", " ", "blending", " ", "over", " ", "a", 
     " ", "range", " ", "of", " ", "300", " ", "gradations"}], " ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"Temp1", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blend", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Black", ",", " ", "Gray"}], "}"}], ",", " ", "x"}], "]"}],
         "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", "1", ",", " ", 
         RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Temp2", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blend", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Gray", ",", " ", "Orange"}], "}"}], ",", " ", "x"}], 
         "]"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", "1", ",", " ", 
         RowBox[{"1", "/", "52"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Temp3", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blend", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Orange", ",", " ", "Red"}], "}"}], ",", " ", "x"}], "]"}],
         "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "0", ",", " ", "1", ",", " ", 
         RowBox[{"1", "/", "38"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"AcuityRateTemp", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"Temp1", ",", "Temp2", ",", "Temp3"}], "]"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "colorAcuityRate", " ", "is", " ", "a", " ", "function", " ", "that", 
       " ", "is", " ", "passed", " ", "to", " ", "the", " ", "Mathematica", 
       " ", "graphing", " ", "engine", " ", "and", " ", "allows", " ", "me", 
       " ", "to", " ", "\n", "\t", "dynamically", " ", "change", " ", "the", 
       " ", "color", " ", "of", " ", "the", " ", "plot", " ", "based", " ", 
       "on", " ", "the", " ", "value", " ", "of", " ", "a", " ", "variable", 
       " ", "that", " ", "is", " ", "not", " ", "on", " ", "the", " ", "x", 
       " ", "or", " ", "y", " ", "axes", "  ", "\n", "\t", "The", " ", 
       "built", " ", "in", " ", "Mathematica", " ", "color", " ", "variation",
        " ", "function", " ", "such", " ", "as", " ", "what", " ", "is", " ", 
       "seen", " ", "in", " ", "3"}], "-", 
      RowBox[{
      "D", " ", "surface", " ", "plots", " ", "assumes", " ", "that", " ", 
       "the", "\n", "\t", "color", " ", "is", " ", "set", " ", "based", " ", 
       "on", " ", "the", " ", "value", " ", "of", " ", "x"}]}], ",", "y", ",",
      " ", 
     RowBox[{"or", " ", 
      RowBox[{"z", "."}]}]}], " ", "*)"}], "\n", "\n", "\n", 
   RowBox[{
    RowBox[{"ColorAcuityRate", " ", "=", " ", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "y"}], "}"}], ",", 
       RowBox[{"AcuityRateTemp", "[", 
        RowBox[{"[", 
         RowBox[{"AcuityRateScaled", "[", 
          RowBox[{"[", 
           RowBox[{"Round", "[", 
            RowBox[{"x", "+", "1"}], "]"}], "]"}], "]"}], "]"}], "]"}]}], 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", "  ", 
    RowBox[{
     RowBox[{
     "I", " ", "also", " ", "need", " ", "to", " ", "create", " ", "my", " ", 
      "own", " ", "Legend", " ", "as", " ", "the", " ", "Graphics", " ", 
      "Engine", " ", "has", " ", "no", " ", "idea", " ", "what", " ", 
      RowBox[{"I", "'"}], "m", " ", 
      RowBox[{"doing", " ", " ", "!"}], " ", "I", " ", "create", " ", "my", 
      " ", "own", " ", "legend", " ", "\n", "    ", 
      RowBox[{
      "by", " ", "building", " ", "a", " ", "small", " ", "graphic", " ", 
       "that", " ", "is", " ", "essentially", " ", "a", " ", "horizontal", 
       " ", "bar"}]}], "-", 
     RowBox[{
      RowBox[{"graph", ".", " ", "The"}], " ", "color", " ", "with", " ", 
      "the", " ", "bar", " ", "transitions", " ", "at", " ", "\n", "    ", 
      RowBox[{
      "a", " ", "constant", " ", "rate", " ", "across", " ", "the", " ", 
       "full", " ", "scale", " ", "of", " ", "values", " ", "used", " ", "in",
        " ", "the", " ", 
       RowBox[{"graph", "."}]}]}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"ColorAcuityRateLegend", " ", "=", " ", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "y"}], "}"}], ",", " ", 
       RowBox[{"AcuityRateTemp", "[", 
        RowBox[{"[", "x", "]"}], "]"}]}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"AcuityRateLegend", " ", "=", " ", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0.1", ",", " ", "100"}], "]"}], ",", " ", 
       RowBox[{"ColorFunction", " ", "->", " ", "ColorAcuityRateLegend"}], 
       ",", " ", "\n", "   \t", 
       RowBox[{"ColorFunctionScaling", " ", "->", " ", "False"}], ",", " ", 
       RowBox[{"Frame", " ", "->", " ", "True"}], ",", " ", 
       RowBox[{"Axes", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{"False", ",", " ", "False"}], "}"}]}], ",", " ", "\n", 
       "   \t", 
       RowBox[{"FrameTicks", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", " ", "None"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", " ", 
                RowBox[{"Round", "[", 
                 RowBox[{
                  RowBox[{"Min", "[", "AcuityRate", "]"}], ",", " ", "0.1"}], 
                 "]"}]}], "}"}], ",", " ", "\n", "       \t\t", 
              RowBox[{"{", 
               RowBox[{"50", ",", " ", 
                RowBox[{"Round", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Min", "[", "AcuityRate", "]"}], " ", "+", " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Max", "[", "AcuityRate", "]"}], " ", "-", " ", 
                    RowBox[{"Min", "[", "AcuityRate", "]"}]}], ")"}], "/", 
                    "2"}]}], ",", " ", "0.1"}], "]"}]}], "}"}], ",", " ", 
              "\n", "       \t\t", 
              RowBox[{"{", 
               RowBox[{"300", ",", " ", 
                RowBox[{"Round", "[", 
                 RowBox[{
                  RowBox[{"Max", "[", "AcuityRate", "]"}], ",", " ", "0.1"}], 
                 "]"}]}], "}"}]}], "}"}], ",", " ", "None"}], "}"}]}], 
         "}"}]}], ",", " ", "\n", "       ", 
       RowBox[{"FrameLabel", " ", "->", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Acuity Load\>\"", ",", " ", "14", ",", " ", "Bold"}], 
           "]"}], ",", " ", "None"}], "}"}]}], ",", " ", "\n", "   \t", 
       RowBox[{"PlotStyle", " ", "->", " ", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thickness", "[", "1", "]"}], "]"}]}], ",", " ", 
       RowBox[{"ImageSize", " ", "->", " ", "300"}], ",", " ", 
       RowBox[{"AspectRatio", " ", "->", " ", 
        RowBox[{"1", "/", "15"}]}]}], "]"}]}], ";"}], "\n", "   \t", "\n", 
   "   \t", "\n", 
   RowBox[{
    RowBox[{"WidthRange", "=", ".08"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MinWidth", "=", ".04"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"lPlotStyle", " ", "=", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Thickness", "[", ".005", "]"}], ",", 
        RowBox[{"JoinForm", "[", "\"\<Round\>\"", "]"}]}], "]"}]}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"lFrameLabel", "=", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\>\"", ",", "\"\<AxesTitle\>\""}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<30 Day Readmission Rate\>\"", ",", "\"\<AxesTitle\>\""}], 
         "]"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lPlotLabel", "=", 
     RowBox[{"PlotLabel", "\[Rule]", " ", 
      RowBox[{"Style", "[", "\"\<30 Day Readmission Rate\>\"", "]"}]}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"lFrameTicks", " ", "=", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "\"\<01/04/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29", ",", "\"\<02/02/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"59", ",", "\"\<03/03/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"89", ",", "\"\<04/02/2016\>\""}], "}"}], ",", "\n", 
            "\t\t\t\t\t\t\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"119", ",", "\"\<05/02/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"149", ",", "\"\<06/01/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"179", ",", "\"\<07/01/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"209", ",", "\"\<07/31/2016\>\""}], "}"}], ",", "\n", 
            "\t\t\t\t\t\t\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"239", ",", "\"\<08/30/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"269", ",", "\"\<09/29/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"299", ",", "\"\<10/29/2016\>\""}], "}"}]}], "}"}], ",", 
          "None"}], "}"}]}], "}"}]}]}], ";"}], "\n", 
   RowBox[{"DateListPlot", "[", 
    RowBox[{
     RowBox[{"{", "ReadmitRateRelative", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "298"}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "3"}], ",", 
     RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", "lFrameLabel", ",",
      "lFrameTicks", ",", "lPlotLabel", ",", " ", "\n", 
     RowBox[{"Axes", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"False", ",", "False"}], "}"}]}], ",", " ", "lPlotStyle", ",", 
     
     RowBox[{"ImageSize", "\[Rule]", "900"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"lPlotStyle", " ", "=", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Thickness", "[", ".005", "]"}], ",", 
        RowBox[{"JoinForm", "[", "\"\<Round\>\"", "]"}]}], "]"}]}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"lFrameLabel", "=", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\>\"", ",", "\"\<AxesTitle\>\""}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Acuity Load\>\"", ",", "\"\<AxesTitle\>\""}], "]"}]}], 
       "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lPlotLabel", "=", 
     RowBox[{"PlotLabel", "\[Rule]", " ", 
      RowBox[{"Style", "[", "\"\<Acuity Load\>\"", "]"}]}]}], ";"}], "\n", 
   RowBox[{"DateListPlot", "[", 
    RowBox[{
     RowBox[{"{", "AcuityRateScaled", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "298"}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "3"}], ",", 
     RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", "lFrameLabel", ",",
      "lFrameTicks", ",", "lPlotLabel", ",", " ", "\n", 
     RowBox[{"Axes", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"False", ",", "False"}], "}"}]}], ",", " ", "lPlotStyle", ",", 
     
     RowBox[{"ImageSize", "\[Rule]", "900"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"lPlotStyle", " ", "=", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Thickness", "[", ".005", "]"}], ",", 
        RowBox[{"JoinForm", "[", "\"\<Round\>\"", "]"}]}], "]"}]}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"lFrameLabel", "=", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\>\"", ",", "\"\<AxesTitle\>\""}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Cohort Size\>\"", ",", "\"\<AxesTitle\>\""}], "]"}]}], 
       "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lPlotLabel", "=", 
     RowBox[{"PlotLabel", "\[Rule]", " ", 
      RowBox[{"Style", "[", "\"\<Cohort Size\>\"", "]"}]}]}], ";"}], "\n", 
   RowBox[{"DateListPlot", "[", 
    RowBox[{
     RowBox[{"{", "CohortSizeScaled", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "298"}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "3"}], ",", 
     RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", "lFrameLabel", ",",
      "lFrameTicks", ",", "lPlotLabel", ",", " ", "\n", 
     RowBox[{"Axes", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"False", ",", "False"}], "}"}]}], ",", " ", "lPlotStyle", ",", 
     
     RowBox[{"ImageSize", "\[Rule]", "900"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"WidthRange", "=", ".08"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MinWidth", "=", ".04"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"ReadmitRateRelativeRange", "=", 
     RowBox[{
      RowBox[{"Max", "[", "ReadmitRateRelative", "]"}], "-", 
      RowBox[{"Min", "[", "ReadmitRateRelative", "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"ReadmitRateRelativeU", "=", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"ReadmitRateRelative", "[", 
         RowBox[{"[", "]"}], "]"}], ",", "298"}], "]"}], "+", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"MinWidth", "*", "ReadmitRateRelativeRange"}], ")"}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{
              RowBox[{"CohortSizeScaled", "[", 
               RowBox[{"[", "]"}], "]"}], ",", "298"}], "]"}], "/", "300"}], 
           ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"WidthRange", "*", "ReadmitRateRelativeRange"}], ")"}]}], 
         ")"}]}], ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"ReadmitRateRelativeL", "=", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"ReadmitRateRelative", "[", 
         RowBox[{"[", "]"}], "]"}], ",", "298"}], "]"}], "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"MinWidth", "*", "ReadmitRateRelativeRange"}], ")"}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{
              RowBox[{"CohortSizeScaled", "[", 
               RowBox[{"[", "]"}], "]"}], ",", "298"}], "]"}], "/", "300"}], 
           ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"WidthRange", "*", "ReadmitRateRelativeRange"}], ")"}]}], 
         ")"}]}], ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"lPlotStyle", " ", "=", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Thickness", "[", ".0001", "]"}], ",", 
        RowBox[{"JoinForm", "[", "\"\<Round\>\"", "]"}]}], "]"}]}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"lFrameLabel", "=", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<\>\"", ",", "\"\<AxesTitle\>\""}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<30 Day Readmission Rate\>\"", ",", "\"\<AxesTitle\>\""}], 
         "]"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lPlotLabel", "=", 
     RowBox[{"PlotLabel", "\[Rule]", " ", 
      RowBox[{
      "Style", "[", 
       "\"\<30 Day Readmission Rate, Cohort Size, Patient Acuity\>\"", 
       "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"lFrameTicks", " ", "=", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "\"\<01/04/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"29", ",", "\"\<02/02/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"59", ",", "\"\<03/03/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"89", ",", "\"\<04/02/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"119", ",", "\"\<05/02/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"149", ",", "\"\<06/01/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"179", ",", "\"\<07/01/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"209", ",", "\"\<07/31/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"239", ",", "\"\<08/30/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"269", ",", "\"\<09/29/2016\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"299", ",", "\"\<10/29/2016\>\""}], "}"}]}], "}"}], ",", 
          "None"}], "}"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lColorFunction", " ", "=", " ", 
     RowBox[{"ColorFunction", "\[Rule]", "ColorAcuityRate"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"lEpilog", "=", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Inset", "[", " ", 
       RowBox[{"AcuityRateLegend", " ", ",", 
        RowBox[{"Offset", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "750"}], ",", 
            RowBox[{"-", "270"}]}], "}"}], ",", 
          RowBox[{"Scaled", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]}]}], ";"}], "\n", 
   RowBox[{"DateListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ReadmitRateRelativeU", ",", "ReadmitRateRelativeL"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "298"}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "3"}], ",", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", "\[Rule]", 
        RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
     RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", "lFrameLabel", ",",
      "lFrameTicks", ",", "lPlotLabel", ",", " ", "\n", 
     RowBox[{"Axes", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"False", ",", "False"}], "}"}]}], ",", " ", "lColorFunction", 
     ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", "lPlotStyle", 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "900"}], ",", "lEpilog", ",", 
     RowBox[{"AspectRatio", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}]}], "]"}], "\[IndentingNewLine]"}]}]], "Input",\

 CellChangeTimes->{
  3.483202458955147*^9, {3.487957284921875*^9, 3.4879573120625*^9}, {
   3.496144584734375*^9, 3.496144593328125*^9}, {3.690200755805492*^9, 
   3.6902007609967213`*^9}, {3.690662380243819*^9, 3.690662380969428*^9}, {
   3.690826490104816*^9, 3.6908265309038954`*^9}, {3.6908265764344482`*^9, 
   3.6908266159814024`*^9}, {3.6908273469064875`*^9, 
   3.6908273774105377`*^9}, {3.6908275431261077`*^9, 3.690827546640459*^9}, {
   3.6908275814249372`*^9, 3.690827588825677*^9}, {3.690827621630957*^9, 
   3.6908276944202356`*^9}, {3.6908277269924927`*^9, 
   3.6908277271805115`*^9}, {3.690827804058198*^9, 3.6908278235151434`*^9}, {
   3.6908279199457855`*^9, 3.690827920157807*^9}, {3.6908280243693247`*^9, 
   3.6908280245762415`*^9}, {3.690828055030055*^9, 3.690828055249967*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     Thickness[0.005], JoinForm["Round"], LineBox[CompressedData["
1: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
      "]], 
     LineBox[CompressedData["
1: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
TPccXyMjButVvxOwZfg2x/7EO0Q+QILXeepWljX0eVwzCdadVkTdo98/LvIC
EqwPMrnM64crzxdWEpyatVuSSHxF5AckuKi9VNuZmP+8U10Jvqb69W5P/FDk
CSQw9Z6/vzHnO3k+aSpB5/uaHNY7K/IFEqzseO4Y5wGFHt5WgqSw8ff4+vwS
eQMJ7oWPknYwzDedJDDqs2wLf7+5yB9IULtKViH/vZh/etDvS6aM4DxTI5FH
kMApbFxREV3/rTwf9ZfAeV7Rc56PKvIJEoTuqVe+3FqfJ3aX4Irc966GuJ/I
K0jwLfSGFftPIg/jJ0Fr23eerLdW5Bck2DP3aYsPVM/c4/krTIKxn+cduEYc
J/IMEpz8Wb+c6zNh18ZJ4NHCaegO4kEi30DX/8HORazH/uD5TSmBdGmrWxu4
nhR5BwlmXoreuYW4Cs93gyRo/6bayl1WhvyDBOaKImuuN1luezJSgtHu5qPY
b6nIQ0iQ+uBt/jMrfT4nVYId3wM7fLcy5CMkmJRaX2HJ9RDPj9MlWORlM6E1
8WmRl5Agrmf15D6G+XK+BGNaPbDlfHJFfkIC2XufnfHW+vz0Mgkkp/vWYD9J
7E9XSZDWeYXtcGIlz6frJLjT0u/LKK5nRL5Cgu/jAmOYWZ45kC7BgyZLFEOt
DXkLCQK+mJny/WC5cdduCbrdX9c92tqQv6DrddSr2IPrLZ5/D0tQrrYZ04W4
qchjSDBotod3feLtPB+flGD4nsiO7E9W5DMkOJe4+x37UcJPuCBBPf+9Llxf
Q+Q1JLD9fMn0BDFvfxZdk+DgE8n3vexvifyGBEN2vXzCeTLhN9yTIMoq4tU+
3i+IPIcEk+17XGT9vYjn8wIJHAJWbbhppd8vv5Dg+KmV898Sl/P8/lqC5PO+
u43oeKeKvAc9f+nXGjUkNuf5/pMEK3Z3+87nlybyHxJktloR5U7ckOf/UglW
nam5Msxan9/8KcHzv7n3+f6IfNQfCUZceTNcyvOTyIdIAfP5l2KJ+/L6YCpF
j72vOgZy3lLkRaTw2li7Eo9/P14vLKVQXXHZwP7tHZEfkWJcnVWSEjr+GF4/
6kiR/MlOyf6w2J83kOLr/nuPZ1vp81dNpDjsLDnK+boSkS+RInL8sve1iVP4
graRYnq/AZrnlvr9ewcp3qnatTpsqfdHOkrRJr+eFev9FfkTKd4kPmrE+r3I
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
0smLuLHI28lhN/y4dSzxVhYMdsrRZY1LULKlIX9H483rGlKJeXjXOihH2cAh
X2ewnyHyeHL0/3pt6TzOS7B/nC1Hkz0dmnB96CvyeXK8yrs4aQnnI9lPPi/H
863vDq0kjhN5PTkS5t3es4n4FfvLuXLsenhJzvkJrcjvyVH3pfmVi5Z6v/m2
HOOrvqz7hnicyPPJ8ePGssUWrM9zuf5IDqcrg870JJ4n8n1ylEw9ZKu00vvR
hXJcWXgwIs3Qj/JGjsEph67z/qM1+9Pv5Vj80KheIXGmyP/J8bhH4dF/xFx+
Pfkqx4nCa49rWRvygHKsbfuudzNiN94gl8uxtfpk+1bE10Q+kMbH8neWLaz1
fnYlBfLuJPfi/YbodzFTgDbEZrzfVbK/XV2BlIn1bnP/aUV+UIHdfx+W8n5y
JPvdNRWImbEh9T3xH5EnVGB9t09OTznvw/53QwU+RH88dMvKkC9U4EzgxSTu
R1zGfnhLBRYmbn17mLiJyBsqcO/n3h1cH29jwdZWgarhNXsuIe4o8ocKbLxd
UmsC+wn8A10VaPct5zdfz/4ij6iA8w+jhT483tk/76PAXj/dRgfiAJFPVKCD
8qJZLSu9nz5QAeWuuyu+0/2TiLyiAq3TIjs8Ji5if91bgUbTay8+S5ws8osK
VC7J3ZpJzIc/J1iBxxPbP1luqdeHwxXISpvSYzpxdX5gohX473L9sBGWer04
XoFHp2wfyiz1frxMgRs2ZfIAS71+rFKgfcyZ5fx8CH9eq0DvPudrNiHeJwQ/
BaK9MfaXhT168XQwTIHT0a2acb66Ig+pQE2zau3Zb/Niu2wc3d8GfXSjLQz9
2gqMkv87zXmXKPbzpyiwYN+mP82IX4i8pALLryf++m1O450NnTkKWM7duOil
uaG/W4HRBxcszScey35/mgLlT+Nz7xMbiTylAgOuntvK+fa57P+vViD9n9+U
n5w/EflKBcZVXnq2poW+33KzAjbx7c/aE7cWeUsFzi5f/8yFeDfrVZkKPHGc
Mz6U89Yif6nAkdMTvkVb6PtbDtD1i1+bw5+7iDwmXZ+s7m/47/NYr8pSYH9D
22TO04SKfKYCnS5HDrMifsJ61TkFHMw3Vf3CeQ6R16TjsS90v0P8mfWqXPp8
+K+B2cTDRX5TgcL2eTV3muv1qtsKlMRE3NrKeReR56Tx4OiwZ5u5vl/mkQLJ
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
J9dbNVivClAjucreM8uIV4k8uxr+PUt3cD5X9AtGqPF5UM3dnLeteJ+MGhfH
3h/Wn7gb37AEOv8Odba2Jj4h8u5q1PBZW2Rjrs9nqdVI2d3vI/ezVuTf1aje
LDfUjDiY9arB9PczVZdrET8WeXg1OnedVWBnru83HK3GumllbX2I34t8vBrz
Xk7qmcz1LOtVE9UoO/h+E+eTf4m8vBp3ov+V7TfX61Uz1ajdb9aNq5wnFvl5
Nfaf9j/G10/kvRaq8X7fhGDOfzcQeXo16k+7lvzAXK9XrVDjXZ2Q91c4byzy
9Wr8G9hu8xFinm4ObSB+Kx2+yVyvV21RY9mLhk7zzfV6VYYaCgttfgqxt8jf
0/G4qVtyPSv6G/fSePmy3X4YcazI46vxZunpnDHc38t61VE1JMh6P81cr1dl
q+FrvH39UnN9/+NpNf68XvE8nXiiyOurceb3yn18fFVYr7qkxquQLKsLnGcW
+X01jv2s/us672e4ILuhht9cDyMeP+tEnl+NrOeFdzgvLvSq+2rcl/w5zP2/
Qq96TM/PsKNvOF8v3pfxTI3JKV228f7itMj70++/nut4wFyvV71Vo2adt7d2
mBve/0PHP1R+aou5/v0axWo8PGH9ZSOPd9EPoIa0/SFHvp5a1qt+0POBKja8
P/kq+gPU6LvotCl/3zjWq/6p8XfrklV7/98voMHq6n0CeH8i9KoqGnj4JWby
fkPoVeYa9P15vxP3Cwi9yloDXcfzQ7ifoIXoJ9BgecgUd77/maxX1dOgn+bb
ch4fXUR/gQaF6hLPN+b6PFwzDSoFyF0+EruKfgMNGjVsOoif36usV7XTYO+F
SrtL/99/oEEv/+KiMmIu/3o7aLCu9t9P3P8g9KpuGoSYO9n84vHOelVPDXrP
/jyH//1Q0Z+gQcvXkpVfzfV61QANvox8NOyduV6vctEgNW1L6ENzvV7locGW
xSZj+H4tEv0LGjjlutXj69eQ9aoADSLdP+XN4PEu+hk0uPtk9KF4c33+LkKD
s/U2enXl/Zvob9Cg4+TmVSsTO7FelaBBhy0HdZw/F3qVXIOLVWp/2VRdr1ep
NajV+7cN9+tX9D/Q8Z9t6+1BHM161WANpryfurUZ56NFP4QGl4wfx/2qRuOd
B+woDarU7uD8kLhE9EdoEN5J1+BYNX2eb4IGV+PW719ObCr6JTQYu/f0Xc5v
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
LICz
      "]], LineBox[CompressedData["
1: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
VVGzF/xl6O+CkIYyeTq+WXCD7d8v1DS4sUwzxxQ5sN5bUddZuaYJ/v51zrAu
yI/kLffOrdKR6VyTnuMmcP0ojVJb2Vymj3dX2PC+ittxYAuZWllbno0Gx3Za
t2OZnkyFYtmQk+BHifteLtWXKeuU/YoLnK/OKd2XtJGp4ejcaN6fhqTGyovb
ylQQ7vuM93H1G2delA1lWvYgdcFucFnIEy2pg0ydVIrQpeCLYypcBSOZ6tNd
FowF/4G8VXaWaUpjnZGsR3V2nij2M5FJWTFUtwD3eaq/12xhF5mevzAK5/iw
9jggzO8m08gtqYM4fgvP6KbP7S7T1NONEzkfUhYNUZ9jIdPJP32dnyF/Fr9b
P8bXCu/rOO5QMljd3XbXLGuZ3t/26sv7IR4XvXvK1Oz00vXc71Nycmy9esv0
c9bEubyPed/7SciMPjJFnHOtv837s3mr8z3sZdo3V7inzvPemkhj937wl9kF
t2HgPjsfK6YOkKlLat8GHO83ruifmewgk83Zjz48303Xb1s9cRDsWVFQwfOH
47HEXhNIpqM6TY1YTwbnrZ3rNlSm+806pc4AC4cG73YdLlPMD9NxSrBxwKy7
Y51kStXJeiOAU+JkzTGjZNoffWQK92ebpb9HOo+W6dfHxVvZ3xed1+4dOVam
acMKl9nz7yOqKDUnV5ncPq36zfrYk3+AdpNpeS+dOq7vU4tfth42QSbRfp1L
Fli97dn0IZNk+rZ30rDd4NTAcVNoikxXiwZ14Hi/FJf1YtA0mQ77N27N9w/q
ajbI0UMmn3f+C9uDx+/bMnfgDJkyEsa4/4T9NsboOfX3kknq72rE/vm7r5qJ
8xgMrb7M+7Gq1lW2PrDPkSMf2F9fzHO/9pwt09vSlzZx4PYnddSt58q0OLtZ
zgHeDzz64Ws5X6YBvSdc5c/ri5OmmS+UqVI3R4/13s0Oo426K2SaOzY6i3+f
yn3887uZCvHysPhJIZjli7koU2h4xrg/4Ki39nstZZk2ZQ8q6YLzz7vmetl6
sUx23t7VXP8PWgXt6bVEph7h6ie4vuXOtCXbAJnahzU14/qzaN+dm72XyxS7
yzeQ9b5Jx+QhNitkmv3pSzbPVz6dHW+YrUK8Ze+04nniCg+Ma2Qa5DsoSwK3
mJP/TTsY8XQoYfA28NRDoUbVITI9bVV3LJn34Z7O09+sk8np/cjEa5yPE30M
HofCv65hjx5zvg3vcO3eRpmsVt/LYz2l8TXzTn6YTBXHDBxr+PcN/b2xpZtl
Ot9ImdEc+oLH62ZbZbpy49G7bmCH7F0XnLbJ1L3f7RLWM6VFyw5s2CGTY4+o
a7PBXeWmm27uRL5u+2m8AdzfLTP5+274a9KJqGT+fWagjl2DaJmKZgWeyePf
K/7zGV+2T6av8Yatv4O1XPv13HlApsktx7rqaaBe8L8YmWZE3Ku2Av8PxL9E
Eg==
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 13.98722924224114},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox[
      "\"30 Day Readmission Rate\"", "AxesTitle", StripOnInput -> False], 
      TraditionalForm], None}, {
     FormBox[
      StyleBox["\"\"", "AxesTitle", StripOnInput -> False], TraditionalForm], 
     None}},
  FrameTicks->{{Automatic, None}, {{{0., 
       FormBox["\"01/04/2016\"", TraditionalForm]}, {29., 
       FormBox["\"02/02/2016\"", TraditionalForm]}, {59., 
       FormBox["\"03/03/2016\"", TraditionalForm]}, {89., 
       FormBox["\"04/02/2016\"", TraditionalForm]}, {119., 
       FormBox["\"05/02/2016\"", TraditionalForm]}, {149., 
       FormBox["\"06/01/2016\"", TraditionalForm]}, {179., 
       FormBox["\"07/01/2016\"", TraditionalForm]}, {209., 
       FormBox["\"07/31/2016\"", TraditionalForm]}, {239., 
       FormBox["\"08/30/2016\"", TraditionalForm]}, {269., 
       FormBox["\"09/29/2016\"", TraditionalForm]}, {299., 
       FormBox["\"10/29/2016\"", TraditionalForm]}}, None}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->900,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"30 Day Readmission Rate\"", StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{0., 298.}, {13.989665107637968`, 14.038382415574558`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{
  3.690826546191424*^9, {3.6908265837381783`*^9, 3.690826620617866*^9}, 
   3.6908272800318007`*^9, {3.6908273540572023`*^9, 3.6908273828910856`*^9}, 
   3.6908275526730623`*^9, 3.690827594775272*^9, {3.6908276268144755`*^9, 
   3.6908276992497187`*^9}, 3.6908277323140244`*^9, 3.6908278280345955`*^9, 
   3.6908278787246637`*^9, 3.690827925124304*^9, {3.690828007447096*^9, 
   3.6908280293503313`*^9}, 3.690828060200986*^9, 3.6908281442293615`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     Thickness[0.005], JoinForm["Round"], LineBox[CompressedData["
1:eJxFW3VcFGsXRhQVFJMuEenuhn2WroUNll16d4WL2ImNWIitCBa2iKJYWGBi
KwYYGNgdiC0qKnzzvjv6+c/9zR12zrx1zhNn+itGCDNVVVRUqjupqJD/Hug9
bHrRbYFnBxXyLwjHj/eb/HvNQc7H0vLj51WDgOver8ceu8B5NN7MpkotCF7j
+tTZfbnBqXv/20/SNQhPjU60xbjc55yadumLrUYQFuw3fNM0+innxAZTXjVz
ne4S0f30+5ec8+cXhRSoByFz7oj6gtFNnHuDt90y7hyEPlwj49XPP3BU2PgO
I5sy0/U+c9w/7hzc2MJFYVtPjof9V86okU9zPrzl4j+9I88CXFo4O7aJXLfe
50KiUbH2te0Pzs2aQ9uzL3Nh2H/TwVKjVs6Lx2ea1x3mIrE8ZcIT9d+cK84u
6ru3cnHmw2r7Hi1/OLPvVGqoFnHZ+O3K+HlcTK4bITd+pwK/1euW9xjKRdWI
TzbprztAek70a66Ui5Pn9q5e81IVM4fvb70UyoX+6riX6S874sUUsdzRnYug
3dkct1edUHHv0i8NcybepXV3NrxWg8q4iuVHtLkwOLDwuevbztB0W9C2Sp2L
eueG4jFNXaAcPxcD9bU7dX7XFQ/Lbvva/QTGrP3U+LFJHQ45V0tefwXWqPTa
IWrSQNTaxqevPwNj87XVYt92Q1H057r7zPX60Vsntr/ujiF7ug0Yx/z9/q5D
Vs15pQnnX0ZrFN8B/gK1b2ove4CbbPRL/Avs+Huinf4D2oylk3eN6oXwWtXc
Tmpc3G3SS7H81AufZaOLbzDv23+DZ86ekb0hMXoysV6Ti0a+7uKIj71xKf5J
WlovLjS0+g99O6IPyhRqEx4z10faq68v/dAHgese/ajuwcV7m4gC3xF98SZd
VTuWeV7FNhfh4/d9/41/S0Zp47ThWmh3Mr4ygxkPb2lzmv57LXTtPKjHxSfA
AXezDruGaSPp0wYP7TrmfeMlzwKbtcGVF+wvPwIE/NhodWWoDtrPPPx9YRuw
yFz3Y+I7HTTOz8g7sALo9vhS2sshutC3aNyzdy5QR+dfVxk/D5j9pnWi6hA9
VI0r4I2cDDj1rG8tfKuHz/nNzl2Z6+Qxq2vNB+sj0KRkd9JUYMOr9SWH3ujD
zfLP1Vbm9/MCLE2jsw0gnzutaPIsYHfYGI1Hrw2Q7LpIbWQ+8/c3L3cfM8gQ
+7sVWw2ZDXysmnC382vDf/Gda2zcVmcZod/Pmt9+44D2TWEmDq+M4PrwiYPO
f8x4tTbvPvGfMcqLP3dTiQdOXezzW/DSGJ/UZvYcAuDD2Gy955kmmKI9YO8F
e6B/7ST9nBcmOLRdkT3PAPgxxUCra2Y/9K24tqd/t7/r3w9tdP052F+QY6bj
aorC6Fe5nK8c8GY6hT4aZYp8FR2nwE8cRNe8H7Ntrym8dDy4Ucz9HR/e7Bj1
yRRdZjW/2NvKwX8nE976uvTHdtOvZU9UgCkvBtt3GtUfp8xexf/XEXjWLWXE
lT398TPYXHsRc73qefqe5R/7s/uPg9i+wc3pzmYY/OixxrwPHCzVcLS0GWmG
8dznrxpvcVDm/Dj5824znJkc9uzWIQ6uNektPvLBDF+fBUcqijhI2LSiZpbT
AGyq0/tPPpyDyYcNP/FGDEBOUYf8qnAOpq/O6K+7ewDUC3y/RZtxsJ3uvwHs
/mPGf0d/VrmjOao8i8V6TwNhFN/n0Ojh5ij8KXVJOB+IW9devfXbZY6drXtc
GncG4k7XrH5q781h/k7125llgdDakxJ/1cEC2nn79b3GB2JGbvHcFcMssGmQ
XaAgIRB97B4el+20wHPJFRV3p0AcHdrxq02zBRs/EJ/r71t/sbfE7tDadUXn
A2DCGZZ6dKglPO8cEl6eEwC7caeWzq6wxIxV38QIDkAXl7dnY99ZYuKQPU/n
/vbHSufPP3XtrZjzo+0WdNAf9S6vHZ4MsULbBf501TH+KPx8V759hxWS9JZ0
yfDwZ/e/FTv/fuhw+vlFfztrzKvkOhXf9EPLky5takOssWDL+ZkT9vqhxyNf
17rt1ghaPyHHvMgPO7tN+m/lW2t8z/TL6zvJD87VJ1fLbW3w9kSLfo3MD63e
PepsB9sgc8zSo6Whfsi6n9zxa7kNKsI+P/az9MOjr2Vex97YsOP3Q/Pqd0Py
bWxh8tGxVOeaL350dNgQl22LlUtt1glW+2KxffZNvXJbDHtjVe+Q6ouI3pu6
Pn1ti4rfciNrQ1/s33XHf4e1HQT1PTOPNfggq0OPUWMH2WFwdvaCwYt88E0t
eEvANjv8uFw2tiLMB5/o+bNj4/tg4ZPdmvVW9mhdoIolR7wxedRr7qosexhr
FXbkTvRGLwuzHMVWe3Q58iqi1Nsb66pSttu9sodiq3+PmJ9eGP96xcOvlg64
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
BehC8t0wGQY9ex5QO0bA9j+w8fMEIHLb/XEyOLfFT/ZaJGD7IWRY/Eljgvo6
gbI/Z6oM0lnf373ZJWD7I2S4IvtYH1MjgBfJj7NlsHW5ZFB2TYATtF9Chq3r
U09mPxUo8+VCGfITph7p9lnA9k/I2PwnVPZPFzPjcS069qSbUMlPV8nwyTNG
9Y22EJkkn66VwYXbV2uciRDNtL9CBp38m94vLIQg8kzlFmb8vpMPrrQXsv0W
zN8Xfr7+3lUI+j3OThmKT1ncDPMRsv0Xf+dfiGKSfw/IcNMzaZE8XKj8Hqxa
hp2uZ3KFcUKQr2nXHZPhec6RUxslQrY/g9lP+ceiTWRCpZ9wVoa2F+HdVgwS
ArRfg9l/unc+N44Ugn7/c0UGh/VNX6omCMGn/Rt/51+o9BsaZHj1SVV9Zb4Q
CtrPIUN62ybVKwuEeEPy+QMZgp61Pe64TKjky09kGJvmsXLjKiFaSX5/IcNd
h0yjbhuFmEn7PWQQ9dwp31IuRDeS75tlOF5jl9KwT8h+f/v3/AlhQPL/Nxny
OqzmpV0VKvs3f8rQeGN3zsSHQmV/1B8ZdH9HVO/6IITyexk5hO1DRckdRPAn
9UFNjq2KATPv9xHhDO0XkcNix5j8xQNE4JF6oSnH69TMkmuuItyg/SNydv5F
SCb1Q5u57lpcsytKpOTn+nJ4Va4144lEyv4rYznk9g98pieJ8JX2l8iBUh2D
TzIRppAJtZCjJFzzdlCWSMnfbeRwCJk1y2i4SOmPOMhRfT7Q0zxHxPafsPHz
RMr+eA85Rj3svcdygYjtR5EjZuDdNsFqkbIeBcjxnzAovft2Edxpfwoz3hHe
IY8Pi3Cc1KdQOX7kbjWVXhYhjParyOEeMjmr7YEIdaRe8eQImrl+fuoHERJo
/wobXyVe6beI5bDMHTBtec94tp+FGU/N7yeDTeLxgdSzVDm6zdOPbLaPV+oF
cjnM1nZpWOgXjzbix2TKsfJofNnRqHjMof0uchjtWPTgTVK8st4NkyPZLrhk
9tB4tv/l7/jj0Y/Uv3FyvLKWidYXx2Mr7YeRI2y120TVnfHKejhFjqmzJVPW
nY1X6g15cjQalme9fhgPLqmPs+Q4vkgtTPwjHudpvwzz9z2jzJJ6i5X+zgI5
ptWJugy1EbPfN/1dfzEoHCmSw+9hsltFvBhvaD8Ns79uufvMzxIr+9/WyGEi
Kzh7Z4IYP2h/jRyFX0QL6gvEmE7qa6kcK7oWc3etEEOd9tvI0VM3ctXOLWIU
knpbwey/5cPCNfaJoUv7b9j4NWJsJPV3vxyOac6P6i6LlfpGlRxLuv/cWH9X
rKzHR+Wwbc0flvZKrNQ7apjf63TJavgmxhlSn8/IYRBXtm+pWoJS/7ggx/ii
pRM+6CQo/aXLzP2Gb41RtglIov07f8efgGekft+UQ6/8aZy7NAHDaD+PHEu/
vwx0HZ2AL6Se35cj7VDyLM2FCZhC+3vkWLZ/8e27WxPQidT353Jwjlz7sP1k
glI/eS2HdMXIWUV3E6BF6v07Od5rHYnZ/j6B7f/5u/8kyvr/VY6cPyFP2rpL
lP3LP+RI0h6i+E9HAjeCB37LMdtaY3q0sQRHaX+QAg26h31Pm0kQSvBBJwUc
z/RZ+NRKgsu0X0iB7B4V4447SCAm/lZ3BbJuG38e4iHBPdo/pGDHL0Em8bu0
FOghV7dzjpXgHe0nUsBg31Av93QJxpHtaqTA5rLJ45+PkuAP7S9SwPLdnAD9
2RKlH2augL37s3vbV0jQi/YbMfedHpWO2ibBSuKP2SuwauGVt6EHJWz/ERu/
RoIy4pe5K5CSWzz68RmJUt/xVkBo8vTEhbMSHCT+mb8CGgFdNqoy9wNpf5KC
4eWWdbeZ358nflqIAvFDZB0Lj0kQR/uVFHDwuN0y6YgEd4i/FsM8//MOxX3m
OpX2L/0/Pv3+JF6BhVs2aFy9IMEw2s+kwLYbGhe3NUhA4JRvigL+mVmdlr6Q
KPUimQJ+Ho9mz/kuAbFn3DIUKDYp0VmoIcVi2u+kgPvv09M2GUuhSxL2UAXU
y2fMu+AkZfufFMr8z5Eqv28Zq8DwpleKOTwp2w+lgN6yz4ZFUim8SEGbokBP
x2TeKrmU/V5PgSlfUvQ1sqXK72FmKTDewG1T4ggprtF+KWb+G/U0fo2VQkoK
/gIF1mZHjpFPkrLf97Hjz5OCyPkaRQrsqTiR7Z4vZfupFFB9bHu+80IpJhHB
fA0zP0/tzmUXSdn+KgWe/q7Q4q+RYh4hjJuZ549fKasolUKL9lsx61FyRzJq
pxRrCGDcoUDJHsm2pQel6E/7r/7Ov1T5fc4+Ba7J9VvKLkrhTvuxFGh6Jz/P
vyHFYSKXHVGgPvzbqhP3pQim/VnMftD/sOzACylqiZ94mhlvlyH3vjZLEU/7
tZj9UTVrOeebFPeJv3hJAf2bkibJLynktH+Lja+SiP8B3KUq8w==
      "]], 
     LineBox[{{151.49163879598663`, 100.}, {151.61622073578596`, 
      99.98791944554984}, {151.74080267558531`, 99.98186001962179}, {
      151.86538461538464`, 99.98053695144766}, {151.989966555184, 
      99.98266547025929}, {152.11454849498332`, 99.9869608052885}, {
      152.23913043478268`, 99.99213818576713}, {152.363712374582, 
      99.99691284092702}, {152.4882943143807, 100.}}], 
     LineBox[{{152.65219075628903`, 100.}, {152.73745819397993`, 
      99.99894501366762}, {152.8620401337793, 99.99632019365166}, {
      152.98662207357862`, 99.99355639490005}, {153.11120401337794`, 
      99.99159804678594}, {153.23578595317733`, 99.99138957868247}, {
      153.36036789297665`, 99.99387541996278}, {153.48494983277595`, 100.}}], 
     LineBox[CompressedData["
1:eJxFm3dczd8fx4UyKiQjpaikqAh17+3exqu967YzMurufa+9s6IQQsgsM6vs
Tfhmy84qmzKjErJ+5/SpH/98H+f7uX3en3PO+7zfr/fz8/5Yp6hjhC1btGgx
q3WLFvS/YotNUdKoVLRo/DcUn06/fCGMTYV/g/M9799JmJBiPyElMRXtw/Iq
E38koYWBvN2o4al4EXTPqmddEjIL9q4bPioVIwMDUkZ/TEKniJqBSampMFqn
WPP9VRLWfHY7HydOxYwNF3YdfZQEmxWTE6LlqQjcXJo2rjQJO9in3kaom+wX
J8HlcYvpoWNTMXlc3oZhhUk4OsO/U9BEYk9q327w+iT42CzY7Dc1FTsO3Jo8
KjMJl0qusjAzFQl2z/qfnJiEaGnHKx5zyDg7O8FalITHRrHJ7vNT0avUgS1J
SEJKUc5nt4WpGLT7hYEsJAlVsY/mDF6SCj1qH0nQfbPsPnB5KsqHhBcd4iah
IXfMTsdV5HmMz9Y+5SRhjtdWT4e1qVC8ffljnnsSjF5U3eyzMRUBfbg1e3lJ
WD7PSWC9ORU55iFGKV5J6NlP881yeyo+O+RM3Ebuv+XagUzzXWQ+u7alzvFJ
Qn9yuXthKlo22d9nyttneiAVfU86b1KR+3GPkAU4korQ0XftI12T8N+wc/eN
TqRi/7YNGySOSQj/oy9vdyYVm0PYRgusk3A3L+SP/vlUjGoVMmlC9yQkByxe
1vJiKvplzXj32zgJr8jj/r2SiuAts2VV+kmQLepy9Gdp8/4noXZgUtj326nI
fvyr9MavREy5s/ZJXVkqRms/Kip/JqLlxKfaL49ScWlq3sJV5Poic1v9T09S
4XyoqtzlTyJMT4tWv3uRirf3szu3JvdbR5av8g35+w3qJ2P0ktBHn3jYu1TU
nYusySXjnTsGxTz79M/+kPDxr8trUrHo3hPbzuT+x6uPTnpYn4oBj8b36VKf
iIDlvwzLGlJhK3s8ePKnRFxnYePtP8QfntulHXydiDiynTdaClC/Tu7pXp6I
iukXS64aCBDx/dzaKbcTIbQ2HHqpvQAvonyvvb+UiA//RX74r4MAf+m/M4kY
L8meebazALzS+Xltjibit2FZ59PdBHhmx9O7VJSIuYU9th03F2D94887XhYk
ogNxryNWAvT7b6bN7/xErKzfdO2AjQDOB09/O7w2EZa5r0YV9RVgZNrc/QeW
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
ZwM5Hzl5LyLyghi7G5vnH4T/AVJdzL0=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"Acuity Load\"", "AxesTitle", StripOnInput -> False], 
      TraditionalForm], None}, {
     FormBox[
      StyleBox["\"\"", "AxesTitle", StripOnInput -> False], TraditionalForm], 
     None}},
  FrameTicks->{{Automatic, None}, {{{0., 
       FormBox["\"01/04/2016\"", TraditionalForm]}, {29., 
       FormBox["\"02/02/2016\"", TraditionalForm]}, {59., 
       FormBox["\"03/03/2016\"", TraditionalForm]}, {89., 
       FormBox["\"04/02/2016\"", TraditionalForm]}, {119., 
       FormBox["\"05/02/2016\"", TraditionalForm]}, {149., 
       FormBox["\"06/01/2016\"", TraditionalForm]}, {179., 
       FormBox["\"07/01/2016\"", TraditionalForm]}, {209., 
       FormBox["\"07/31/2016\"", TraditionalForm]}, {239., 
       FormBox["\"08/30/2016\"", TraditionalForm]}, {269., 
       FormBox["\"09/29/2016\"", TraditionalForm]}, {299., 
       FormBox["\"10/29/2016\"", TraditionalForm]}}, None}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->900,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"Acuity Load\"", StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 298.}, {0, 100.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{
  3.690826546191424*^9, {3.6908265837381783`*^9, 3.690826620617866*^9}, 
   3.6908272800318007`*^9, {3.6908273540572023`*^9, 3.6908273828910856`*^9}, 
   3.6908275526730623`*^9, 3.690827594775272*^9, {3.6908276268144755`*^9, 
   3.6908276992497187`*^9}, 3.6908277323140244`*^9, 3.6908278280345955`*^9, 
   3.6908278787246637`*^9, 3.690827925124304*^9, {3.690828007447096*^9, 
   3.6908280293503313`*^9}, 3.690828060200986*^9, 3.6908281443483133`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     Thickness[0.005], JoinForm["Round"], LineBox[CompressedData["
1:eJxFW3VcVE0XRgELuxMxsFC682HZhGUTdpfeXcTGxlcRFcUWA7vBRkGxQLDA
VuxuxcJCEVsMvpnZq5//vL9593LPnbkz5zxxbhfjCFVCbTMzs6sWZmb0v/nN
Eqcuva10N6P/oMbRo50n/lpbEDCpt9uXWmSMa56vxh45G1AgbFzXgow9kppf
tvt0PWBsSuZjSzJ+2rH4j9TpQUBy5a9edck4fX+H129HPw1YetJ7Ph3HOYkb
nnhfHjDdJrGgDhknzBlxZfbotwHNemXL6P2aB3bstPp5ZcDf+P1Gvk2Ia/sx
YMyurod/BKix+E+TALe+nwO+H7Vd8pGMB7Q99MzP6WtA0vrCB2/JWNsgd92r
Pt8DLhXN/VBOxh26bCzY3LE6oGpSSI8XZByxPXr8k/q/Akq0O26+JOOTlav7
Nv76O6DLfo3mQ8Df+DUBNfQfGU+8PMLQqcIM+zuifRvyPIUjqnrHvaqFwUci
c53I+NjpPavXltfGwfqTdwaTcbvV8vK4cnPwe99pGUPGvLzBAS4vLZAdtOJu
PBmfPL/+TtYrS0xJff0xgozb589/7vymDgbW/a31JuMrjjeXjXlbF3/nH9+u
lUWdino4+OjBve3kecasq7r34W19DAgZcUhIxmvNmuao3zbAFm954mt/NcbO
bGUpe2OFjhtaHt5Mxpmjt02oedUQI8Zox8wj4/31hq6a9bIRBFvzYneTsSLd
8otleWP42edLevybf5N/8f900k3cNaopDIOkyYGBatx92za6R1VT1G71KmEf
T40uWe7jdo9shgIrwbomfDXuKdosFH9oBqnqZnUTgRoNWnYZ9mZEc6x63yBi
OBkfqim6llHZHCPKtYufk+vf9xbP9h7RAlkB9lP7BqmRm+2kKnvf4l/8Lf03
35syvCWOTqnycfRRIzTjXWy79y2Rof+Q+9ZVjXzXrrV2JbbCrOVrO43vR543
TPvM/10rFLRarutgq4bf9w09Lw5rjX7XUnp16KjGgu5tPkRUtEZN8QftkeZq
WJWdjy0f2gYB1zP2iOqrcZmtfxtTfDM1ZryunlB7aFtkrXy3rNM3FRyaXKle
/KYtDg7SlK97r0LUmNWl3Ye0Q7/V4ooR5Spkvcxcc+B1OzzRXNs47ZEKc/16
2IQMbo+Cs7UsT91SIU84psHjV+2xot2LRj0uk+tvXGg4ZlAHxI+ZW7j0jAof
CsffrfOqgyl+iQqOJb1dVg/siCOddMMiClWo2Si07veyI+b9yi9au1uFPy03
5RUP6ISzZoFOZ7NVOH6u+S9leSdcXGDT8V6WCpVjB7d9nmCNHw1STlxZqUKX
0uR2415YY9vd5JE7FqnwPaV9y3oJneEWxx+WMFvFvf/OpvipKuyfPa5ra2cb
DPuwpzDlPxVC0xwEj0fZoP2Wq86Vw1UIKXk/JnuPDQqM+2QjBqiQU/k6Z1SV
Dd4k5lS0jFVhwDHNG2+nLtBbNX73LVyFlBdD+lqM6oKTUxwcHWUqPLOKHnFx
dxeUNOm//KZQhVXP43Yv/9CFe/8qyFoEvYtz7IqFNmW793mpkNHAvkfvkV1h
McJ84lYXFbY6lkV9zOuKiLFVS5L7qXD1bduFhyq7YkaRk9O1HipoNq4ome7Q
DVPOhMyWd1Zh4sEOVaEjuiGo55lLS1urMHV1/y5t8rrhtMHOm99QhR1s/3Xj
3j+Z/51207fbd0f4/ItpS6uU6BjW/MDo4d1xZb3Nk3FPlLh19eUbn13d8fT8
TIPwihJ36g3sbPm+O2rlzpdtPKpEy93RYZf62WLdreNVvXcqMW3ysjkrEm3h
9Gzf0pS1SjS3e3RUv9MWfQa/T/War8ThYeafe7+z5dZfiY9XHvT61LcHOux4
HeCdpIR1QGLM4WE9cLhVstnkYUrYJR3PmJHbA52iP72wS1CirtObU7KKHhi/
fMXSzbFKrHT8+KNN356weJS9W6xT4orTq35PhvbE95DBj8YrlVj88a5hR05P
LPzR/vgyiZLb/z259Vei1onn53ztegGl81J4rkp8fVL3j+XQXvBv8K1jRg8l
Gj/2dr68oxc2n8ipE9xGiZ1WyQNWvumFTtUt4s7XUcKx6NhqQ5/eUOxZFTLm
iwLVno0v9xnSGxUVW6synykw8EGU+eftvbFi95ZxeVcVePx5q8eR173B8m+x
Au9WVwyd2bsPnvR9efH+LgW+m/fLkg/uA9Gx7fP81iuwsO/gG22394FsWUyN
1QIFxM021nv6qg9aTW1b2W+yAvt33fHN6WWHougPNnOHk3i1Go8aO8gOEWY/
I+vGKfDFMmiLX7YdmvNl8elyBarY+bPj5q/A/Cd5ja707AufabdDZI4KTBz1
KnDVwL7I/mDYP95Ggaa2XccZt/VF95cPf85oqsD6wugddi/7IqPW3OcpZgr8
92rFo889+mHlAYnhbJkc70Zeb350QD8M7naPP6NEDk3jJqJZW/shZDLvu1+W
HGaTgicqyvtx71+O9Fkz8tr1sMeopUmWt+LkuOpU8uxpgj2Cvq8VFAfI8WV+
dZvcLfYQrw3vWthZjha7XKVJL+yhrJr8+3CNDKGbh6f62zrAYdB3z9LHMpyb
lr2/boID9o3a4P6gWIbcqKevrmwm48kRuspMGVqw8+/AxZdhq01OtlNzR5ze
nqyy0suQ0+8sr7WzI7b5nU1tBhlsBS8eVCsdsbrk3eQWNuT3/rX/ezzKERs9
PqC5mQwX53RudjLDEbu33TjYuCwU1nt9c7L3OOJcq6yy+iWhsL8fIZh/1RHl
M7VbLbJCsZj+eZUjFz8UMT2WTtA0c0LSyczdv+JCsU+4p4WPkxO6N+MdqA4I
hU//Szs7K50QYvj05EfnUKyZ8lZkMcoJDo4lf37USJGyimyHRU6o/2P//erH
UqTutU25uNsJXT0eCX8VS6E6z2u994oT9iWIG//JlGI1yz9Opv03RYobf1KC
JzZ1RgK/zttaeil+tSNXODqjdJLDRnNIUe52YDJf4QyHg/wfFjZSGFU32vYe
6YzMuk1OWppJIR5RtbfRIme0H6u9ZVkWgoHpjUM/5jljS6OX5pYlIVi63e7l
rcvOED+daWOeFYKNp8VTD1U6c/FDMPxZQoesJi6o6i3a9DMuBD9qpuVPd3DB
3m81xV8DQqDqSI6D3AUv8394fuwcgmmeR16HjnCBZI951fuaYKwKu5fmvNAF
09zflb57HIz1I791apPnAv/FM7ZXFgcjK71l4c9LLnBotnbEl8xg5LD854Ja
bP2DcfqkrOJkY1dca/FwVhN9MD6VDZ253d4VSZuuxHRBMOx/z7ZZIHNFn+E3
ujrbBGNsu60HRw93ha/L0//8zYJR4nYiTLvAFU/2fPrNK5OgObm7zy5XxG+v
rfEtkcA4nNzgkitq3a3XpWeWBPvntu9m+d6Vm78ENTQdNHJD6Uy+3+k4CQTk
dpf6uSE1+cjZtAAJZpLdsjfUDYMy9vsIOktw5ueCeSsS3XB56hiHNjViWLbN
tU2Z74bqWny/Oo/FCHQ9V6zf6Qb3syP+WBeLMVlRHiG46Ibzc9FweKYYR1j+
deP2nxjVZHqNG7nD8mrTtNt6Mby3+JF87I75o72mXA4UI/lY5PHbUnc4SiPe
F3YV4/DD/6IPD3NH+il5aX9zMX7/WPo1K90dHsJfDTc/EwGt9y6akeuOU27+
u0UnRJjmTNLhBXfc+vl5p81GEUjyJivuzsUXod7Q+nEuDT3QzW18wf1oESSz
epB87oHQQ9He/l4izNkUtORXiAeu+JU3uN1KhAvFepLfPVAzMHRb+CchrB5M
OnNqngf6vShdMPiaELLvq0m+98Be/Qoc3yfEAvL6F5z3wIMZb32arBTiEsv/
Hlx8IZqEfnTQWXlicGTjTT+GCqEY3KTU184TnlnqFR5RQiya0bd/lxBPzD7c
qHyHVIjrGySkPnhi9OrklfwAIZodJeVgriesbO8c+OIkBN2Ol3eQ30X9Q/O6
CbHsa9aFfaWeOFQRbTS2EOJmc/oHnlz9FaKNw32zSQ284GGQHTnySgBtCJlA
Hy9cOhE26NlFAVYMbOUmDPZC/StPo3/nCXA/jS6oF9ztz35dsVCADuR4NJnr
hbUzb2QEJAoQTQvsdi/MnHp7TqpEgMw7c9bdOecFrzNZ3i+7C/CI1R8vLr4A
1s1OXt1Q3xsHbAoHyu/zYSCrO7O3NzIUEWe8D/CRRacr8YbUfODWzkv5eJpA
I3pjV27/9KjRfHSd5untOscbE0tumklVfCSsDyf1yhv/7fWbJ3Plg56W32e9
YfzaeV9JWz7Kby0kCcubi89Hz0+5G0/X88GrDlc38d8EYRBZ/pxePnj/Q5Ds
dDsI2SR9LBT74FjXqfX5p4PwhmS/sYN8UL/zlts/CoJA3o5VxGwfjPzvxpAr
2UEYmupP6p0PMvc7SQRrgrBrbVRA17M+4MU9/n5zfhAqWf3z4c5/EJwYHfFF
7gjz+rGjgkBOG6mHvth/ZoG8xhCEPY2ubNsv8sXOUUtdmqqCQA4PqY++6Hu7
TqsjgUFwETZ4MGmWL04Z7qidnYIwxtiT1EtfNJ74U77WJggFk/lNRWd8sTrd
OLhn0yDQ7Wn30pebfxA8SHptWtcPA227eAZ94GHC9TWknvoBLyeLrpbxcJA+
sNAPc1v36zXxKg+/rW6RHeSH4OkBN5od54Gc1tyNM/0wpVapYMBeHqaQcLO2
+sEhrmycZCMPJfS4nPaDbvhyQ3oGD7VY/fXj9j8PZDKt3Or4I7/6v9bLEnmY
nj+d1GN/yNYkLT4UycOpq2TDC/zRz/WAnbmYhzrvj5L67I89bX6u+unGA53+
mRn+8F9Zs9TVlgd6fHO3+MOrXtoNv9Y8kGq6d9Epf1gcDGq6rT4PDeJcSP32
5+bPg4Q8TYRlAI5W/knM/hEIktxIPQ9AWs6O4fgaiPP7SMIUBOBk26+9PL8E
gr6OugkB+NLxxokaMpbTdDI9ADPWeQyo+z0QdHdd2RyAN1NaeBRXB+JKd1JQ
TgZgxfbImBW/Azn8H/Av/na6QWoDCmG605xaPJDdR/AAkFnweC+vNg+vS4u+
dOsKHB400jGajBtEUHwATBy7X2NJxn3J9qzHA3KqulxLJH8fkkTxAtD+u738
FLk/S7cGYG2mMtmHjOdnUACAf/F3EvhwdSpQ69vl885kfIn+jwygZsKtU/vJ
uNLHPrZgAyDgi1tpyf3p8cjeA3RoFvnkDRk76kjCOAZcWQNlIHkeZTnFG0Bu
pmO6HRmTw7J4yhPg++3YomRyvQl//D/+XprgagVi50OXzByyPtesKR4JxEDD
abc3ZP0+kuMp7hIIp5nDk0VkfVv4UHwSiFaiZ93k5P24kHLTLzAQLTPvv0on
74NUL4JXAuExp3FqOvl9LFmOZoZATDdzybpL3i85beQEB/6Ln1+reunX1ECI
F+sPxJL9cZu+wEWBiDdrGr+xFQ9fO5EMmRWIDxt/m4V056FdLsU3gVhwre3C
O648kOxzrrgkEHdfKqzOC3mgr2fvlUCM9lk2ZmMED8kaZfzmskB8tr156tEw
Hod/Av/t/yKSnmaT53C4K0lbtZiHexSgNuWh3roffumbeaim5daGh/rvV0+9
kM9Dh04UH/Gwb3hRpuw0Dz4UUICH2cfKXte5xUO0F8VL5JzMWbvn9XMeSHU6
767nYdfA8eK3H3mg6bH3SN6/80/RbgfyHD/qjffxaRgEWu4bLSLPPa/+lr5t
g0zXZZF9uHn592ndg0CqNcFXPGwcXetjBck3bDsX81C3ed/QdiQfGXdQvEXy
SNb3UwUkX6XRBXrMg9ZH0nbswCBsYviL9y//Ubixs4aHqtq3FhStDcJzmuCb
BKGpW1m/Y4eDQLPt4s5B0ExusPbloyDYMnwWhDOnsfJ3LT4EdEMHBCH66/An
17vz0Z+WB3kQ2n5JdfcR8jGDHrC4IFTvMGosEkg98KD4jZtXKh+nyfJgCpnH
W4c5sctJfVBTPBeE4KykTZey+ahDjnP3zCAUGwJWxBby0YPhuyCIRv/M7Xia
D1qe6hcHYWbLtv3aXOdjKMN7Qeg6z1wfXcbHPAq3yHMfbdt3QfV7Pof/gv7V
PxI989qfIFgqhkilLQV4x/AgHyclEr5FXwEaqmO8DliT567+VsdaJEDfJxQf
8tFm5NV9CxMECB2RfH2NPx+zDjgOkc8SIJHhRVJHH42UqHMFmE8TWiwfjT5W
jMy4IUAew4/8f/X/Kk1nk/nIvtFDMNJeiCqGJ/nY5pkQYhNH8AUpz5L1ZLyv
TNo7Qwgnhi/5CLt4NG3zCSHUZGh/lA9dI9s+OV+EGM3wJh/an57Jmh4iLPlF
CsYjPmp3ttlVHCZCPsOf/H/4i+7Gb7/5iIypXj96mwhfGB4VYP31LguSz4vQ
2o1k+E4CFLnPOHW4QgQ3hk8FWBzp4vfISgx6vEr8CA5p4fMurbcY4xheFcDX
NeeiSijGSpLOt8QI8CJj8a1KoxiFDL8K/uFPCk/mTBLgbX6lv+V6MUj1IHhW
gAfjW6R8OSwGW651Aowd1WDdpgdieDB8K0Dk2TGznv4Sg6DThuojAnhvfW8z
o5MEExneFWC3S3t5rL8EayjgeShAwqpl30DwtQn//o0vwb3qZoEdfwvwoVSY
MJ7g898MDwtRKV40NY/gd2sK0DoJMdJceXo/wff+DB8L8Tnt9+YVBP/H0nLm
K8QPdYOFAwk/mMLwshC/f7394kL4A4VnpdFCpNZrE9KQ8ItjDD8LufjBeEq2
064UIUTWX+zaZQWjdjXF00IMis+ZJC0JRtfZBACvFeJc6h7JnLJg8Bm+FuJi
z+XPj5qFwLi55OF/h4W4U//Vxgc2IWDw8IIQIXfc7l5FCOjP0Q+ESOc3fjBf
H8Lh77/xQ0DTc+Avsu8OPX/TNTMElgyPi5DY+/gs66MhoOXctqMIA3+8at7j
YQiEDJ+LcPnB9rPDfoVgEIGnDXxFyJoe/sK2o5TD6yKUbvDdMt1Xiu10w0aJ
wHuRxz8cI8U5ht9F//jnW3qAJopQWfVfr6hNUg7Pi/D4a0i81xkp+gwhB3qN
CKtX7Rjy6I0UIQzfk+v7H/8+v1EohpDlW3tIhM3Pjp2ZZx/K4X0R0rNuZ3QI
DQUtX1Pvi2Ds4dxs6qBQDv+L/vFvBmd+ihCW4jPGcUkoGjM+IEbrn43e/twY
CkcCz4M7iNEnaxgva3coxw/ESFwoDYs6Egqajhx8xDhWsfHnkNJQZDC+IEbD
B/1bNLobir20YEaRv586a9yUN6G4yviD2JR/zWT45EAKeDLhVR1XN4hvL0ML
xifEKO6Y8uGWpwzOZHs9WC1G0YuN82wiZVAzfiFGVIxVgcUkGcaQ8n7soBiy
wXsl4iwZFjO+IQa/cqnN7uMy7CNwbus9Mapu5LWs9UzG8Q8xl3/k+Ewun1st
xsGm0cYTbeVozfiIBG8yaqmz+8nhRtN1ewkqztZdGBMgh4bxEwnsfs64niGT
g6JptbcEtYcvefgpSo7VjK9IcHuAaIjzIDkOfuk2zTNSggZ2Re6/xsg5/iLh
1l+O3+T4dUqWQJP1ZejldDk6Mj4jwco1k07MWi0HhT+1Vksw96ufZ+/tckQx
fiPB9/wHP/cVypFC4WyRBFse1QT0OifHOsZ3JIhJCnWfeU+Ow2S2pXcleDJ5
aNNLFXKO/0hM+69GDlrO8n5I8LWgfFxNfQU6Mz4UjAc1afKOLRUIzCSIqF0w
Rtubnf3TScHxo2CMX55mLe+pACmmheO9gpE3zz0j30GBjYwvBeOOITD2nrsC
ND3FRARj77ALJxJ8FRx/CjbNHwrQbBQ4IRg/1UOGJwcq0J3xqWAcd3YqCyZj
Cud7rApGVXBZUFNyfX/Gr4LRLcR89mB/Beh2syoKxocntmu+kPtvYnyLXH/k
+lA1GZ+k5f5OME7MX/mqi5+C41//j29JCdv3YFj/GHFZI1CgB+NjIWjndsCh
UKqAgE6wbQhObJncKzVcgQGMn4Wg2nfEsQZxCsymC+4ZgkUVTrX3D1Igh/G1
EOi3jvh4e5QCFD5P04XAL/rqqmsTFHjL+FsI9/4VYHRmfAjmnLmpfpOm4Phc
CO58r9LfmKFACDmOIStD8K2TbXuHmQqO34WgsiRg9FDyO5WbHApDcG5o8+hq
8ve5jO+FYEF2Yql0mgKXaAK5EwJxra67r5N4Jv/h//GbkOX98S0Eh155PulM
xg6MD0qR9jJV+pWMaXl72EaKqKcVw7uR+41j/FAKYXFGkojEW0oTvgcZ958+
v/Z0BfIZX5Qi/sDdZ5/J7zdpAdJKkbV+65aj5O9N/FH6L35rWhD/k2LGMmHP
cRMV8GR8UorWgxskqpIU0NACvUKKtbqefZ4lKjCW8UspfgZOODAuQYFlH0hF
PiBFR/MHiVHRJD7jm1I8n2C39bFKgVsUwNyWwmt6UJFSouD4p/Tf+29Dyn+n
b1K4H8ud2tODxGd8NBS9xobXFNsroKUAr00ovA4lvcrroeD4aSgue87JfWit
wFp6O/dQBC+0OuTQRoEjjK+GoolhfFp6EwUeUgCsCUWqIiTpXl0F/rAXHsrl
PwWsKSAfFwrp+Yabb1fKAcZnQ7EiPcAu6rEc5PRXL10eim9jzQcdvCTn+G0o
FuWf6Gt7VI71lLAUhGLclLch53fKOb4bilPm5SserCPnncCj2FuhWDrG+tns
BXLUZvyXi0/yT1crwhi+hmKYYsww1Wg5x4dliHuhCWuRIEc8We6erWXYmV9n
YYFWzvFjGboVPvqUJ5FjIyl3Vu4yLHvmHTnGW87xZRlu2P+3amxvOV5QuhEu
IzyrcnbP1nKOP8v+5V/CZhxvJslQ75PtjvXlMo5Pk7rwsH+atlSGISR9FS2T
IXr/k6icHBnmMH4tw+vBx8w7zJMhh8DH9fky+H7sFdJzsAznGN+W4T38aiuF
MrylBPimDFsl3X607Sbj+Pff+DLY0e34RYakZ5/fjH5I3gPj43I83Nhq/YJD
ZF0IHJC2kuPZ+NG1oleHIp3xczncszr8fjaB1Fc6ATc50tRdJjhEkvrK+Loc
oy8uiRH5kPpKFzRcjiJx2mLXTqS+Mv4u5+KHgqb36rFydJlSZ8eyZ1IoGJ+X
Y81yvsVwso9HEXj9aKkc7QaFrX++Q4pFjN/LEdDqSt3w+VLsWU4OwH45jhcr
r7QfLsU1xvflEM8ZMytDKsVHcly33ZBjwpLLh1v2knL8/298KVxJNUr/LEdd
m6phX6+HYAfTAxQ4WPuOomhziKl+NSB5vNxnhnJMCKcPKHC2weZnZwi+ouW4
T3sFknauENg2DsEbphcoMLzR+umjHwSDwstOfUjeHuyfXJgbjIZMP1D8w3/t
ab3zVuCwmdvGptpg2DE9geSZ2KjCXKdgeNMFClbg/q9D0vAmwZAyfUGBdcWZ
g+dVSkz1MEKBIXPl7a5clWAo0xsU+IKWAzbnS0z1cbAC7067R84hddSkPyi4
/S8x1UuSly0eejeYlSDBLqZHKDAs7eDFJaSOU7RQOofkUdsbolX2Ek6fUODY
1wdJDZpJ8JDW01XknPfqEx5ZJcZ7plcoUPC+6bOfl8Sm+rpdgefJ5R2N28Wc
fvF3/mJTvS0ieXfeY9clKjEcmJ6hwO0lB5tadBXDj9bfcwq8GfppyYxKEadv
KBCTUHE0+LAI9LjPvEvq5rW6i2fOEWEk0zsUcLPIbjRMJ0Iqrc+vFZgW6uBs
30cENv0qLr6ZyKRv/lDA96uwa+49IfYxPUQJ135RlVFFQpyg9bu+EtP7xA66
slqIG0wfUeLkmFELSicJTfW8nRJzFhQYrQxCfGJ6iRIjzeTl6iAhLGjC761E
E3l0+4RuQrRk+omSy39C2NJ676XE0zUWPN87ArgxPUWJ8AN3nNIJfxTQ+i9R
wuLNktJCwpNM+ooSK8+H1p0nFZj01gglDnzq9Ox8OwGSmN6iROPqDhH8cj5m
0oI6WAnBuLj+R/bysZzpL1z8VE6fHa+EaPXWmxsJby1geowSk74ESsYQ3svk
gtlKjO6nSmxYGQQGHxYp8SJGG1a/JMiEJ1YqsXrj1aaWGUH4xvQaJXRtAvNX
G4JQjz5gthJPbtuGJTgFoS3Tb5Tc+gexdH+6UAmrn/qBnhf/6jlK7B7defvW
VTzQ8IVnyfvQd0ttNYAHHdN3lLh3OGyb3IUHCsdz7pD7T11zt3NtHsYzvUeJ
xdmPryquB5rwySslnPrUD9m5LZDTf7j4qYGg9tTC70osnHAz/VB0IKcHqVAc
gOYffQNN+KWeCkeUNotjOgdy+pAKB3aFNy6sHWjCM21VuBdeMvvQC+AX04tU
0Ahh3vUM0JCWu14qqKfkT9myBejI9CMVt/4w4R1PFfZbSxIiwgFfpiepIFvw
uFFGD5jwj1iFzXsKhr96HYAopi+psKTpdv+stAATHtKpkBh6us7zjgFIYXqT
CvwUf56s0N+Ejwap0HlP4LAJOn9Of1Jx6++PPIqXxqsgbtPw8JHdfihmepQK
XRunDVsy2M+En2arUHv5c5tNvfxQxvQpFeL1u181rvA14amVKhRYD7j+fY+v
aV5ZKiRNm/Fh2nhfNKf4apsKdf0WyC/7+aIr06/I/Vh8XzhTvHVAhZkJfoJb
R3zAY3qWClU7XJ0XjfeBmuKvMypovxY0snL2QTzTt1R4m7jMunuFN5IoHrut
wmGPDTmF2d6YyfQuFd5MyPm5ZbA3llF89lKFDZEzws85enP619/5e2MfxWvf
VChU/bEffMcLx5kepoKjcEepXaEXblD8VleNuYsCsnev9cILpo+pce/lj7X6
NC98oXiujRq9a7eavHmwFyyZXqbGkmUXbF5IvUz4rqcaXXXRkfP6eHH6mZqL
7wUqr0zyUOOY/Nyf6ec9IWR6mhqRvl03lSzwhJa+LpEa484EK52lnhjE9DU1
1n+clhhRxxMTKB7UqjGquEF0frEH5jC9TY0Mh65TTyV7YA3FhwPVSOXXD6zv
7YFtTH9Tc/nHA4UUL/6nxtDhD25Ou+SOUqbHqTHo7IXsq5vdcZfix1lqLFUu
az5zqjveMn1OjeTQ6lyveHdUUzy5Qo28muJmM8XuaMj0OjUu5ey4Z+HoDmuK
L7epEb1s8gZ5W3f0Yfrd3/juoNu56QE1tn49ub3yhRun56nxe8OOou/n3BBB
8ecZNRw+xvV3y3Xj9D01NLeXPCpOd0MKxaO31FgQ+CV671A3Tu8j69vFpWVP
iRvWUXxarsbRhF+enrZunP73d/3dTP7KVzXaHGiSdvSuKy4wPVCN7LzZI0P2
uYLKEefrhGHfizdRm+e7ooLpg2GwCS+4c3qwqwnPtg7Dhx9DkneLXdGY6YVh
qHdl9o1YO1fY0ITTIwwDri9MvtzcFfZMPwzj4rua/Bv3MLTp90uy/JMLFExP
DMPQTOfpdytcEEcTsjAMTf/7bFf0xgWjmL4Yhk43Fh/tTn6fSvGwJgxbbsUW
WX1wwWKmN4bh+Prtq2K+uGALxccDwjBDevJB/Z8u2MMEtf/HZ3h5XBiWL60J
G2TuiutMjwxD4bXcyTJLVzyjBX1mGDr4B33+SsZfmD4ZhnGRf/puJWNLiqeX
h2FaTrusLAtXtGZ6ZRh+7L9ysg+5Xy+Kr7eGYVF1bPM5tVzhwvTL/8fnUbxd
EIaMVEvj2T8unJ4ZhiOt2k+t+O1iwt+nw7Bg0Z/aQ8l4LNM3w9Di+Jj5PDJm
ePxWGDQTvU+PIuPlTO8MQ/z8FupvZLyF4vPyMASeK757ldzf5L//P/4Jite/
hMFu8Juu48jzXWd6aBiib71JqalN5k/LhWU4dk05XhNN5veV6aPhCFjnvE5O
5s/wfKtw9Bj4S7iSjE16aThSWz15/41c35Pie9twDCnbMNOBrIc700/D/8Vn
eN8tHCfuKZrHkfejZXpqOK4v8p7X6qsLKPwqEoSjgDyVTZULxjN9NRwfzx77
PfmdC+ZSPhAejlavrnfqR/bDaqa3hmNtx0FVvd67YAflBwnhaJlfaDXyswun
v4Zz+oeLiS8kheOc3bUl85u5cnpsOCLK+2h29HLFG8ofZoRj8pG4epl8V/xk
+mw4qv1PD93f3xUNKZ9YFo5l3/cFusx2hTXTa8PRZfzkkP67XNGP8ost4YgM
mRi86JYrfJh++ze+K0Io38gnzz9uwPo3vd04PTccp2626xioJued8o9TZP1W
zSl7muyGSUzfDYfax1adl+lm4iM3w1HqFn1/Rgk570zvDYej+foywQM37KL8
5EU4rnaKLL1U5cb1n/1df3dcoHzlSzge/VzyUVTHHQ+ZHhyOeccTvZRkzPiL
pQZvHkxICq/tjhqmD2vw4vpm0YJfbmhG+UwrDQY43le4fXNDF6YXayCfWN95
+mc3OFN+012DBX4d0/d/dUMA0481/+KraEJx1SBptWTFl2buMDI9WYNWNg5/
Jti5YzTlP3wNvn1cIDkT7I7pTF/WoE+SaEGb4e5YQvlQmAa763k82bzEHVuZ
3qzBjia+2u1F7sin/Ki/Bm0rXC3jHrnjONOf/8b3wHXKl8Zq0H+1YLehkwfK
mR6tge+RmxdPe3jgM+VP0zUwaIP7N1J6oA7TpzU4qPWb0mKoB1pRPrWU3H+n
uM+BWR7oyfRqDRKEdUbdyvaAJ+VXmzUY2bxpnPyKB4KYfv03vic0JF1O3q+B
9a/MbeZepL4xPVsDt7cTSodM8MQ4CrBOanAoT2SbdtQTs5i+rYG474mxqy29
sGICAXw3NAgK2pr0J8QL25neTca3dzz/tcALB8n2D39O1qd07uRn571wkunf
f+N74xZVgz9rEJ3kvWdhb2+8Ynq4BmHLefUWBHvjB6F/3hZaNHizvE55gjfq
M31ci9xv+TunTfZGe2qgttRCK7Suka3whh3Ty7XwipH9ctvnDR9STqy7azH0
xMmtXW96Q8T0cy1X/3wQQQmVqxbL7MctOeLmg8FMT9fi4KGJLWPG+mACbejg
a6HKji55XuiDeUxf1yL6S/8bkQQ/raGEU63F3k1l80+JfJHD9HYtNPs79LFL
98URKnfFa2Hfy1ieUerL6e9a7vz54l6dV+p7Y7QYdKXCLLmPH6fHk9+TL235
HeKH3+R1X0jTonLs128zB/qhEdPntQhzKTBrnuoHa5JNjy7RQmoXd271Sj84
Mr1eC/NrvKhO+/0QQOjOnk1aLFy7t3jZTT9Ov9f+w58xAV1nb9qnxfOFtwZF
uvljONPztRioCw7LHeOPSSR9Ljuhhe30c3E1B/yxkOn7WmzzO94rpsYfWQS+
zr6uRWLeRullYQD2Mr1fi1YWdwfFzQvACYJ2kp9p0X7A9fZtSgO4/s+/8YGn
9Dh80qLj+Af9FrQCPjE/QIuLzaZPzyb4u3Yd8sLNdRh8ZNTJI65AS+YP6CAZ
arOL0APYEjqobKHDcSur2ktDAXfmF+jQc2FuqnMUIKIGTjcdLr+Y8mbmUEDJ
/APdP/yfQMqLm4sOe293bbl6FZDE/AQddqeXnph1AJhBDacgHRLEYf5z7gBL
mb+gg71rp32xP4EtNIGpdfhvwjTlWetAFDC/QYfMwCfimYGBOE0TarwO5gXL
z+qMgbjG/AfdP/5D4VrNaB08e6+cOmdVIOdH6JBxSDnMMy8QFpQuT9PBsYsf
b92xQM6f0KHPySEzxFcD0YO8/meLddjU+O2B0keBcGd+hQ57hlyK2v8mEEJq
QG7UYTTP9tMy2h/A/AsuvhkPlP6c3avDtLSUF1Ma8DCW+Rk6tJvxfu7yVjzM
oobpcR2+Oh8oPNaFh+XM39DB75CHxxQHHrIpgLqmQ1fp1UvSAB4OMr9Dh9IW
L0TZSh5KqcH7VIc43BjSZCAPt5j/8Xf+PLyiAPOjDhfPJr0qWMvDD+aH6NDC
8fPAxMM81CfHI612BJq2KL/X4REP7Zk/EoHPsoJ1Bwl/7UvgybjmEfhTcrkh
r1sQ/JlfEgG9cN30HfwgyKnc3TUCmsNzDBXxQdAx/yTin/8+jEw30jkC8RG5
47uvDEIK81MiUHQQN/flBiGdGv68CNSk7r4vOxqEdcxfiUDv+pXK5ReDkEv1
KlUEHHZX/u5zPwhHmd8SgTrXt2zZ+TIIVymhNEYg+5JFk+JPQSa9aggX34yP
t5Tgjo5A8dU7rt8a8vGH+TERsH1RL+hEez4aU71qWgTav9YWDOrNhzXzZyKw
MH1++wpPPuypXrU4AmMnj/qplPARwPyaCBQknn++PpIPJRUkNkRAUD/eeHsY
n+tPi/inP7ByvCcC2+M+7PuzhA8mzxZFoHT3GuuAbD4WUMHmWAQO3KsMbnyY
z/k7ESg8eS+o6BIfu6mAdDUCPTTBLec/5qOE+T0RCB7X98ytd3xcpXrVkwiM
bzhi4LPvfM7/ieD2n8DUX1MVgay8hJ8Xawtglkb9oAgc0s7mgYxbUL2qViS6
5r7qtL6Gjy7MH4rEZn3dW/a/+HCjL7RZJFr0Ttjn9YMPIfOLIuFXNO2PJYmn
oXpVl0h8PFlWc4/8zvSq3pH/4rP+HKdI3HwyPlZiJcAM5idFQvyBd7u4vQBL
qV4VGInjYxP9fvQVYDPzlyJRVFi3/zwIkE/1KmUkVll2sW4YJsBp5jdF4vLm
s/7NBghwm+pVhkhcedxolWOSAM+Y/8TFTxXgC9WrRkXC6lzB3PQZAlgyPyoS
/V4O1ZfMFKAN1aumRuJRqqHi13QBejB/KhIzD99dtWmqAN60oGREYmNJ6xut
JgsgYX5VJDL3RdbJnyhAJNWrNkTi3aGXa56S8QDmX/0//jiqV+2JRO3qnHEW
cwSYzvysSFiOabTNf7nApFcdI88/q2GzJVsFyGb+ViTswzNcywsFOED1qiuR
KP+WltHxggDnmN8ViWPpF7a1fyzAHapXlUVirqP628kPAs7/+rv+QnyhetWH
SLyXrVr9xEpo0qu+R+KUNNZc0FJo0qvMovAubthl93ZC9Gb+WBSuvS9bcqK9
EN5Ur2oahQdxd198aytEKPPLopDUbkxkWQshYqleZRMFi2nnZ84h9x/C/LMo
rv4KMJHqVY5REJe+t06qEmA+89Oi8DpiQsjOMgHWUr0KUUj+Hrgn45IAucxf
i8KMyjcTrQ4LcJTqVYoobJnd+rb5DgEuM78tCoZGA9/HrxKgjOpV+ihIz0x+
13KegPPfov6tP9OrRkbh26yc1+fGC0x61fgoZIQcvmRJ9ksnqlelRsH26Lyh
tccK4MD8uSiYq8ekNCa/B1BCvSgK0yddODL+PwFUzK8j99v94e3CZAGMlOBn
RSFP73Vi4yQBhjP/7v/xJ1O9ancUnraK9+5G9tNi5udF4dZ/yyb4kPEGqleV
ROF744VZm8n1e5m/F4UhJ0WLD04R4BTVq65EQTH1gNNdsv9uML8vCqX2twzR
ZFxO9aqyKPzMX2OZRcYfmf8XxeUfgUmH+hCFqTZn+26fJjDpVd+i0Pnmu+CG
ZP93o3pVTRQs63g2H0r2pzvzB6OhXZPoXTddACH7nCwaAZPCJ3adL4CG+YXR
eLqkIP0PWe8Eqld1jsagM9oeD2cJuP7S6H/zZ/1ZDtHoPCil+fcxZP7MT4xG
nsu+yCX9yXmnelVANKrvLGpdqRKggPmL0fC8VGt6L3L+T1O9Sh6NPXM+lkX3
I/ud+Y3R2DhVPnR7BwFeUb0qLhqKvpYGu4YCzn+M/pd/6tAENCIaf/yFc75+
43N+ZDSaRguCt37iowfVq6ZEw3L59CW6j3x4MH+SxLObl68hvzO9amE0XkSV
mb35woeO+ZXRSE6wOh1F8t1gmm4yo+E3a0n4F5IvxzH/8v/xZ1G9Ki8aT9YM
OfuuloDzM6PRINoj5TrJv9upXlUcjcpL0Wvek/Eh5m9Go1ba1S0pZMz0qsvR
2FcnvcMh8vcPmd8Zjf9eTUt5Se7/jupVj6NRUpArDiBjple9jObqnwBWFABV
RmOKskm4iow7MT80GmddHp60IvfrS/Wqmmjw7OvVVJCxP/NHYyA/a7+vgMSX
Ub2qSQzUcyoX9TYXIJb5pTHY9f2VqA4Zj6R6lXUMzq4rmtWIXD+R+acx/+bP
9Cr7GNhZ656dJeuzhvmpMbh7Qz3yN6kfO6le5R+DRuOnDYoh62vyV2NwOmrM
/GzyPi5RvUoWgzo38rPWV/FRxvzWGFx1vRtfQ35/TwlPbAy6Xxu2ci55vyb/
9f/xmV41PAZ33BZ1KiX7w+THxuD6+OsT/nQk553qVZNjsLDqXWyMg4DrN47B
6rPmbbbxBCa9akEMlvfwqlgTLkA882tj0M51b69fpP6MpHrV+hjsbbek9WyS
L1KZfxvzb/9nUL1qVwzGNxi4dQGpPxuYnxuDe6LY7HrkvOyjetVRMt9jpzrs
JL+fYP4ued6pk1ofIuf1BtWrLsVgd0bCrlEkH7xkfm8MKqpjfjQh+eY71ase
xaDPGWGjmykCzv/9f/wWVK96T95n1nXxRBLPlvnBMbgwcN/zR4sFcKN61Z8Y
xNf96TR8AznvzB+ORUPHOguH7SXnnepVjWOxZ7FjZKdTpL4xvzgWwWU3q07c
IfWN6lXWsSg5p9y/qULA+cex//wf1p9nH4uwscHu/OZCbGJ+cizqtLtxcmI3
oUmv8o/FURtZx3suQpxm/nIsmh8dvHNxkBC3qF4VGovN3e68uqMSopz5zbFo
MT04oMwgNOlVMbGoaTa6y4ORQs5/juXmLzTpVYmxGLCg9qMxC4XowfzoWLR3
/VXXOVMIL6pXTSLzS7oQ3TtPCBHzp2NRdFt1SFwshI7qVfNjcfnR8NpTLgsx
iPnVsZjUxKzZocdCJFO9al0s9O9fnHpbKcRs5l9z8c1Epv7AnbFoospRVjQR
YTvzs2OxsLVPh8OdRThI9aojsZhdL3VkqoMIF5i/HYvGz4ITggNEuE/1qoux
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
yw==
      "]], 
     LineBox[{{154.48160535117074`, 100.}, {154.6061872909699, 
      99.98969802620373}, {154.73076923076923`, 99.98526985802587}, {
      154.8553511705686, 99.98525030319958}, {154.979933110368, 
      99.98817416945792}, {155.10451505016727`, 99.99257626453402}, {
      155.22909698996662`, 99.996991396161}, {155.35367892976598`, 
      99.99995437207194}, {155.47826086956525`, 100.}, {155.60284280936457`, 
      99.99621090520948}, {155.7274247491639, 99.98986098308964}, {
      155.85200668896326`, 99.98277194656089}, {155.97658862876256`, 
      99.97676550854372}, {156.1011705685619, 99.9736633819586}, {
      156.2257525083613, 99.97528727972598}, {156.3503344481606, 
      99.98345891476629}, {156.47491638795964`, 100.}}], 
     LineBox[CompressedData["
1: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
Q3K9Hy0A3ZXo3KbuSR4ZH6K8yluJz32dzK+S+7lQXsVRYsbFPidfJfJxjiZg
v3/2fSivClDiwYpl9o/IuLG/KliJAcPkSTOT+QyvCiOf9z4TeY+MaTq6EaWE
rmFDwzcypsfptTFKpJ20vniXjN9SXhWrxLzL0+sTyLixvypOCZ7i1MdKcn9a
jueJlE38l4+FlFfJlNiof932PXk+Gl4nVcTftT9cbpLnb+yv0ilhxa84VUrm
14sKnGlKHC7Z6GhJxo39VTOVWNJtWa8a4p/BlFclkucteWMyllw/RXlVihKT
VvxO3kvu19hftfCf/UZetUSJs2NGeYjI+gRTQbpCiX2DcjJ5ZP0aedUaJaZs
+VLwZgmf4VVpSlws1QtMJ+tfS3nVJiWG1Ry4uorEh5ryqq1KTDaqKOtBrjfy
qmzizzGhBnNJfNHtt2jXP//rU161T4mpK3+8dpnMx3LKqw4qcXVSKN80no8u
lFcdIfHKHu2QF8JHFuVVJ5TwrI/bmeLFB8Un084osTb4YlHaAD7Dq/KU6GJ2
+eBwCz7Dq/KVqDI6L9jUls/0VxU02Sf7j0flWJES48VF5u5kvzbyqlIlBgaa
eCR+J/mO8qpbSmhidy3d9IOHZ5RX3SXziZjce/wvHuSUV1UqEVsV2n7dXx4+
U171WAmzo72nmLTkYzblVU+V8E85I9pAxo39VTXK/+//xv6qV0qY3354cQK5
f2N/1TslVmhnFH1/x0MG5VWflBjpa7IruprH8KpvStiduvnQqJyHg5RXNSjx
Y+j3+vQ8kt8pr/qjxG7rvKR1+3g4R3lVSxWM3sXopa7nMbzKQPX//EtxwZC2
KoSNzK9dKOMxvMpUhfXvjDdvjeQx/VUdVZi4rO/DAjaP6a/qooL7jSDl3ME8
vKG8qrsKu0JKOvB6k/xOeVUvFbzya1OzyHn2m/IqaxXmXq3eYGTIY3iVrarJ
/zy0pbxqgAq7f1pkXfnlz/AqRxXaVIRdX0bGvSivclbBavHEupF//LGD8qoR
KlR3/6H8Qb7f2F/lrgJ/8a0rC1vxcJLyKm8VAiuyx9a15oFFCzyOCo9/9s7q
TMaN/VW+qv+/fwykvIqvQqerdzbU1PszvCpIBc9Lu1mOb/wRS3lVqArdRo1O
XPDIHzWUV0WqMOJ6SeWmYn+oKK8arYLdkpcPLIk+aORV41VY/maZ0Zld/phL
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
YFefbzAj4/92kPpxvhbvbVe0daXPN42kq4VaFBfGrhWSsT6tJ1NJPjjT8wd9
nvO0YXwJyR/fTmXuIOP1r0l9uUyLD5perzPIeNN5IhhWaNHS2pMlo/en9eaq
5vjnIjiOCJg1Wgyd49t1DBk/HkYU4jotOjZsWZhG/Cc0JIIqjaxPWOqdB3Q9
7pMbpBN/xc1bGkLGB+kLzk0kvgxMnXqQcf85ZEIZWvTsvjuArlc9bUjbSuJz
RkncSLq+tF7N+jd/m7dEAGdr8dF+4J4FJD5enSULvkOLax9+VCpJPFYtIYJ8
lxalb+d2cSDxuHYMCcA9WnDPVNwbvITEtwMpEPaR/PXeNOsdGU/5U/2y7AB5
XlvfV/dJfBbcJgXLQS0MfywfLljIRTda7+b+s79iESmgjhD/PWjDGzWNixkC
kjCOaXGbM9PkiJSLPLQbfe2EFs7fEspOjuHCq3tOdsEpkk+P2Zt94JN4eBf8
5soZLbZ4nBj1yoXE9zmSUM9pMTnQx3hEPy6+JhGFlafFxuyGgriOXLjRevni
v/1fVnunY16+FtXSAy5z3pH8uJIcOFe0+Naq5/vrjzhY6m6x60yBFv5uWbuP
l3CQ8P7M+1PXyPpOmf+0fR7JVyfGuZ0s0uKXVTerPQc5qN7wJ+V4sRYJ+/c+
D8rkwH5zVvHRUi20sxcdLFvJAS1/jpT9y389rF5MyL1F8tccn/tn1Ry4rli0
92CFFiE5ZiNsJ3Dg8sn+84G7Wszsa7haG8zB9sHFnvvvkfyTcEVQRs4DI3vV
wr2VWrh61jlMHcTBx4vty3Y/1GK6QedJa3pyUHc/12LXY7I+8trEMaZN/SVP
/p0/SqePB7KfaiHIYsev/cTG5LxV37Kea3HRL8N1yws25qickFlD4n0Y13z+
PTZmHSxbvOWlFjP2S5ccLGJj9Bvt7c2vtKh7wxk87ywbbdLMe256Q/K3e8sN
kn1szLQ4LUp/R+LzTmXk1TQ2U+9/+Hf+7jVt07DukxYNesc3nhCyYRpxlLv2
CzkPXObUCnhEb3Qfv3z1N3KeGL3pmWfHxrnC1v+t/K6FReU67VRDNqZe2tNn
RYMWn9u36+r9AohT+suW/dJicfunnBv5gNeQqqNL/mjxwCvHviwLTH+Lnu7/
+mvQgy9+i1rqcHrsq+G3JgIDrRNWLWitw/ZKlf1Ncvy95/y8P89Ah167jadw
+wHbXRfZpBjpcPE159Asohdn/+mjTGqrQ/lOq7rUchYOrCw9kWisQwfT12cq
VrEgrl2vN8dUhz7CJwZTAlmgx/GsDrr/6++s3gvWzeioQ0gfbs9kUj9U7Ml4
nGCuw4GzK16ci/BGPT/HbloXHeKO5du8/OaFeblZuinddOjxNi/bZb0X/i6e
eE7XXQdzXvygJ05eeDnvrr7WUoePu1eu6HLDE+cC3wSre+lg9N5mdXuhJ37R
/po+uqb6xxPGaYeq5NY6hBX26v1fhgf+M9/UX9ZXB4txtV1UHh5wHLNVLbHV
YU7Vg9SYB+6oPNb+lMhOh8DJiV0GzHZHzmR2C+EAHfa4hk6a1tMdU14sDIwf
SOyH3G1bnueGFqOHbpjkqEPqo5XHSia4gZaLE5ya5++GnOLiobHOOojz2SLr
TFfUON+dN26YDh9u385b4uUKY/Hc22NG6JBQXHLq+AMXxCetthrtSu7n49+q
z0wXUvffUUS769CqIjrIz8IFVy+YH4v0JONOXf12nh6BsebdvoV767BpY0bG
6bEj4EX7e9BsfwRSyuaLQjg69Bxc6Z+5azjU21npwT46+EZcfysKHg6r6ZNu
jPTTIfntm7VlX4chJ1vXOpCnw6wZgoeRm4dhcMJPf36ADqxpo6Qar2E4x5+/
yX+kDm3jSh5urBwKlWq9nl8wuf/Z3/cCtUNB26V8QprtD0V01ePO3DAdhiRH
znyywBktuh0/xY7QofMDgyX3Wzsjd9aoKETpsHZ2Yv2iuUNwPvvyI+8Y8nwV
tktTvzshuV9/b68xOpwMlZlM1zkhNGOlyGOcDn8LRMtrqgZjcWZHP7dYHTp+
vPdnUK0jw6smNtt3RO2Xzl+GxunglZ655fygQXhvX/LBSaBDVuKICqFiIHoc
Nm7hKNLhFsvZsvcJB3yt+BrvINEhQ6z3rr2+A/5W7Y2xl+mwIcU0PzZ8AAos
A3rZKXQosSzq4LzZHiV36j/3V+mgzc8Ky71rx/yeTtNs3w7rn4/Y5KDT4UTG
3XW8Tv1JHATnOU4h9oO7bT5ubottA5M3DplG4tfQPWty234omTgUQ6frsOVE
7pBDDTaYnFFU4DxTh9ejPj5c99oa1j0PsAfPJvv3smZw6DMrxPXxuto/UYf2
rXac6PCyDy7QgjGp2X4fdBDe/tgmRYcrde16IbYXorcv6vVtno7UNWWJi6ot
8Xg8f+yzBTrk+t+42nd2D9SHx3W9s0gH4dQZaaI+3fHSxzK/dLEOfafGrNt8
sRtafrhYdHupDgHbX8R1HNUVq8w3ZdUuJ+sxbutOi7zOTH/Uqmb75vC8tuGs
3xoy/942sSrjjqh9MGNr6jodnMZ13/L2SXv007VbUpCmw5Hd50PazWkHt5CL
Bz6n62Cm0y4w7WiIeA/j4a02k/zQPqHu5pWWqPkeF/oyQ4epmb2jQqb8ZukH
uzqlbdXB0LDhQ9Wgb6zGcyez2f4H1v8Aatds6A==
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"Cohort Size\"", "AxesTitle", StripOnInput -> False], 
      TraditionalForm], None}, {
     FormBox[
      StyleBox["\"\"", "AxesTitle", StripOnInput -> False], TraditionalForm], 
     None}},
  FrameTicks->{{Automatic, None}, {{{0., 
       FormBox["\"01/04/2016\"", TraditionalForm]}, {29., 
       FormBox["\"02/02/2016\"", TraditionalForm]}, {59., 
       FormBox["\"03/03/2016\"", TraditionalForm]}, {89., 
       FormBox["\"04/02/2016\"", TraditionalForm]}, {119., 
       FormBox["\"05/02/2016\"", TraditionalForm]}, {149., 
       FormBox["\"06/01/2016\"", TraditionalForm]}, {179., 
       FormBox["\"07/01/2016\"", TraditionalForm]}, {209., 
       FormBox["\"07/31/2016\"", TraditionalForm]}, {239., 
       FormBox["\"08/30/2016\"", TraditionalForm]}, {269., 
       FormBox["\"09/29/2016\"", TraditionalForm]}, {299., 
       FormBox["\"10/29/2016\"", TraditionalForm]}}, None}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->900,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"Cohort Size\"", StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 298.}, {0, 100.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{
  3.690826546191424*^9, {3.6908265837381783`*^9, 3.690826620617866*^9}, 
   3.6908272800318007`*^9, {3.6908273540572023`*^9, 3.6908273828910856`*^9}, 
   3.6908275526730623`*^9, 3.690827594775272*^9, {3.6908276268144755`*^9, 
   3.6908276992497187`*^9}, 3.6908277323140244`*^9, 3.6908278280345955`*^9, 
   3.6908278787246637`*^9, 3.690827925124304*^9, {3.690828007447096*^9, 
   3.6908280293503313`*^9}, 3.690828060200986*^9, 3.690828144467266*^9}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
QrKY/RqsR61LhMUtNX3Or4UetS0Rm/S1zo3XlulRuxPRbq3yFOYGP3Ei9E70
9mc/ylvWo44novmVG6bz2M8i6rWJGNLWyHy1tkyPupqI8z9j4kvY3yLqt4lY
cLD8cCVxM17gniTijyTB/x7xJVHPTUTX4qoK1vMWsR71OREfdVJOsD4QK+q7
dL6NZv/W1ZH55Ron4VTNthYdiV+Kem8SZtka7jEh3sV6lHYS4lODJ3eX61Gt
kqBxf5VJJ2J71qOMkjD+WNgDHeK/oh6cBL+fPj/ZT32K9aheSWjVFv3YPyD0
KPskzKj4bnCY9QnWo1yT4DDa4uMy1idEvTgJ559uvjVCW6ZHhSXh0bx25Tz/
Noj6cRJaGIRPtGX9kU8nJQk386bvMNSW6VH9knD72ld9dW2ZP29oEubFxFn9
o/l9WNSXkzBm4rDB37Rkfr3JSdAt+eP0UUumR+XT8QJK1d6xX531qIVJcDoc
EvyW+IaoPyfhSOqiEfz5Sk5g1idh/TtXS/77hno0Xb+mC76yv531qFI63plR
hX+0ZHrUwST006l2Z31U6FEnkmD5NtmqjbZMjzqXhLCgl5lWxK6sR11Lwifb
tEdh7PcQ9esk9NpYWTCa9UfWo54moar/x6WsNxaIenYStt4t9nqsLdOjaul8
9E5r8Hi3F/XtJPTw+pHkwfoj61FNknGxQGlzf+Idot6djO1dDoZN05H5B3WS
gU5Xrs/+31+eDKW96svG8XizHtUxGdKUQ00iiU+KengyWnrY+hoQz+IAyzIZ
166mLb6kLa+PJ8NlajftCcStWI9yS0bTGyk1PeV6lB+dj/0vZ77fG1ngCEuG
p/lVj33E/UX9PBmtup83WiLXo1KSYeljXbSQuE7U05Ox1+x3/Ga5P3FYMv62
y01m/XmSqK8nY0DKvwfs5/FjPWpKMgbj7Z9u9PtieZuVjOT6BS/DiW9xQlWQ
jA1P/U4N15bX35Oxymrg0SnEKSyIbEhG+YV617HE3UQ9PhlrH1bcTSFm+cdx
TzIamxpGsd62V9TnkzFj1KwZesSjWI86mYwXc4Y58/xxEfX6ZJw38/K/xnoz
61HXk1HTeuj4U1py/30y3rTN2Mr9IsIP+YzO32GXDc/neFHPT8b16eEKvej4
7VmP+pKMkJjc/DHENaK+nww7RRcP9o9F8nrQWIJTzy5ta0/jVS7q/RJ4+vlb
ZxG34/VBWYK6uXcS1uvI6/8SdFBaWXhKrl9rSxDSo9127j/wEn4ACXr/nmR/
iJjT9Rut6PjzwmyXEqsLf4AEv5QMFmXI1xMjCU5PjXfh9Vn437pI0NloszH7
02x5fTGRQOXPRBde7xr8AxJkW40YVqgtW296STBKbYs+r6cNfgIJ/mVtUWd/
USWvP/YSNA9bvyKXuLPwF0iw5MpJBR4v4VdxleDAe9u53B8i8jtPCYaUdp/A
ftIQXp986fy6VbVhbvAfSHA0ymkb1z843VcMk+B+QejYLB5P4UeQYIXU39iX
6ye8fsVJ8HaOakhHbbk/QYKqmmFLeL8V/SApdL0OGaurtOR+BQl+RFaqrNSS
6e39JLBSyh6fTXxe+BckuN7ev9BfS7beDZXg7LbTE8yJFwo/gwQax+d3Zb/R
V17/Rkuw+mhNM1XiWOFvkGDkH8WlHC+K/pPJEiy4YRrYREvud5CgZu3iNazn
Tub1MV+CoYcmNuX+qQb/gwTm47vXcv+UL6+XCyXYNujMWe6PEn7CJRLsOZa1
jOttmrx+rpBg1/WWUVxfafBHSNCk+b1f7Jfi0/dbL4HWwYPj84l7C7+EBI4B
x++u1ZLp/UV0/9rWKfDz/1f4JySYOEv6jZ8HDoejSyWISh95hZ+XE8JPIUGZ
hVR6n7grP3AHJXj2sHg1+4vzhb9CgtapX8czv+X1+IQEq0orf3C9Lkj4LSQo
rihtwsfjp33AOQnmjAstqNSS+y8kGPvYah37U1nOHXZNguOP3mUXEj8QfgwJ
zs3WnMB+VlFPuCeBUmOLJX15vIU/g64n7NFE9ks34/X8qQTvl5cos9+3n/Br
0Hx+b/e7G/EFXt/f0PxNV+nQVkvu35BA2eCAmwHHc7ze10owbN+r+TweojxR
J4HEb0El96+J9f+XBAljDv7qoyXvV6HjvR8QEqkl2w+aSFHnvvsp6/uThN9D
iqOd51+aqSXzk6tI8cdKp9c6LXl/ixSuLdGtTEu2X+hIUfC3qMlpHm/hB5Fi
TWizl7w+DeX9o7UUE5rPNbtOfFv4Q6Tw0x1vyp/b8X7SUYqWA3WcThIXCr+I
FI2bzyjj/rJG7FfvLkX72/pf5mvJ/SNS5F1r5Mf38xTvN5ZSPFpkeof78YyF
n0SK4+F2F/9R/D+b9x8HKZLeDm/H9QeRzztLcd/W4sgsTVl9xE2KTL19a6M1
Zf5SLylMJBGHzYgNeH/yo/P9GtdUU1PuP5Hi286WA5uwns77VRid74iTU5WJ
IfwoUtQkR7pyP6Oop8RJcWF+saWnpkwPSKLzNdn9Kpv1dt7PUqRwCnT5sob4
ovCrSKHbzvHpRU2Z376fFPmHpnvWacr9K1Kc9mu6U1defxkqhXLr2FruXxT6
Qa4U/8xsW5oRsxzddIwUQ/e2SOX5YCj8LVIYP0ntxPVV3q5Up0jx6lnhOp5f
DX4XKca9tzLmfE/Ua2ZJsdV8dWPmBv+LFPZ3QkYa8njzflkgxUvHZpc4vxwq
/DBSBFvMMQrWku2fK6VQ2PZz5hAtuT9Givlrkluzf1LspxukmK18/e1hLZk+
sUWKSQ8zW1RryfbX7VIo6lhu4X7Ehv4lKTau8jzC/npjvoA9UnQuXBnejniW
8NNI8f0IJXbEH3j/PSTFlTvdk1try/01UkSc8H2sTVzG+/FJKXqFLFBX0pb5
e89IoRYzfDDHi6JedF6KBbvS89kf3NAfJUV/szvPOP8ThtrrUkjLPbMUtWX6
x20pihZ7rG1JrMQXfF+KZXpDx5hry/05Ukyd0/+1P/FlXrCe0fMWeunuQG2Z
PvJSisIyW6cC4iW8v7+l8dPybHRIW+7fkWLJngI99qOL/f6LFDdb7HZVp/3z
sPDzSPGk49t13L8o+iN+S1H7eYJJjI7c30PXu3Dnea43inhAIQWXdUvHzNKR
+31S8C//vBnv16JepZqCj4p215boyP0/KbiwxCZ5JtcruX7VIgUVywa+4v5I
4WfWT8Hxub2V3Dg/4O2iTQqOeoaN5vxglfAHpWB7/uRf7H8X9a1OKRjePc+D
+zFShV8oBUq13XRnacv6NUxTEFPcoUu2ttw/lIJQMxurDOI5vCBapSAvp2V3
/vyj8BOloO1cy3152rJ6mGMKHu6u2cX+hQZ/UQqmd5j/jf0NrblA4J6Clwaz
pXXacr9RCk7ctb3MfvfHXC/zT8GjdZ9atdWR+49SoFjSoh1fzwaun4Wn4MfD
/TfY79/gR0rB6CH3Ksq0ZfW0+BR4+luO5/Nr8CelwCAgZxfHA1w+upCagp0R
iV94fVws/EopOO25+jXvhz+53tY/Be0afeoVpCXvf0tBdpryAH5+j3H9bVgK
NE5c6aND3En4mVKQ2/FNOq8P07keNyYF5/8ab+P1ocHflIKOFyQXwPkO1+em
pGChYvoiiZZMX5qRAuuOyqdZTxD1uln0+ys6dF2uJfc/paDvi/GjtmjJ6ncF
KRg8qYMRs4PwQ6VgYqPNH1YQr+F63soUWP26EzyDuP4f/VuTghbNppRyPMPT
U2EjzZ9DA6dyfNDgl6L7X5pixf1Fot63IwXFk017sJ9ahJ8lNL4nFzzm/VPY
UfbS/Ng0qCf3Fzf4qVJQefzuC+4fLmNB4HAKhvr96sN+7oZ+wBRMGvI9h/Ua
Xg4NK1Og2vfHJe4fafBbpaBHauep/DyK/vgLNL4L1t9Yqi3Tu66kYH63FfV7
eLy5fniDnpfI8I3cTyz0rzsp6BS84kc58VWuJz5IwVmPhIXbtOX9hik4kzVd
aQE/31xffJ6CN+8Ua9nv/1v4tVLQXKHqRSRxItcb39HnD8pHO2jL/VspyNhR
5d2FuCNPoK8peBxvpcn9BsJv/yMFtfsngPMLUY/8k4IrntNy2K/S4O9KRUl+
mwDujxD1yaapqFBtncDrk+jPVkqFVVCMK+crOVyvVEuF4+2dS7jfosH/lQoV
s9o69rs4cf1SNxUeJs97DCFeJ/xgqYhQrj7H+Z0C1zPbpqJFksnc2cTpwh+W
iuRyBTu+n6K+2TkVBjtLZ3K/Vg/hF0uF3vlR4H62+VzvNEtF702Fhlu15f2V
dPyLSTVbiCO4/mmdiuWWN9ZxP0+58JOloqd92EI+nqiHOqVixfp6jxU83sJf
lorQnv+8lhA/4fqoRypubhjVhfWcBr9ZKlYdLRjIesQWTugCUtHVbdgO7gdr
6N9MxauPfQbzeiXSwYhUnO60Y9x54ivCj5aKHhuO5XG/jRULNgmpeHtRayLr
Xw39nqm4rGAZaK4jq6+mpWLXxvKHrFclCr9aKqK0+rRP15G9z2tAKpZtDv09
jPu9hX8tFW5nZkvZfzKd66/DU1FVtFSR11/R7zAyFebv+h0OZj2NCy5jU6H5
T6eT0HOEv43GI7rwFudXulyfnZoK2m6HH9GW9UfMTIXGpqnLOF+8x/Xa2anw
mfynmvUIRyGApqL7sBlvXtLztI7rt4tSUV0+ehCvD02FHy4Vi64FLfUjzuAE
tTAVn5qf2v5XU+6PS8XWjatr9xL34AB0Yyr6fSksHaop67/YmorHzpMs7dkv
yAnkjlQcuKpWrqIp0ytL6O/rGs15rSGr/+5NRbuzYzrcJm4j/HSpKNyiUXCV
eDw/MIdTMej4FotbGvJ+2FQ88LRxfcrvv+CCQiXdr7RNOl80ZPpmVSqK/Ws+
KGrK6sUXU7HRtKYD+yWE3nk1FbFWBV+6ErPcp3wzFS5Ka0b11JTpn3dTMd74
7HMbTVk9+WEqEmYuMufrafDn0fxoOzXEiTiZyykvUuF8p7WHK/fXCb8ejUfJ
/SZ+mrJ+t/epiFzhOz1GU+7fS8XXmS/PDCJ+w/Xnb/T9sMtNuH8vSPj5UjEg
Mmck31/RH/c3FZcuv9r+WFOmpzZOQ+/GVh3UOX/h+rRiGq4bS2M4/3go/H5p
uDFtwu001iO4Xq2ehozoFR14P2rw/6Xh8IMjZbzeK3L9Wi8NzmGuxw8RZwo/
YBqcXm/5wfnAWa5nt0uDx5WKctZfGvyBaXhiEy3lfHc+17e7pGG1j1PAcS3Z
+xhM0qBk2+c25xei3t0jDVstjJOLiA8I/2Aa1KTnsYqYl88EmzTEO+vmc34g
9Fv7NFgEDlRnvfwZb8B90nAgWhLE/awN/sI0WBrnXuH8QdTHPdNwcaajPu8/
DX7DNJx0t93M81fUywPT4NbpayOulwi9NzQNUz//LuqoJaufR6bBx8VWwv2Z
K4QfMQ1p+5WPcv2hnuvpiWlwOW+z4vr//kS6P+/GnSvTlNXX0+n3Zm3svOJ/
v2IarNsMGD9eU1ZvH5iGL6pLd6ZpyvTiITQel1/O4H6fYE6YR6RBYXWXaTy/
GvyMadh5ofsm9uuIevy4NATn3sprqSn3N6bhYXnzm001ZfX5aWnwK1ll/Jnm
vyiw5KVhdk5u13vE67lePycN+cbDs9nv1FQU1Oh6ng7dWkicyfX7xWnY1Xx0
J36/00Xhh0yDbbseCt78viWu569Kg/3HqLYGxAuFPzINPf1OuHO9TNT3N6Vh
wi/7oGPqsv6jbWlYeWGmFvvJD7IetTMNb2ePSmb/itCjdqfhcfPbmjnqsvc9
7kvDvq8DnjGLfqXyNNzbpxLC3/dmPepIGuYum3iA/Rs7hL8yDTpvVk8oUZfp
UafSsP67jdI54iHCb5mGSRot91Wry/wCF9Pweozma64fCj3qaho6zKlt9p14
JetRN9OgPqJ0Ln8u9Ki7aUj6e3H4Y3WZHvUwDX1v1pw7rS7To57Q/dyxev02
YmPWo16koZXlUnWu9+YLv2YaBukNbcd+HNH/8p6eF8WrzyKJg4V/Mw2XSiOH
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
mc/i+xJBjzLNxnL3hg7s+yfwfq9sND3x3/2+EqE+yiYbtqEF+10kov9hNsoD
U9f+0BH0qEbZGH/9xLxbOkJ9VLNsVM4eFnFMR+ivb5mN6WvDNm3XEf0Ss9Es
0T5nHbEJ06PcshFQUZpbQizj/WLZyIu3WcnuN7w+yiMb6y2qFy3TEfyMOmfD
obtr5wIdQY/qlo1+tU3uzCau5f1k2dj7y/HBeB3B3ywgGy7P7TooiY/y/rJs
VCRcOtRLR9CjIrJx6EWTwRHE03i/WTY+dX/W1FtH0KMS6Pi/fb/YijiC959l
s1yt1AY6Qn1URjYG7kryM9UR+9Gy8f3FrcR//9y0etSAbIx5aPP1MzH3Sxqc
jQ6tsyc+I+7GFhjZ2YjP6JZxjbiY96tlo5He0+eHiCVMIBiajdO7jk9aQczr
o3KyMf+Xe95wYl4fNSYbn88ujw8ibs372bKR2Uc6y4KY61G52SgcbHX3xl83
rd/S9Gx0m6z3eDkx97+dnQ39+N0YTHyA97tlY+OohSu6EjdmetTCbNxcblfQ
kFjb/5aNHhk7LhoSP2F61PJsnD85ay7jIN4Pl42640tv1SPmetSabDwtaRrT
jpjrURuyYeU7amUksYzpUVuyIZOVyGTE5bxfLhtHu2f2m0nswfSo3fT5pwod
i4m1/XPZmFzPrPcm4p9MjzqcjdDZUrt1xH14P102FhWU3V1EfILpUadofL6x
LRhL7Mj762g8oEenvsS8PupiNv6L9NgQQPyW99tlo/PZqtutiaOZHnU9G7f6
d9vDvj/3g7qdje133FxtiesxPepeNpw/XrVoQjyK9+NlY9uh76/die8yPepp
NmoySlonEGv78+h6/H4WY4hXMT3qbTaO7RyyYiMx16M+ZmPttsnb7hBnMj3q
azba1bV+ZkTns4z379Hv99PmPy9i9ng3+Z0No9C3K/uw8837+WT4vDl/9yRi
rkfpy7B11iCL5cTa/j4Z6sWcv7qJmLfzmclg0bdhg63E2n4/GcY47TMsIeZ6
lK0MnQz/Hcsl1vp/yuAgT+idRMz9FBrLELCn3N+WmPtTNZfB1WLOkdPsfDM9
ylGGSatSU9n51fYHyqBbYLzGkpjrUW1k6FlX47r/j5vWv6qDDL6dM0dmEvP6
KE8Zennsa9yCWNs/KENW6y5rPvx20/ohd5fhvz/by28Qc/92yPBu5Kqwy8Qt
mR4VKIPKYfqb68RTeX+hDPkTb89/Ssz1qEgZNjQ0sftOHM37DWUwGLY4zZg+
j9dHJcrwr95Xr3rE2vwKev+py2Yx5n4OPWWQumVsqUPM9ai+MgR/Udx9Q+/H
Tu+AgTLM3zLk6hlibX+iDH0d7oUsJ2aPR6lMhgtOaX8UxFyPUsnwInf45kBi
Xh81TIbTJqeMmxNr+xfp/My4cVOfeD7To8bKkNmiR+m3X274yvsZZXgVvzT6
EzG7nUyYIsPejxN12eva/kYZRl6Zn/aXuDHTo+bI8KS07zUTer/xvN9RhuWF
897WJ65ietQiGZLb7GnZkljrvyrDsWjZD1diXh+1Qgb9pdt3tCbm/lwl9Hsf
er7MmZj7S6yV4WSru9ebEXM9aiP9f1Ls0AbEvD5qqwwdDlovsCZewvslZXhw
9mWoJfFPpkftkWHml8X/2bDzzfsnZfi5++WTpsTsct9xhI7fzVPqwc4376ek
4+/aYlMsMa+POk3jRfFCM5z4Je+vlGFB0uHlJcRcj7pE42/87e/lxNxvv1wG
sxxNhgGdTxumR92Q4dnlU8u6E2v7L2VoZ6U3azg730yPui/Dup+zH28n5vVR
j2l8fw6vekFcxC6AZzIMnRW7rxGNdwnvz6TrI2VbbgTxAKZHvZMh4a1aPYz4
HO/XlMGxcvt6dv/i/hdfZSjbNyx8MzHXo2plUNveyN1NzKYzL3/LcGrvj6gd
7H7O+znlaNco9yu7Xx5iepS+HIu/ui6ZQczro4zkePhpQxK7HrkeZSZH9cl9
MdHEXI+ylLP+xXUdiYOZHmUrx6ti+XB2/+N+ZA3kKDKd+diI2JzpUU3kGHBm
XhtdYjXvB5XjnsMIb31i7q/hJEdPz03m5sRevD9UjgCTBTvsiZcxPaqtHG/2
LHNyI/7N+0Xl2BLYdkR3dj9nF1gnOZ6d372BPS+0eS5yvEssPJ7G7udMj/KR
Y2BbG//+xNp+Ujme5xQUDiLm9VFBcsTk9d7Cnm9aP145Jl3b1o+9zvWoKDq+
ZSdXDyDmeQdxchwJuJ/Eng/cvyNJjomtu/bvRXyP95/KMXNzox0ZxNzPo5cc
uyozahmv5v2oclw4GhjZm1if6VGZcqy2OjKXHR+vj8qSw3DRhuIhxNzvQy7H
Od33A1XE7Xm/qhy7G2mOjyLm9VHD5ShY0bhgCrE2r0YO34BrZ/KIU5geNU6O
/Si2W0ms7Wel87nAtXwLMfcHmSqH0RafxgeJtX7Ccnj93OB4hp1vpkfNlWPp
J0+bq8Taflc5+urutLpFzOujCuTYUfQq7C4737z/lY7Pc+Pz28Rcjyqi42+w
uFcF8U3eDytH08bHM88Scz1qnRwNP5lLDrDzzftj5XAOH+y+gZjrUdvo97m7
+zcb7/15v6wcP+Pu9Z9MfJrpUXvlmJN5ZjD7fbgedVCO02fTLNj54fVRR+Vw
cBvvEM/ON++nlWNVouWiYPb8ZnrUGTmSjd418iHW9tfKkW76XtOJ2IrpUZfp
/Rw+xLVn55v328qx3eaKmj3/2XBYdVMOlzWZs53Z85v338oRuzg/pSUx9zN5
IMfNAJuFzYl1eT+uHFWh/iZNidlyZPtzOl83Muay67+M9+fS+9sWvWtA3JHp
Ue/l+NMloJbNl3h91Cc5XipnT7Qm5nrUNzm6vNqVZMHON+/fleNAeU2IMbu+
2Q3lD72/R4BKj5jrURIF/k31NflL9x/er2eggLe9/7KfxM95f68C3f1WrWXM
+/XMFQiO3L3tHzGvj7JSYM2cK96m9H7cz7eeAosTwi6z76Pt/1Vg0OdR77oR
8369JgqMtq3fk10/XrwfWIFrl1OrFhDzvB8nBWbNuT31HLu+eX+wAmXH3KL+
suubTSDaKrD52vsenjR/4HpURwWivPb1G0TM9ahOClxPaXIkn1jbP6xA73WH
E3cTcz3KRwH3U2UNzhNzfzs/Bdq1+zH/BjGvjwpWIH5picsd4ga8v1iB1fut
424R8369aAWadV+TU0HM+/XiFbhyd53JJWI/pkclK7A9QDGyjFib36TAqTax
7dnn1WFySG8F/I4PCC4nzub9yApYm1zPeUjM66MGKZA0b47zV2KuR0kVcK4Y
v9dKR9CjFAqsTS6c3llH8M/TKPBm9bl/mTpCfdQIBep1/TWRrYcO8/5lBQJL
Wige6gh+/uMVaDCpJI+tz7geNVmBWOdDEUxf4PVR0xRwlbhkXZYIetQsev/J
a3a10BX69ebR79v4xScNsRXvd1bACZs+HhX1qMUKOPReP/KfqEctU8D81eIE
Tz3BT2alAsfGz2+RTlzE+6EV6DfJ6r5aT/A7Xq/A3vE/4sfpCXrUZgUmGDgm
jyc+zfSo7QpMWivfO0JP0KN2KTDuzS4M0RPqo/bR+R1Ufi5RT9CjDimQuX61
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
Q4pa6EiE/scSFYJ31Txn819ev7+a7h/rm5rEEnO9b60KiesqJwyTiP4SKtia
f+xSwPbvmP63UYV2Po6tdkpEvwkVyhd1787239j2WvxW+n5D/2bdkoj+EyoE
dG6/+oFEqFf7T4UzvdKi2X4Kn9/uUqHoTqP91yVCP+Ue+v/9lSvOiPuv+2j8
Gf0s3S0R6tkOqDDu/oPHxRIhD/CQCob+b0pnE1cyPfEIjd/Q3CZsPq/1r6Dx
/8/sUJZEqHc7TsdjN+5mb4kwPz5J4/lo3e0pEsGf/7QKG84skLD9Ub5/e1aF
pf+uz42RCPVwZSr86rbKku2P8vnzBRXUEWUhIcSDmB55SYU9f+0++UpE/wsV
spwzLniy5zvTJ8vp9zsVXd+JeBT3w6D7U0FPD2uJkO97Q4Wtc+79Y8/re9wf
g87fUofeb4jnMP3yDj0Pts5of1fcD65UYfuegUmXiNnlNfY+3d9Xm+88I+4P
P1QhbXBly3PEXN98rMLlLUWXK4j1uZ8Gfb5uw7KnxGw6lftMBdW+mdk/iQdz
fw36vWzbWtrQ8dkz/fMV/f6DYeEm7ie/UaH2l84x9n25HvpOhVFNtuZEi/vL
1SrcqT9hIdtf5vV6H1XYJs9JYuON+y99VmH32IX/BUgEv7ivKgy5m5/bUSLm
rdD9vUHHbY0lQn9pLV3fl9ubGYn70T9VeDQvckKNjpB38FuFiR+CnrPfS5vP
osKAKZWNXxEr2HRMR42zA8zrfWT7WdzPQ43bm7/8YdcH11v11Rhd+6I+26/W
5rmosfQt1rhLhHpAIzUat8x4HCUR/T7UeOMzv+5gYq7HmhFXeqnHSET/DzX0
l24JmkFcywRLSzVm7y5TsfHK+y+s1Zh2WzlwKjHXa23VyIzW98qRiHkxahT1
e/2Tze+4fttAjcL0yWVsP1/N/ULUqJjsvsdZIvS7NlZjd8te13Ulgp9nUzW2
T8vsxuoT2PJjX3M1pvuh/h4dwZ/KQY2OjVq9YvuBr5ne66jGS+fngWw9vZT7
i6jxKSfotJ+OUI/ookZeC5s/DjrC+qW1GrqdG05j85n/mB7cRo1ZFx1qftD9
ja9n2qmR9fnnU7afx+sVO6jxvVLTtobtx3E/EjWqHIddkugI9YueajydXS2x
0RH9SdQ4d7HCgu0n8nz0LmoElZh7dtMR/UrUcD6TvytSR/D3666GS03UxVQd
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
9vzS5vMkw2r9zjNsvc39JhYm43Wz71lqYu4vsTwZcS6GhszvX5u3k4zWkySy
fmZivk4yftSmOPU1E/xLdyfDp/fY0v7Ew3h+TjI9zx6fHcLW51yvToanW805
9v48r/kifV779jHjzMQ8nGQ49fzzitVTzOb5N8k4m6ejs8xMyF9+moyg2ryc
TWas3ofl2yRDfdXT6gDxA65vJ8MlQTOP5ZWs5fk1ycDxq/9dNhPyk/VSkJdw
3Zvpxdp8mhR8CNN7y/Tg71z/ToHH4+dTWd6bNn8mBcnn/3Rm76/Vw1PwOa/0
IdMPwnm+TAr2dVlxKtdMyDf2SEHmSf0O7Ptr82NSsKu9VO5jJubF0PtN9jlj
RzyI58OkwPTIh4kfTMU8mBTMevjpdRmbP/L8lxQ8e5nrwurNtHp6CgrOtXg8
yVTMd0mBPMtuYX82f+T6egp8Dm49FUxsyPNbUvBgdfuv7YjLud6egibWb9Y3
Ii7g+SwpKP/s3JvNdzO4/p6CCx06rtAnbs7zV1KwYtjuxRJTIf93bQq+pN2O
1TMV8n63pqCdt/MkIzZ/5Pp8Cg5LXR/WJe7G81NSIAmRNm1ArM/1evp9nDW1
zUyFvN5LKYjqd8HB+f/1OSlwif2dwOrNknj+SQq+lq2bx+bf2ryTFLQu3Gfg
yOaPPN8kBY8MPbo0NhXzTFLg1L/ZOlbPxv0if6fA+tOEi+z7uHO9PxV7/6a2
ZvVLPC/XLBUuN7fjBVsvcP0/FeOOTZ3L6p0m8/yRVAz8F772NFsv8P2AVHrO
1ZXuIbbi+SKpGO4bfWcdMfdv9ExFyIKJr5YSr+T5IanIft18Ub6J0B8bmIr9
ik035hJzP8bIVOhGLloz30SsL0qF45aMn0tMxPyPVLQakxfK1jPavI9UVJc2
vXWY1WfxfI9UzPE37nfdRMzzSEXDS/EbWB4G90scl4pNTn8H6ZqK+w2pSGhg
0ZvVa/Xl+RypcJVPDXcgbsn3H1IR9H7QG3Y+XvH8jVQEm/fb2eL/eRupMPtY
/tqG1VfxfI1U6AwsXfiPPo/7F+5NxczOnXaw31OP52ekwsa7W/eLJuJ+RSqM
Old23cHq63g+Rioq/tlvWWQi5mGk4k6/OnPHEXO/wQepaP3rdyarf33C9zNS
0W/jsfJeJkLe6vtUlNYb8D7BRMyzSMWkD5L7kSZifkUqnj/ZdSSE+CfPq0iD
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
49ulH6C/J5dKYX2TmG+C5DB/+jb4op9bTyBHoVpD+vF8IfLNm8sREV7vI/tp
AoW+QI7FU45bWD8l9Cpt5ah45GhZ9pOI/V0HOVr+PdGO9WiufE7CXZW10vzc
+gM5HPualuXvLyryN+XwrbvbvInvp9AjyPG008ZNPB+JfPPBciyYkurg59+l
T5Dj8bBDEaxfcuVn0vEnNfBmf41LryDHxz73Ct+XSXy7UY6CXeVFdhC+IPQL
ckz67VjP/iYx3znlqNmwz0vWG7nyLuWwNFh1qT/rLUW+pRyfEmfc70h4kNA3
yNF7b68pbWSSP2Us3d++Zfq1krn1DvR9HyvsA2FXPqUcDwvOqRUqc+sf5Hgb
uqEOf78rf1KO0PI9Kulkkp5wvhxdPmuLsX7VlS8px+pSU7Nmytz6CBpv3/pf
4vXndZEfKYfsriaO+z+78iLlGFOpTy6u57nyIeXwqHmwV4bMnQcpR/vQJopf
hKNE/qMchlKevfl5Pyn0FDRegi594/VTVZHvKMcJ3bu2fn7uPEc5rs/e0lTG
71+R3yineV5xlet/It/8LF2vgLB8OTKp316aHPfrv739SebWX8gRMiOq1UOZ
lG9+TY6GXxqOOSuT8s1v0fdNGFNsq0yqJ9yj6xc29jT7z1x5inLMjx/VM4Zw
XpGfKEebXNvilISNQq9Bz8/H/gV7ytz5iHJE9t13kflwl35Djlvwj+b7N1Pk
H9L41J1p2l4m9dv7Kccyv/up/Hkx/2fK8a/SiPYqmdvPIodx5uk0/n3xPsil
wKvg19F8fCLfPK8CI6v6GDbL3PmECjSs1u/QSZnb/6JA0aCPU2/JpPdFYQWW
J46s85Lvt9CDKFBpy4xzvD51inxBBfRT2xzi63db6EMUaJZrqeqtTMo3r6TA
gC8pFfh6LhV6EQVmN0/ulkrYg/XqNRXYcMjWZYPMrR+h7xsYFD1GJuWbN1Ag
p0Ptr11l7rw/BWoUHPKW9ciufD8FCi3s0uuOr7Sfb63AnaN/Syz3def3KbBJ
c76ewded16fAFkvmZOajS4p8PgXy7r9RooKvW39Cn6+yPK0Q8+kif4/OX6Wu
U5KwCODtr0Bm574NuD4u6imDFbgRr9T09nXn6SlQdVNib+bzRb89pQJ3TVvG
s75O9NvTKvDMmD6Fj1fo7Y0K1O+a8eGfr1u/osCuPc9alHPXX5wK5D8/PbSO
TOIPohWYv6VgRd4PHRL5dgoYc6mLcj9lkW8+RoHFlnHDq8mkfPNEBRrMsixm
v6VL76JAaMEy10u46zVTFXibNGlIcZlb/6JA3a07L/Pv+/P7cg79/dWFWtxv
WfTbW6BARZ/vyV1k0vtzCV2fY/GwyNz6GD7/cwV5vIn36WoFJtsrBbBfQPAT
6xWYtv/FyLsy6f26WYGsato6vP9x+ZsUSFZnt+PnuzqfwG4FJhnrp/D6YKrQ
0yhwbHpw9aK83uL37yEFFoxaV4Off5e+RgHV48uhefykfPNTCgxT1i3J/geh
701VoOzOpoE8XkW96AKNj+ER2VwvdvmnFLBHFm7I+n0hqL2uwNWBY/fz/kvw
H7cVUBqP+uei78/PJ3xfgYsPZpbn97dLn6PA4T+n0hr7Sf32nitwzbtSJq8f
BT+SocChQcNmxxKez+/3dwqUrz8phte7Lv2OAmtuB85Lc7/vvykwrkLlNV95
fSv0PAq0/jDzfEl/yR/xV4EXmyd7/ufv1vcoEH+2eqcB/tJ6ILcSVTdMXmTy
d+t9lHh2KPXLMH+pXuWjxDlzTteh/m79D/29Suh6NWHRb6+IEn9G3SrDfhSh
Zy6hxPJdFYPL8v6AXxdllCjc4MDVd3R8y4Q+SIk12lqjD/hJ9a3KSsw/lNeT
35ei3141Jeosveuv9JP8GrWU2DukgSLEz60fUsK6dcXm/wgn8YTYUAlT57O3
2F/7SeiJlLiZvHY6+0dEPew/JTas6bNjjJ9bX6REeqtXJdcSLs0FgnZKdAsf
spbf/y69kRI+Hws2fEr4MdfLuijh+fTGcj5+l/5IieqVb555wvsRrp/1UUL7
qsfaw35uPZISw82Bh3j9JeppYfT5/wavZT24S5+kRMrt357sF+by0UWVEm3O
5bOx/3ie0Csp0Xn29Cl9Cf/heptJifGH5n7l58/lj1NiyfmKHd5zf3iuvw1R
4vKeKdXuEq4s9ExK7GozOPweYdFvL1aJ6BX6rW993fom+v4C019wP3qRp56o
xMBdyRcqu/mliUpcvDK6drBMqtdNVeLG/Myrg9180wwllrb8OFYvk+p3c5Q4
W7v6On7/i/zzBUqc3NIjbxjhFVzPW6LEyGa5CvD6I+cf/VtB39/lYRGeL3h4
5l5D90c5elppNz+1QYkPv8fe8ZZJ9b4tSiROmRThxfO50E8p0WtO7QQ/wkKO
skeJ/qu2Vq4hc+uplCgw9bJ/b8Iib/ywEj+afZsyTub2Ayqxc86Ye6wn4emw
wmklziTebvfNzW+dU+L8l0jfqn6Sf/6iEu3OxsSwfl/wXVeVuPBm6lUj32+u
H95Qovv9WweY/xH81x26n0MKG3h/J/rtPVDCGHBjKO83XX5DJdb32jmE1/ui
394Ler6Gtcni9f5fodei6/u3yFpeD4q87vdK/Ox1Og+PF5d+S4l1GS933pFJ
edzflUhoNdRyUSbp7X8r0aJs7uRzMqkemaXE1MhpLy7I3PouFYIeF0jj9ZWo
T+ZR4cGIYRlPZZJ/O78KXfKeT+f5TORl+6rQQJlTjtdXLv2XCqE6fwXPry25
fllUhTLROiXrA1YJPZgKVr9muxsQzs31zLL0/fUDSzDfJfrtBaiQ8/RyL97f
ifpmoAq2Kverst6mjtCLqXAu590gng9ncr2ztgrJjjXbeH/u8leqMD9h/esB
hPty/bORCqamHUvyfu6A0JOpMGnHrPjuflI9tKUKE/3b7+T90SihL1Mhc3iZ
FjxfiDzp9ip67m9uCvZz681UWP2mzhy+PyIvuqsKHi2ej+Xvc/k3VahbbleB
KMJiO9iXrk/Cy8/MN1wVejQV7ib8y+D9nui3F66CIm/BO/v93H5PFfL8rLrp
np9UX1UTbta34x++30KvpsKS3esXFvKX8r7MKuTrGTSR/Toin9lO5/fdI6sS
67m4/jpUhQEB+TYW95f8DiNU2L8rRcX+jm5ccBmlwvNKqjTen24X+jYVyr6O
il3D+xeuz46j843xKMbjWfgjJqmwt/vCxuynuMf12mkqzHw0Mpb1WKLf3kwV
7Cv/jptLeBXXb+eq8GReS1/OZ8gj9HAqqN8savGL6/e8QV2qwqUerfuxvsKl
j1Pha1zfVayPEHnGa1RYXj2fmtdXwn+xQYWVeRKevfSpjW+8gdyiQtrZ94p9
PhJfuUOFj5WHVeN8C1H/3aPCf9+OrEnk+rfQ06kQM69HNufHjOYH5jCNp6Ra
CWN93H5YFXpE9YnnvJV2XFA4rULjpHOdV/hI/OY5uh6Lp9Xf5SPViy/R9fRe
lcD6SMF3ptPxyvNNv856Aa4f31RhU1xb00Mfif+8q0L2oWvtn7vryQ9VuH/9
qE+Gj1ufp8KCuAI73xIW/fZeqpDgSKnymfBJoddT4bHu/OA/PpLf7YMKnqVC
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
pW4=
    "], {
     {GrayLevel[0.5], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl3FMU4Ey3LdD+2rZt27Zt27Zt27Zt27Zt2/z7zj73YY7kMSPJSiWpXTtB
w3YV2wYMECDAf4yLGCBA8RABApSgJKUoTRnKUo7yVKAilahMFapSjerUoCa1
qE0d6lKP+jSgIY1oTBOa0ozmtKAlrWhNG9rSjvZ0oCOd6EwXutKN7vSgJ73o
TR/60o/+DGAggxjMEIYyjOGMYCSjGM0YxjKO8UxgIpOYzBSmMo3pzGAms5jN
HOYyj/ksYCGLWMwSlrKM5axgJatYzRrWso71bGAjm9jMFrayje3sYCe72M0e
9rKP/RzgIIc4zBGOcozjnOAkpzjNGc5yjvNc4CKXuMwVrnKN69zgJre4zR3u
co/7POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8o3v/OAnv/jNH/7H
XwKEdK8TkEAEJghBCUZwQhCSUIQmDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5x
iUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJ
R34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRnVqUJNa1KYOdalH
fRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFOdKYLXelGd3rQk170pg996Ud/
BjCQQQxmCEMZxnBGMJJRjGYMYxnHeCYwkUlMZgpTmcZ0ZjCTWcxmDnOZx3wW
sJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe9nHfg5w
kEMc5ghHOcZxTnCSU5zmDGc5x3kucJFLXOYKV7nGdW5wk1vc5g53ucd9HvCQ
RzzmCU95xnNe8JJXvOYNb3nHez7wkU985gtf+cZ3fvCTX/zmD//jLwFCyT8B
CURgghCUYAQnBCEJRWjCEJZwhCcCEYlEZKIQlWhEJwYxiUVs4hCXeMQnAQlJ
RGKSkJRkJCcFKUlFatKQlnSkJwMZyURmspCVbGQnBznJRW7ykJd85KcABSlE
YYpQlGIUpwQlKUVpylCWcpSnAhWpRGWqUJVqVKcGNalFbepQl3rUpwENaURj
mtCUZjSnBS1pRWva0JZ2tKcDHelEZ7rQlW50pwc96UVv+tCXfvRnAAMZxGCG
MJRhDGcEIxnFaMYwlnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nEYpaw
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
pjGVKUxmEhOZwHjGMZYxjGYUIxnBcIYxlCEMZhADGUB/+tGXPvSmFz3pQXe6
0ZUudKYTHelAe9rRlja0phUtaUFzmtGUJjSmEQ1pQH3qUZc61KYWNalBdapR
lSpUphIVqUB5ylGWMpSmFCUpQXGKUZQiFKYQBSlAfvKRlzzkJhc5yUF2spGV
LGQmExnJQHrSkZY0pCYVKUlBcpKRlCQkJhEJSUB84hGXOMQmFjGJQXSiEZUo
RCYSEYlAeMIRljCEJhQhCUFwghGUIAQmEAH5jwD8DSb//OE3v/jJD77zja98
4TOf+MgH3vOOt7zhNa94yQue84ynPOExj3jIA+5zj7vc4Ta3uMkNrnONq1zh
Mpe4yAXOc46znOE0pzjJCY5zjKMc4TCHOMgB9rOPvexhN7vYyQ62s42tbGEz
m9jIBtazjrWsYTWrWMkKlrOMpSxhMYtYyALmM4+5zGE2s5jJDKYzjalMYTKT
mMgExjOOsYxhNKMYyQiGM4yhDGEwgxjIAPrTj770oTe96EkPutONrnShM53o
SAfa0462tKE1rWhJC5rTjKY0oTGNaEgD6lOPutShNrWoSQ2qU42qVKEylahI
BcpTjrKUoTSlKEkJilOMohShMIUoSAHyk4+85CE3uchJDrKTjaxkITOZyEgG
0pOOtKQhNalISQqSk4ykJCExiUhIAuITj7jEITaxiEkMohONqEQhMpGISATC
E46whCE0oQhJCIITjKAEITCBCMh/BOBvUPnnD7/5xU9+8J1vfOULn/nERz7w
nne85Q2vecVLXvCcZzzlCY95xEMecJ973OUOt7nFTW5wnWtc5QqXucRFLnCe
c5zlDKc5xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbWxlC5vZxEY2sJ51
rGUNq1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGM
ZQyjGcVIRjCcYQxlCIMZxEAG0J9+9KUPvelFT3rQnW50pQud6URHOtCedrSl
Da1pRUta0JxmNKUJjWlEQxpQn3rUpQ61qUVNalCdalSlCpWpREUqUJ5ylKUM
pSlFSUpQnGIUpQiFKURBCpCffOQlD7nJRU5ykJ1sZCULmclERjKQnnSkJQ2p
SUVKUpCcZCQlCYlJREISEJ94xCUOsYlFTGIQnWhEJQqRiUREIhCecIQlDKEJ
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
v6m+f7/7//3y+/fZ/+/V/9/w/3/9o/4fHO3FNg==
        "]]]}, {{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], Thickness[0.0001], JoinForm["Round"], 
       LineBox[CompressedData["
1:eJwV1FVgEAQUBdDBGIyGjRwxRoxQQLoFAekcpZQ0SIOUhKBIKNLd3R0ijZR0
S3cjHSodZx/nvt/7c19Es05RHWMEBARkF9E3JoHEIojYxCGYuMQjPglISCIS
k4SkhBBKMpKTgpSkIjVhpCEt6UhPOBmIICOZyEwWIslKtuiO5OATPiUnucjN
Z+QhL/nITwEKUojCFKEoxShOCT6nJKX4gtKUoSxfUo7yVKAilahMFapSjerU
oCZR1KI2dahLPb7ia+rTgIY0ojHf0ISmNKM5LWhJK1rThm9pSzva04GOdKIz
XejKd3SjOz3oSS++pzd96Es/fqA/A/iRnxjIzwxiMEMYyi/8yjB+YzgjGMko
RjOGsYxjPBOYyCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStYySpW
s4a1rON31vMHG9jIJjazha1sYzt/soOd7GI3e/iLvexjPwc4yCEOc4SjHOM4
JzjJ35ziNGc4yznOc4GLXOIyV7jKNa5zg5vc4jZ3uMs/3OM+D3jIIx7zhKc8
4zn/8h//84KXvOI1b3jLO97zgejxxyAmgcQiiNjEIZi4xCM+CUhIIhKThKSE
EEoykpOClKQiNWGkIS3pSE84GYggI5nITBYiyUo2hnsuHwHzAoVa
        "],
        VertexColors->Automatic], LineBox[CompressedData["
1:eJwl2UOwIAqQRcE3bdu2bdu2bdv6bdu2bdu2bdvuyYlZ5OJuK+KsKmGj9pXa
/U9AQECCEAEBYyMFBKQ0UpGaNKQlHenJQEYykZksZCUb2clBTnKRmzzkJR/5
KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNalGbOtSlHvVp
QEMa0ZgmNKUZzWlBS1rRmja05f8O1J4OdKQTnelCV7rRnR70pBe96UNf+vEf
/RnAQAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7z
WcBCFrGYJSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5
wEEOcZgjHOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nA
Qx7xmCc85RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/85R8BgQIC
/odABCYIQQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQ
kEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+ClCQ
QhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWpR30a0JBG
NKYJTWlGc1rQkla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYPfenHf/RnAAMZ
xGCGMJRhDGcEIxnFaMYwlnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nE
YpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAHOcRh
jnCUYxznBCc5xWnOcJZznOcCF7nEZa5wlWtc5wY3ucVt7nCXe9znAQ95xGOe
8JRnPOcFL3nFa97wlne85wMf+cRnvvCVb3znBz/5xW/+8Jd/BATWP4EITBCC
EozghCAkoQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAhiUhMEpKS
jOSkICWpSE0a0pKO9GQgI5nITBayko3s5CAnuchNHvKSj/wUoCCFKEwRilKM
4pSgJKUoTRnKUo7yVKAilahMFapSjerUoCa1qE0d6lKP+jSgIY1oTBOa0ozm
tKAlrWhNG9rSjvZ0oCOd6EwXutKN7vSgJ73oTR/60o//6M8ABjKIwQxhKMMY
zghGMorRjGEs4xjPBCYyiclMYSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jO
ClayitWsYS3rWM8GNrKJzWxhK9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4J
TnKK05zhLOc4zwUuconLXOEq17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte
8orXvOEt73jPBz7yic984Svf+M4PfvKL3/zhL/8ICKJ/AhGYIAQlGMEJQUhC
EZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKR
mjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGa
MpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta0Zo2
tKUd7elARzrRmS50pRvd6UFPetGbPvSlH//RnwEMZBCDGcJQhjGcEYxkFKMZ
w1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nD
Wtaxng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZ
znGeC1zkEpe5wlWucZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve
8Z4PfOQTn/nCV77xnR/85Be/+cNf/hEQVP8EIjBBCEowghOCkIQiNGEISzjC
E4GIRCIyUYhKNKITg5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1aUhLOtKT
gYxkIjNZyEo2spODnOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOB
ilSiMlWoSjWqU4Oa1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GO
dKIzXehKN7rTg570ojd96Es//qM/AxjIIAYzhKEMYzgjGMkoRjOGsYxjPBOY
yCQmM4WpTGM6M5jJLGYzh7nMYz4LWMgiFrOEpSxjOStYySpWs4a1rGM9G9jI
Jjazha1sYzs72MkudrOHvexjPwc4yCEOc4SjHOM4JzjJKU5zhrOc4zwXuMgl
LnOFq1zjOje4yS1uc4e73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+
84WvfOM7P/jJL37zh7/8IyCY/glEYIIQlGAEJwQhCUVowhCWcIQnAhGJRGSi
EJVoRCcGMYlFbOIQl3jEJwEJSURikpCUZCQnBSlJRWrSkJZ0pCcDGclEZrKQ
lWxkJwc5yUVu8pCXfOSnAAUpRGGKUJRiFKcEJSlFacpQlnKUpwIVqURlqlCV
alSnBjWpRW3qUJd61KcBDWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVu
dKcHPelFb/rQl378R38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZ
xnRmMJNZzGYOc5nHfBawkEUsZglLWcZyVrCSVaxmDWtZx3o2sJFNbGYLW9nG
dnawk13sZg972cd+DnCQQxzmCEc5xnFOcJJTnOYMZznHeS5wkUtc5gpXucZ1
bnCTW9zmDne5x30e8JBHPOYJT3nGc17wkle85g1vecd7PvCRT3zmC1/5xnd+
8JNf/OYPf/lHQHD9E4jABCEowQhOCEISitCEISzhCE8EIhKJyEQhKtGITgxi
EovYxCEu8YhPAhKSiMQkISnJSE4KUpKK1KQhLelITwYykonMZCEr2chODnKS
i9zkIS/5yE8BClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpUoSrVqE4NalKL
2tShLvWoTwMa0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93oTg960ove
9KEv/fiP/gxgIIMYzBCGMozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOY
zRzmMo/5LGAhi1jMEpayjOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GAnu9jN
Hvayj/0c4CCHOMwRjnKM45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d
7nKP+zzgIY94zBOe8oznvOAlr3jNG97yjvd84COf+MwXvvKN7/zgJ7/4zR/+
8o+AEPonEIEJQlCCEZwQhCQUoQlDWMIRnghEJBKRiUJUohGdGMQkFrGJQ1zi
ET/E///4EpKIxCQhKclITgpSkorUpCEt6UhPBjKSicxkISvZyE4OcpKL3OQh
L/nITwEKUojCFKEoxShOCUpSitKUoSzlKE8FKlKJylShKtWoTg1qUova1KEu
9ahPAxrSiMY0oSnNaE4LWtKK1rShLe1oTwc60onOdKEr3ehOD3rSi970oS/9
+I/+DGAggxjMEIYyjOGMYCSjGM0YxjKO8UxgIpOYzBSmMo3pzGAms5jNHOYy
j/ksYCGLWMwSlrKM5axgJatYzRrWso71bGAjm9jMFrayje3sYCe72M0e9rKP
/RzgIIc4zBGOcozjnOAkpzjNGc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7
POAhj3jME57yjOe84CWveM0b3vKO93zgI5/4zBe+8o3v/OAnv/jNH/7yj4CQ
+icQgQlCUIIRnBCEJBShCUNYwhGeCEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQk
JBGJSUJSkpGcFKQkFalJQ1rSkZ4MZCQTmclCVrKRnRzkJBe5yUNe8pGfAhSk
EIUpQlGKUZz/BW7jK98=
        "],
        VertexColors->Automatic]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.0055000000000000005`], Thickness[0.0001], JoinForm["Round"], 
       LineBox[CompressedData["
1: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

        "],
        VertexColors->Automatic], LineBox[CompressedData["
1:eJwV1WMDFQYAAMBXLS3btm171XLLtm3bXF42l23btm0bu32433CJGrSt2CZI
IBBIFzQQGBs5EKgfMRBoQEMa0ZgmNKUZzWlBS1rRmja0pR3t6UBHOtGZLnSl
G93pQU960Zs+9KUf/RnAQAYxmCEMZRjDGcFIRjGaMYxlHOP5mwlMZBKTmcJU
pvEP05nBTGYxmznMZR7zWcBCFrGYJSxlGctZwb+sZBWrWcNa1rGeDWxkE5vZ
wla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nC
Va5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJX
vvGdH/zkF4FIgUAQghKM3whOCEISitD8ThjCEo7wRCAikYhMFKISjejEICax
iE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwWspKN7OQgJ7nI
TR7yko/8FKAghShMEYpSjOKU4A9KUorS/EkZylKO8lSgIpWozF9UoSrVqE4N
alKL2tShLvWoTwMa0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93oTg96
0ove9KEv/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMYz99MYCKTmMwUpjKNf5jO
DGYyi9nMYS7zmM8CFrKIxSxhKctYzgr+ZSWrWM0a1rKO9WxgI5vYzBa2so3t
7GAnu9jNHvayj/0c4CCHOMwRjnKM45zgJKc4zRnOco7zXOAil7jMFa5yjevc
4Ca3uM0d7nKP+zzgIY94zBOe8oznvOAlr3jNG97yjvd84COf+MwXvvKN7/zg
J78I+CcIQQnGbwQnBCEJRWh+JwxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlH
fBKQkEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95yUd+
ClCQQhSmCEUpRnFK8AclKUVp/qQMZSlHeSpQkUpU5i+qUJVqVKcGNalFbepQ
l3r//08DGtKIxjShKc1oTgta0orWtKEt7WhPBzrSic50oSvd6E4PetKL3vSh
L/3ozwAGMojBDGEowxjOCEYyiv8AKHo6yw==
        "],
        VertexColors->Automatic]}}},
    VertexColors->{{
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4473684210526316, 0]}, {
       RGBColor[1, 0.4473684210526316, 0]}, {
       RGBColor[1, 0.4473684210526316, 0]}, {
       RGBColor[1, 0.4473684210526316, 0]}, {
       RGBColor[1, 0.4473684210526316, 0]}, {
       RGBColor[1, 0.4473684210526316, 0]}, {
       RGBColor[1, 0.4473684210526316, 0]}, {
       RGBColor[1, 0.4473684210526316, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.40789473684210525`, 0]}, {
       RGBColor[1, 0.40789473684210525`, 0]}, {
       RGBColor[1, 0.40789473684210525`, 0]}, {
       RGBColor[1, 0.40789473684210525`, 0]}, {
       RGBColor[1, 0.40789473684210525`, 0]}, {
       RGBColor[1, 0.40789473684210525`, 0]}, {
       RGBColor[1, 0.40789473684210525`, 0]}, {
       RGBColor[1, 0.40789473684210525`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.3815789473684211, 0]}, {
       RGBColor[1, 0.3815789473684211, 0]}, {
       RGBColor[1, 0.3815789473684211, 0]}, {
       RGBColor[1, 0.3815789473684211, 0]}, {
       RGBColor[1, 0.3815789473684211, 0]}, {
       RGBColor[1, 0.3815789473684211, 0]}, {
       RGBColor[1, 0.3815789473684211, 0]}, {
       RGBColor[1, 0.3815789473684211, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.32894736842105265`, 0]}, {
       RGBColor[1, 0.32894736842105265`, 0]}, {
       RGBColor[1, 0.32894736842105265`, 0]}, {
       RGBColor[1, 0.32894736842105265`, 0]}, {
       RGBColor[1, 0.32894736842105265`, 0]}, {
       RGBColor[1, 0.32894736842105265`, 0]}, {
       RGBColor[1, 0.32894736842105265`, 0]}, {
       RGBColor[1, 0.32894736842105265`, 0]}, {
       RGBColor[1, 0.3026315789473684, 0]}, {
       RGBColor[1, 0.3026315789473684, 0]}, {
       RGBColor[1, 0.3026315789473684, 0]}, {
       RGBColor[1, 0.3026315789473684, 0]}, {
       RGBColor[1, 0.3026315789473684, 0]}, {
       RGBColor[1, 0.3026315789473684, 0]}, {
       RGBColor[1, 0.3026315789473684, 0]}, {
       RGBColor[1, 0.3026315789473684, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2368421052631579, 0]}, {
       RGBColor[1, 0.2368421052631579, 0]}, {
       RGBColor[1, 0.2368421052631579, 0]}, {
       RGBColor[1, 0.2368421052631579, 0]}, {
       RGBColor[1, 0.2368421052631579, 0]}, {
       RGBColor[1, 0.2368421052631579, 0]}, {
       RGBColor[1, 0.2368421052631579, 0]}, {
       RGBColor[1, 0.2368421052631579, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.13157894736842107`, 0]}, {
       RGBColor[1, 0.13157894736842107`, 0]}, {
       RGBColor[1, 0.13157894736842107`, 0]}, {
       RGBColor[1, 0.13157894736842107`, 0]}, {
       RGBColor[1, 0.13157894736842107`, 0]}, {
       RGBColor[1, 0.13157894736842107`, 0]}, {
       RGBColor[1, 0.13157894736842107`, 0]}, {
       RGBColor[1, 0.13157894736842107`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.06578947368421051, 0]}, {
       RGBColor[1, 0.06578947368421051, 0]}, {
       RGBColor[1, 0.06578947368421051, 0]}, {
       RGBColor[1, 0.06578947368421051, 0]}, {
       RGBColor[1, 0.06578947368421051, 0]}, {
       RGBColor[1, 0.06578947368421051, 0]}, {
       RGBColor[1, 0.06578947368421051, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.11842105263157893`, 0]}, {
       RGBColor[1, 0.11842105263157893`, 0]}, {
       RGBColor[1, 0.11842105263157893`, 0]}, {
       RGBColor[1, 0.11842105263157893`, 0]}, {
       RGBColor[1, 0.11842105263157893`, 0]}, {
       RGBColor[1, 0.11842105263157893`, 0]}, {
       RGBColor[1, 0.11842105263157893`, 0]}, {
       RGBColor[1, 0.11842105263157893`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.17105263157894735`, 0]}, {
       RGBColor[1, 0.17105263157894735`, 0]}, {
       RGBColor[1, 0.17105263157894735`, 0]}, {
       RGBColor[1, 0.17105263157894735`, 0]}, {
       RGBColor[1, 0.17105263157894735`, 0]}, {
       RGBColor[1, 0.17105263157894735`, 0]}, {
       RGBColor[1, 0.17105263157894735`, 0]}, {
       RGBColor[1, 0.17105263157894735`, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.22368421052631576`, 0]}, {
       RGBColor[1, 0.22368421052631576`, 0]}, {
       RGBColor[1, 0.22368421052631576`, 0]}, {
       RGBColor[1, 0.22368421052631576`, 0]}, {
       RGBColor[1, 0.22368421052631576`, 0]}, {
       RGBColor[1, 0.22368421052631576`, 0]}, {
       RGBColor[1, 0.22368421052631576`, 0]}, {
       RGBColor[1, 0.22368421052631576`, 0]}, {
       RGBColor[1, 0.25, 0]}, {
       RGBColor[1, 0.25, 0]}, {
       RGBColor[1, 0.25, 0]}, {
       RGBColor[1, 0.25, 0]}, {
       RGBColor[1, 0.25, 0]}, {
       RGBColor[1, 0.25, 0]}, {
       RGBColor[1, 0.25, 0]}, {
       RGBColor[1, 0.25, 0]}, {
       RGBColor[1, 0.26315789473684215`, 0]}, {
       RGBColor[1, 0.26315789473684215`, 0]}, {
       RGBColor[1, 0.26315789473684215`, 0]}, {
       RGBColor[1, 0.26315789473684215`, 0]}, {
       RGBColor[1, 0.26315789473684215`, 0]}, {
       RGBColor[1, 0.26315789473684215`, 0]}, {
       RGBColor[1, 0.26315789473684215`, 0]}, {
       RGBColor[1, 0.26315789473684215`, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2894736842105263, 0]}, {
       RGBColor[1, 0.2894736842105263, 0]}, {
       RGBColor[1, 0.2894736842105263, 0]}, {
       RGBColor[1, 0.2894736842105263, 0]}, {
       RGBColor[1, 0.2894736842105263, 0]}, {
       RGBColor[1, 0.2894736842105263, 0]}, {
       RGBColor[1, 0.2894736842105263, 0]}, {
       RGBColor[1, 0.2894736842105263, 0]}, {
       RGBColor[1, 0.3157894736842105, 0]}, {
       RGBColor[1, 0.3157894736842105, 0]}, {
       RGBColor[1, 0.3157894736842105, 0]}, {
       RGBColor[1, 0.3157894736842105, 0]}, {
       RGBColor[1, 0.3157894736842105, 0]}, {
       RGBColor[1, 0.3157894736842105, 0]}, {
       RGBColor[1, 0.3157894736842105, 0]}, {
       RGBColor[1, 0.3157894736842105, 0]}, {
       RGBColor[1, 0.35526315789473684`, 0]}, {
       RGBColor[1, 0.35526315789473684`, 0]}, {
       RGBColor[1, 0.35526315789473684`, 0]}, {
       RGBColor[1, 0.35526315789473684`, 0]}, {
       RGBColor[1, 0.35526315789473684`, 0]}, {
       RGBColor[1, 0.35526315789473684`, 0]}, {
       RGBColor[1, 0.35526315789473684`, 0]}, {
       RGBColor[1, 0.35526315789473684`, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
       RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
       RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
       RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
       RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
       RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
       RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
       RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
       RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
       RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
       RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
       RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
       RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
       RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
       RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
       RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
       RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
       RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
       RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
       RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
       RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
       RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
       RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
       RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
       RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
       RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
       RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
       RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
       RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
       RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
       RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
       RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
       RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
       RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
       RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
       RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
       RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
       RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
       RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
       RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
       RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
       RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
       RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
       RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
       RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
       RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
       RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
       RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
       RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
       RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.2]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.05]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.1]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.15]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.4]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.3]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.35]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.45]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       GrayLevel[0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5, 0.5, 0.5]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4473684210526316, 0]}, {
       RGBColor[1, 0.4473684210526316, 0]}, {
       RGBColor[1, 0.4473684210526316, 0]}, {
       RGBColor[1, 0.4473684210526316, 0]}, {
       RGBColor[1, 0.4473684210526316, 0]}, {
       RGBColor[1, 0.4473684210526316, 0]}, {
       RGBColor[1, 0.4473684210526316, 0]}, {
       RGBColor[1, 0.4473684210526316, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.40789473684210525`, 0]}, {
       RGBColor[1, 0.40789473684210525`, 0]}, {
       RGBColor[1, 0.40789473684210525`, 0]}, {
       RGBColor[1, 0.40789473684210525`, 0]}, {
       RGBColor[1, 0.40789473684210525`, 0]}, {
       RGBColor[1, 0.40789473684210525`, 0]}, {
       RGBColor[1, 0.40789473684210525`, 0]}, {
       RGBColor[1, 0.40789473684210525`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.3815789473684211, 0]}, {
       RGBColor[1, 0.3815789473684211, 0]}, {
       RGBColor[1, 0.3815789473684211, 0]}, {
       RGBColor[1, 0.3815789473684211, 0]}, {
       RGBColor[1, 0.3815789473684211, 0]}, {
       RGBColor[1, 0.3815789473684211, 0]}, {
       RGBColor[1, 0.3815789473684211, 0]}, {
       RGBColor[1, 0.3815789473684211, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.34210526315789475`, 0]}, {
       RGBColor[1, 0.32894736842105265`, 0]}, {
       RGBColor[1, 0.32894736842105265`, 0]}, {
       RGBColor[1, 0.32894736842105265`, 0]}, {
       RGBColor[1, 0.32894736842105265`, 0]}, {
       RGBColor[1, 0.32894736842105265`, 0]}, {
       RGBColor[1, 0.32894736842105265`, 0]}, {
       RGBColor[1, 0.32894736842105265`, 0]}, {
       RGBColor[1, 0.32894736842105265`, 0]}, {
       RGBColor[1, 0.3026315789473684, 0]}, {
       RGBColor[1, 0.3026315789473684, 0]}, {
       RGBColor[1, 0.3026315789473684, 0]}, {
       RGBColor[1, 0.3026315789473684, 0]}, {
       RGBColor[1, 0.3026315789473684, 0]}, {
       RGBColor[1, 0.3026315789473684, 0]}, {
       RGBColor[1, 0.3026315789473684, 0]}, {
       RGBColor[1, 0.3026315789473684, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2368421052631579, 0]}, {
       RGBColor[1, 0.2368421052631579, 0]}, {
       RGBColor[1, 0.2368421052631579, 0]}, {
       RGBColor[1, 0.2368421052631579, 0]}, {
       RGBColor[1, 0.2368421052631579, 0]}, {
       RGBColor[1, 0.2368421052631579, 0]}, {
       RGBColor[1, 0.2368421052631579, 0]}, {
       RGBColor[1, 0.2368421052631579, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.13157894736842107`, 0]}, {
       RGBColor[1, 0.13157894736842107`, 0]}, {
       RGBColor[1, 0.13157894736842107`, 0]}, {
       RGBColor[1, 0.13157894736842107`, 0]}, {
       RGBColor[1, 0.13157894736842107`, 0]}, {
       RGBColor[1, 0.13157894736842107`, 0]}, {
       RGBColor[1, 0.13157894736842107`, 0]}, {
       RGBColor[1, 0.13157894736842107`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.06578947368421051, 0]}, {
       RGBColor[1, 0.06578947368421051, 0]}, {
       RGBColor[1, 0.06578947368421051, 0]}, {
       RGBColor[1, 0.06578947368421051, 0]}, {
       RGBColor[1, 0.06578947368421051, 0]}, {
       RGBColor[1, 0.06578947368421051, 0]}, {
       RGBColor[1, 0.06578947368421051, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.03947368421052633, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.05263157894736842, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.07894736842105265, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.09210526315789475, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.10526315789473684`, 0]}, {
       RGBColor[1, 0.11842105263157893`, 0]}, {
       RGBColor[1, 0.11842105263157893`, 0]}, {
       RGBColor[1, 0.11842105263157893`, 0]}, {
       RGBColor[1, 0.11842105263157893`, 0]}, {
       RGBColor[1, 0.11842105263157893`, 0]}, {
       RGBColor[1, 0.11842105263157893`, 0]}, {
       RGBColor[1, 0.11842105263157893`, 0]}, {
       RGBColor[1, 0.11842105263157893`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.14473684210526316`, 0]}, {
       RGBColor[1, 0.17105263157894735`, 0]}, {
       RGBColor[1, 0.17105263157894735`, 0]}, {
       RGBColor[1, 0.17105263157894735`, 0]}, {
       RGBColor[1, 0.17105263157894735`, 0]}, {
       RGBColor[1, 0.17105263157894735`, 0]}, {
       RGBColor[1, 0.17105263157894735`, 0]}, {
       RGBColor[1, 0.17105263157894735`, 0]}, {
       RGBColor[1, 0.17105263157894735`, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.1842105263157895, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.21052631578947367`, 0]}, {
       RGBColor[1, 0.22368421052631576`, 0]}, {
       RGBColor[1, 0.22368421052631576`, 0]}, {
       RGBColor[1, 0.22368421052631576`, 0]}, {
       RGBColor[1, 0.22368421052631576`, 0]}, {
       RGBColor[1, 0.22368421052631576`, 0]}, {
       RGBColor[1, 0.22368421052631576`, 0]}, {
       RGBColor[1, 0.22368421052631576`, 0]}, {
       RGBColor[1, 0.22368421052631576`, 0]}, {
       RGBColor[1, 0.25, 0]}, {
       RGBColor[1, 0.25, 0]}, {
       RGBColor[1, 0.25, 0]}, {
       RGBColor[1, 0.25, 0]}, {
       RGBColor[1, 0.25, 0]}, {
       RGBColor[1, 0.25, 0]}, {
       RGBColor[1, 0.25, 0]}, {
       RGBColor[1, 0.25, 0]}, {
       RGBColor[1, 0.26315789473684215`, 0]}, {
       RGBColor[1, 0.26315789473684215`, 0]}, {
       RGBColor[1, 0.26315789473684215`, 0]}, {
       RGBColor[1, 0.26315789473684215`, 0]}, {
       RGBColor[1, 0.26315789473684215`, 0]}, {
       RGBColor[1, 0.26315789473684215`, 0]}, {
       RGBColor[1, 0.26315789473684215`, 0]}, {
       RGBColor[1, 0.26315789473684215`, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2763157894736842, 0]}, {
       RGBColor[1, 0.2894736842105263, 0]}, {
       RGBColor[1, 0.2894736842105263, 0]}, {
       RGBColor[1, 0.2894736842105263, 0]}, {
       RGBColor[1, 0.2894736842105263, 0]}, {
       RGBColor[1, 0.2894736842105263, 0]}, {
       RGBColor[1, 0.2894736842105263, 0]}, {
       RGBColor[1, 0.2894736842105263, 0]}, {
       RGBColor[1, 0.2894736842105263, 0]}, {
       RGBColor[1, 0.3157894736842105, 0]}, {
       RGBColor[1, 0.3157894736842105, 0]}, {
       RGBColor[1, 0.3157894736842105, 0]}, {
       RGBColor[1, 0.3157894736842105, 0]}, {
       RGBColor[1, 0.3157894736842105, 0]}, {
       RGBColor[1, 0.3157894736842105, 0]}, {
       RGBColor[1, 0.3157894736842105, 0]}, {
       RGBColor[1, 0.3157894736842105, 0]}, {
       RGBColor[1, 0.35526315789473684`, 0]}, {
       RGBColor[1, 0.35526315789473684`, 0]}, {
       RGBColor[1, 0.35526315789473684`, 0]}, {
       RGBColor[1, 0.35526315789473684`, 0]}, {
       RGBColor[1, 0.35526315789473684`, 0]}, {
       RGBColor[1, 0.35526315789473684`, 0]}, {
       RGBColor[1, 0.35526315789473684`, 0]}, {
       RGBColor[1, 0.35526315789473684`, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.368421052631579, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.39473684210526316`, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4342105263157895, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.4605263157894737, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
       RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
       RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
       RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
       RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
       RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
       RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
       RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
       RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
       RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
       RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
       RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
       RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
       RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
       RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.75, 0.5, 0.25]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.625, 0.5, 0.375]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
       RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
       RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
       RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
       RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
       RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
       RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
       RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
       RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
       RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
       RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
       RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
       RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
       RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
       RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
       RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
       RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
       RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
       RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
       RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
       RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
       RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
       RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
       RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
       RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.875, 0.5, 0.125]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
       RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
       RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
       RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
       RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
       RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
       RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
       RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
       RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4736842105263158, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.4868421052631579, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[1, 0.5, 0]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
       RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
       RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
       RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
       RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
       RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
       RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
       RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
       RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
       GrayLevel[0.25]}, {
       GrayLevel[0.25]}, {
       RGBColor[
       0.6442307692307692, 0.5, 0.3557692307692308]}}], {}, {}, {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 3], 0.3333333333333333],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 13.984419877483463`},
  DisplayFunction->Identity,
  Epilog->InsetBox[
    GraphicsBox[{{}, 
      GraphicsComplexBox[CompressedData["
1:eJxdyzlKREEARdGHkaGBgYGBioiIiPOs3c7z1M6paOwWahv2TsxqSS5BG0X4
p6AoTl3e6Mt7560vyevP7b2/56vV/eidz9bfR7vpfjyAB/EQHsYjeAyP4wk8
iafwNJ7Bs3gOz+MFvIiX8DJewat4Da/jDbyJt/A2buF20wVnh46zS8fZo+Ps
03EO6DiHdJwjOs4xHeeEjnNKxzmj45zTcS7oOJd0nCs6znXTbVxwxblhjwuu
OB32uOCKc8seF1xx7tjjgivOPXtccMV5YI8LrjiP7HHBFeeJPS644jz/+xva
7xOk
       "], {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.01388888888888889], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[1]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100}, VertexColors -> Automatic]}}}, VertexColors -> {{
          GrayLevel[0]}, {
          GrayLevel[0.05]}, {
          GrayLevel[0.1]}, {
          GrayLevel[0.15]}, {
          GrayLevel[0.2]}, {
          GrayLevel[0.25]}, {
          GrayLevel[0.3]}, {
          GrayLevel[0.35]}, {
          GrayLevel[0.4]}, {
          GrayLevel[0.45]}, {
          GrayLevel[0.5]}, {
          RGBColor[0.5, 0.5, 0.5]}, {
          RGBColor[0.5096153846153846, 0.5, 0.49038461538461536`]}, {
          RGBColor[0.5192307692307693, 0.5, 0.4807692307692308]}, {
          RGBColor[0.5288461538461539, 0.5, 0.47115384615384615`]}, {
          RGBColor[0.5384615384615384, 0.5, 0.46153846153846156`]}, {
          RGBColor[0.5480769230769231, 0.5, 0.4519230769230769]}, {
          RGBColor[0.5576923076923077, 0.5, 0.4423076923076923]}, {
          RGBColor[0.5673076923076923, 0.5, 0.4326923076923077]}, {
          RGBColor[0.5769230769230769, 0.5, 0.4230769230769231]}, {
          RGBColor[0.5865384615384616, 0.5, 0.41346153846153844`]}, {
          RGBColor[0.5961538461538461, 0.5, 0.40384615384615385`]}, {
          RGBColor[0.6057692307692307, 0.5, 0.3942307692307692]}, {
          RGBColor[0.6153846153846154, 0.5, 0.3846153846153846]}, {
          RGBColor[0.625, 0.5, 0.375]}, {
          RGBColor[0.6346153846153846, 0.5, 0.3653846153846154]}, {
          RGBColor[0.6442307692307692, 0.5, 0.3557692307692308]}, {
          RGBColor[0.6538461538461539, 0.5, 0.34615384615384615`]}, {
          RGBColor[0.6634615384615384, 0.5, 0.33653846153846156`]}, {
          RGBColor[0.6730769230769231, 0.5, 0.3269230769230769]}, {
          RGBColor[0.6826923076923077, 0.5, 0.3173076923076923]}, {
          RGBColor[0.6923076923076923, 0.5, 0.3076923076923077]}, {
          RGBColor[0.7019230769230769, 0.5, 0.2980769230769231]}, {
          RGBColor[0.7115384615384616, 0.5, 0.28846153846153844`]}, {
          RGBColor[0.7211538461538461, 0.5, 0.27884615384615385`]}, {
          RGBColor[0.7307692307692308, 0.5, 0.2692307692307692]}, {
          RGBColor[0.7403846153846154, 0.5, 0.2596153846153846]}, {
          RGBColor[0.75, 0.5, 0.25]}, {
          RGBColor[0.7596153846153846, 0.5, 0.24038461538461536`]}, {
          RGBColor[0.7692307692307692, 0.5, 0.23076923076923078`]}, {
          RGBColor[0.7788461538461539, 0.5, 0.22115384615384615`]}, {
          RGBColor[0.7884615384615384, 0.5, 0.21153846153846156`]}, {
          RGBColor[0.7980769230769231, 0.5, 0.20192307692307693`]}, {
          RGBColor[0.8076923076923077, 0.5, 0.1923076923076923]}, {
          RGBColor[0.8173076923076923, 0.5, 0.1826923076923077]}, {
          RGBColor[0.8269230769230769, 0.5, 0.17307692307692307`]}, {
          RGBColor[0.8365384615384616, 0.5, 0.16346153846153844`]}, {
          RGBColor[0.8461538461538461, 0.5, 0.15384615384615385`]}, {
          RGBColor[0.8557692307692308, 0.5, 0.14423076923076922`]}, {
          RGBColor[0.8653846153846154, 0.5, 0.13461538461538464`]}, {
          RGBColor[0.875, 0.5, 0.125]}, {
          RGBColor[0.8846153846153846, 0.5, 0.11538461538461536`]}, {
          RGBColor[0.8942307692307692, 0.5, 0.10576923076923078`]}, {
          RGBColor[0.9038461538461539, 0.5, 0.09615384615384615]}, {
          RGBColor[0.9134615384615384, 0.5, 0.08653846153846156]}, {
          RGBColor[0.9230769230769231, 0.5, 0.07692307692307693]}, {
          RGBColor[0.9326923076923077, 0.5, 0.06730769230769229]}, {
          RGBColor[0.9423076923076923, 0.5, 0.05769230769230771]}, {
          RGBColor[0.9519230769230769, 0.5, 0.04807692307692307]}, {
          RGBColor[0.9615384615384616, 0.5, 0.038461538461538436`]}, {
          RGBColor[0.9711538461538461, 0.5, 0.028846153846153855`]}, {
          RGBColor[0.9807692307692308, 0.5, 0.019230769230769218`]}, {
          RGBColor[0.9903846153846154, 0.5, 0.009615384615384637]}, {
          RGBColor[1, 0.5, 0]}, {
          RGBColor[1, 0.5, 0]}, {
          RGBColor[1, 0.4868421052631579, 0]}, {
          RGBColor[1, 0.4736842105263158, 0]}, {
          RGBColor[1, 0.4605263157894737, 0]}, {
          RGBColor[1, 0.4473684210526316, 0]}, {
          RGBColor[1, 0.4342105263157895, 0]}, {
          RGBColor[1, 0.42105263157894735`, 0]}, {
          RGBColor[1, 0.40789473684210525`, 0]}, {
          RGBColor[1, 0.39473684210526316`, 0]}, {
          RGBColor[1, 0.3815789473684211, 0]}, {
          RGBColor[1, 0.368421052631579, 0]}, {
          RGBColor[1, 0.35526315789473684`, 0]}, {
          RGBColor[1, 0.34210526315789475`, 0]}, {
          RGBColor[1, 0.32894736842105265`, 0]}, {
          RGBColor[1, 0.3157894736842105, 0]}, {
          RGBColor[1, 0.3026315789473684, 0]}, {
          RGBColor[1, 0.2894736842105263, 0]}, {
          RGBColor[1, 0.2763157894736842, 0]}, {
          RGBColor[1, 0.26315789473684215`, 0]}, {
          RGBColor[1, 0.25, 0]}, {
          RGBColor[1, 0.2368421052631579, 0]}, {
          RGBColor[1, 0.22368421052631576`, 0]}, {
          RGBColor[1, 0.21052631578947367`, 0]}, {
          RGBColor[1, 0.19736842105263158`, 0]}, {
          RGBColor[1, 0.1842105263157895, 0]}, {
          RGBColor[1, 0.17105263157894735`, 0]}, {
          RGBColor[1, 0.15789473684210525`, 0]}, {
          RGBColor[1, 0.14473684210526316`, 0]}, {
          RGBColor[1, 0.13157894736842107`, 0]}, {
          RGBColor[1, 0.11842105263157893`, 0]}, {
          RGBColor[1, 0.10526315789473684`, 0]}, {
          RGBColor[1, 0.09210526315789475, 0]}, {
          RGBColor[1, 0.07894736842105265, 0]}, {
          RGBColor[1, 0.06578947368421051, 0]}, {
          RGBColor[1, 0.05263157894736842, 0]}, {
          RGBColor[1, 0.03947368421052633, 0]}}], {}, {}, {{}, {}}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
      PlotRange -> {{0., 100.}, {0, 0.2}}, PlotRangeClipping -> True, 
      ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
      NCache[
        Rational[1, 15], 0.06666666666666667], Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
      Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {
         FormBox[
          StyleBox["\"Acuity Load\"", 14, Bold, StripOnInput -> False], 
          TraditionalForm], None}}, FrameTicks -> {{None, None}, {{{1, 
           FormBox["171.`", TraditionalForm]}, {50, 
           FormBox["201.`", TraditionalForm]}, {300, 
           FormBox["231.`", TraditionalForm]}}, None}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 300, 
      Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {{0., 100.}, {0, 0.2}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Offset[{-750, -270}, 
     Scaled[{1, 1}]], {Left, Bottom}],
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox[
      "\"30 Day Readmission Rate\"", "AxesTitle", StripOnInput -> False], 
      TraditionalForm], None}, {
     FormBox[
      StyleBox["\"\"", "AxesTitle", StripOnInput -> False], TraditionalForm], 
     None}},
  FrameTicks->{{Automatic, None}, {{{0., 
       FormBox["\"01/04/2016\"", TraditionalForm]}, {29., 
       FormBox["\"02/02/2016\"", TraditionalForm]}, {59., 
       FormBox["\"03/03/2016\"", TraditionalForm]}, {89., 
       FormBox["\"04/02/2016\"", TraditionalForm]}, {119., 
       FormBox["\"05/02/2016\"", TraditionalForm]}, {149., 
       FormBox["\"06/01/2016\"", TraditionalForm]}, {179., 
       FormBox["\"07/01/2016\"", TraditionalForm]}, {209., 
       FormBox["\"07/31/2016\"", TraditionalForm]}, {239., 
       FormBox["\"08/30/2016\"", TraditionalForm]}, {269., 
       FormBox["\"09/29/2016\"", TraditionalForm]}, {299., 
       FormBox["\"10/29/2016\"", TraditionalForm]}}, None}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->900,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"30 Day Readmission Rate, Cohort Size, Patient Acuity\"", StripOnInput -> 
     False], TraditionalForm],
  PlotRange->{{0., 298.}, {13.987105825061033`, 14.040824776612446`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{
  3.690826546191424*^9, {3.6908265837381783`*^9, 3.690826620617866*^9}, 
   3.6908272800318007`*^9, {3.6908273540572023`*^9, 3.6908273828910856`*^9}, 
   3.6908275526730623`*^9, 3.690827594775272*^9, {3.6908276268144755`*^9, 
   3.6908276992497187`*^9}, 3.6908277323140244`*^9, 3.6908278280345955`*^9, 
   3.6908278787246637`*^9, 3.690827925124304*^9, {3.690828007447096*^9, 
   3.6908280293503313`*^9}, 3.690828060200986*^9, 3.6908281447131677`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowSize->{2560, 1340},
WindowMargins->{{-9, Automatic}, {Automatic, -9}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
Magnification->1.5,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Notebook"], 
       CellBracketOptions -> {
        "Color" -> RGBColor[0.739193, 0.750317, 0.747173]}], 
      Cell[
       StyleData["Notebook", "SlideShow"], DockedCells -> {
         FEPrivate`FrontEndResource["FEExpressions", "SlideshowToolbar"], 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1: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
4MrvXaLaSVF7KYrx54OngPbqB1cWH0xK3TMrBdyPxwJ68BXHfRoIFbyfmxyY
ST34pZHdWTpYYdw3ZWp7MtVr07B+I7Ryh8nArYNWA3jyGZ9pL0XGLN3+ZwHX
ILiLyEpTvvzOV8T7KOpD43zwFrGBgsuvklFev5VTtKsQfEZyjLsA/CX7qJSd
SdT95SrwlnDf+mTBvANUyuVv5tJeHbTngdsAjQuYUOFvVSnbKKrrZSntyQfX
wiNFqbuTkq9+TxgPGMFVNrxGHZpG7ZlKgaUoFlRAaxG4DBDQ3v6FdPdU6u3Z
M8BTAoGyjw0ZO6nkC387H1pKYyEN7dSBtwAcJaEUalfSlMsvixhfSV9F3m6K
OjRzGjiLgWvco+9ZoglRUw6Kk6HZxPrlMY8SHEWT9ZwjhBBCCCGEEELoTzAx
f7A5D1rJ3DTWpSJvnWvJIz8nA+tSTmRobIuSaVKF7aoHdYq7W8X3P6yDWGzk
8nsnVgiOriwAJg7hgY/eVHcsER1byh+8eJQF6PL98NPXM67vWQ4sDFw9cux1
5dk3ebd3/jMwMHzv6pnV2R0r5J2rZJdWiTrfyjhZ+zXSCAsdW0tOLpF0Nn7/
s/yq4y3eqRXSkysF9/atI3P7Lh//5I3cI29kf/Km5MbejXQcxu51nFwiOL+C
371Bcq08+06FftDMv7s5p2dzwa0K2Y3q4kuN/9/Z1teuHaqByGDk0oFzi3M/
WcK/eWAtV8nQ5cOnluVM5FcnlvNIfgVw+8C6U0tyTy+TnFoqPL9MQPIrmMiv
ZIn8SjFmeyS/cuffX6relUSWqGIDBay3gPGZrvzr/NZp1PH82eD5MwgUkPQp
uDDmKz6jEgYp6sqPRCNB491fKg5QSW/PoqDliZhbC04d+CTcTU/MrdOz/vz9
ydN2JSf3/puUIYFPEbjVrNd08SXhXor6yJQG3iLaZ+p8RbY3ifpIM431FLNu
HZmI5/n3+ZWvlGvqIH/aO8mP9fyjKu7TxD1yEkM1l0SD+s6/5O1JTjnzF9ms
rxA8Cw4bZ+2gqO5XRLSvADyll3+e3pZEHRWlQmspu01NFrxqNUBQB3WP755B
7aKSxqq0jL/4UM6s3UlU378qoKkg7OUeGAN4DFy3HJenb6OozpeEsP1JuqX4
QCbXRUkja/TjQRV4NJ2vCnemTOv482zwFnDdGPfmQVP+ZD3nCCGEEEIIIYQQ
+hN8bn7lVHEfJwUJr9ykGK4MukUdaVQNWhS91ZK7O/8hsQRW/6El/M7Wn3Hb
Y9eOHF8sPbtEeHyZoPdAxThA96HKE6/z+k74ozRcPWQ/92vBx78RXHt7OXfw
wOVPTr2VeW2trHujvHuN9tqGuSc2SIElCdblxu8dfz37UsOLE/nV2eWC86v4
Z96Sn14l6j2wASA+fOXIiSW5x97M/nSJ5M6BcoaG/qtHzq0TX1gh7lonubEl
u3+T6vZWwa3Wb4Q/qI+GIxCNJJKxKB2HOED/xYMfvpF7fHHujf1rJvKr08tz
T64UdyyTnlopGL3yPnfaO2+vP70s58xy8enlggvLhYnxV/TV1pe610lvbVHc
r5GPWhUkv2rRk/zKU/BofgW+Qtaff/0FcVsy9d70mUfVc4+WzPjEOOsTdeon
BWnvzpxxkHrs8vf58faSa6+KD1AppwrSwbuIjL9yGRiPiHYqoUUDXhO3ZzdF
7Zoy5cEbKgjls66CifFXF18S7vldfsX48ztfke1PSf7ENBv8ZZ/lV2zg3+VX
ECjYnVj+vW+JOhbSkIeqRQstxvh2bffLkj1U8uH8meAv5Y48bJy1k6KuvMJn
fCUQXHTlx9l7qJSj6nlkUJlPybTqoVUfccnBVeZP4a53Wv9qDQQLd5BF46n+
Fdz+YjakZVv1jFc3HlSdUGXsTknqfCkX3KVsoOjE18k0w5vfUwy3qbhvHTHO
5b7Y869y1qcHp571kZcYTtZzjhBCCCGEEEIIoT/BZ/mVS01yBvfD/9Fz25OC
FDChVcU41dEm9ZAt736drNu+EMZYYGOf1n3t2v6qcBi639585PWcE2/yT6+X
3Wv4uwhAT9eHR36tjPd20gDnWv7l9K/mfvKm7PqhTSzExq4cvbBKemOd4GqF
5MYa9Y3NaRe2ZANZNgsuu/7H8cW5E/kVy5D86sJqwbnVyrNrRX3vlHNnHLr8
0ZkVghMr+KeWiu8d3JgY3HX4zApe50bVhc2qW1t4A5sl/cGXoP8TEojdv9Dz
Xu2llh90NH27+9AWoMMPOj/8eLHm+GL+jX1ruQNGuj46u5J/ZrXk4krFuTWi
sS4y/uruO+vOreR3vCU795b40sqH+VWX66Vr66U3N8sT+VVemKxOpme5nknk
VzuTqL1UEgQLwV8EgYKebyvfTXpsPzU9MJPyTKf2T5uxh5rVTk13P0YFp1GX
fiCC4KKrLwkOJlFHCqjxkGxi/mDMLU70th58RiZg3EGRpd0fLNFAKJ92msjb
AP0Fl14W7U1KzB/0FbNtRZdfle9LTvrYOAuCC8Br+Cy/2vtZfhUo4+p5m5qx
k6J6V+bFQhpw53OnYJya6La8rh+K9lEpH+pmQPvj4C89VjB7D0VdeCUHgk+C
t/jSS5ncF48ZUyFgYrwqxqvjiqR9GgiWBqZT71Kzerja2or3UlN3T6FuL+eT
kkJaukXLHTO2Q3lKm8FdwtUfCMBVGm8z3n1DwdXwiSw9vrso6izlytuVQkFj
KewqYRx6kgd6FJP1nCOEEEIIIYQQQuiP9zC/aiHBEeMi06we5lqf5Uj/vRiX
ZmKDq41xqmPNmhFHXp9ZdmULHwbuAcC5tl88uPwRsHCh+UcnluSeWsbvqFBe
WS3nfhWPj7y/+s+BiQEb/3j9s0d/mXZmufz2O8viEBu/dvrcSnn3BklXhfTm
OkX3ZtGFagUDNMThdN03jy3mX3R8j2Ef5lcX1wg71ijOrRP3H6wAiI10fXTu
LcGZNcIzy8X3DpAMarD7g0vLxZc3STqr5Hc3825vVjw44aMBBm+duVJt6HhL
cGFZVsdyQUfrP8UBeq4eP/ybnM/yq9GrR86t4p1bK+tcpTi/7mF+de/g+vOr
+BdWK86vllxeJZ6YPziRX93Ymhh/Va+KOGXg1JMb9Hn51ZkfZ21PSX5fn86E
noq2F4K7LO7RwfZCcJVA4Flo5o4pvfwafzeVdEotBN8zZPl0pyHmlgBZ6koP
Lh0TMO5NmdJOUUNLtWzQRPIrnw4Chb/Pr/wlsK2k8xXZToo6bphJcqr/kF/1
rlCT/cFC7iu7kqj7S7S0z8Q2a9lW7jAD2248/52cfVTSseLZbKiM9hYfM83a
RyVf/qEQ/I+zvsJLP8jaT00/bkoncxJ9BsZnIAtnBU3gXBCckrSDovrX6Bl/
/s4p1L6p1M3XheApIstYefJjXm1su/GUJouM5vohD7yldLuBcZbsnkXto6ZG
mkqv/0b5DjX1bFE6HTSFuZrdJeDX0q2iyXrOEUIIIYQQQggh9CewiFmbhEwY
9GgSY3sS8ZFr0uph3VpwaRM1kNCDbtWMNqgGrIpblbnhjv0swIVDTRAbBXb8
yOoiMttujezUWv7VVTnjtztYYK6+XQssRPsuH35D8PFS7enFuRdb/waAiffd
PbZadXWjumuz8vpGyeUK1YWmb5L8ih7/aLnh6Bu8h+OvWDi3kn9preD8WmXH
esnAe+UA8aErR86uFJ5ZIzy3Utrz9jpg2KHuw9fXaq5sSL9ZzevdLL5hLYKx
PmDgXujvLyyTnV2uOr1SdvTX8y40vQrsyEjXh5/8a8bD/Ioh4686VvM71sku
r5Zf2CAcv0rmD/a8u+HiGuGldYpL6+Rda6SJ/AqueF7u3iC7Wam8X6uYyK/Y
1on8quiz/IoJFYOvBAIF/YulH1DTD2fNgtBzEMoHbxmJfTz6SJsm4tUljikd
WKFpm0IFp1Lg5o4pA08pWZnKayBhkTcfgoW7kpO3/S6/IvMH/Xrw5V96WbSb
oj4qSAdfMbQXX3xZupOiyPgrfynrNbA+LXgLJ/KrHSm/z6+OGubuSU66+ooE
fI9DgDuAq6GMcReefjrrwJSkru/yme1lEHjimGnWHorqfE3EchW2FT94S+Ol
qLczp0Lz41zj3HUxnnzWnx9fW7otOWnbDK7yJ2DnEx+oZ++gqOs/kkHwCcbP
PTAFTKgQPE+/nZq0N2XK+ZczwVtMBphtKzmykGs/ueffdBe/Jd1HUd0v8ePb
8uNuEzi1ZKZqQDv5f4AIIYQQQgghhBD6T/1BfuWdyI4SQdZkIPmVR0deipfA
uLTjTaoH9Yr7FtndA6sYhoHxYWCB7j9/ZLHoxDJ+14a8jvWCm5XSno/cwMaZ
0Zvcb3vPtB36ZcbJlfqOJTmnqwogeh9oOO9+5dIa+cUNks514vMbtfcPO1iA
8K0PziyWfrJC9HD9doCOtwSX14surled3yAdPFQBwAx3HT/9lvDMavH5VfL7
BzeQMVTdH3auVdzaJLhTJbq1QXK+Ug/0CMtEb7leOLE+6+SanOMrhIdX6HoP
mxkW+q598sFv+J+8Kb65f91EfnV+jeDCBkXXWuXFjaKJ/Kr3vfVcVZc35HWu
V1xdJ6HJUl/Q5X2le6P8VlVeX51yzK4OtypYp5HcIG9x71Lto/kVGygYbzaE
plNtSVRk3UJoWwQ+A4S4ntSCXwMOIwQXRYPaaG3RbgHlf4y69TM97S0F7wLa
x913E1mq3VfEthVtp5Im5g+ywcROP1nU/dKr4t0UdaQwY+KYiy9Ld1HUJ6bZ
LHderwH8OvAWQrD0D/Krs9+bv4eiTpZmQevzTHvBWCAPgs+B65ltc6htFDXw
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
heHtJvLb0IJwe2m0/Int06j91NShTYZIu571FUf3FEDbU8cLUt+hpnX9VMgd
STrKnR/3q0g73kLuXP+/n8//7r/TSfp7RAghhBBCCCGEvhIsj+ZXBRM7JzG/
+g/yySgdr4lMfHPnxxqkbMMCurGEbSmJthhHnHlgL6O9C4YbVRDKB3seNOeH
G7QPXCQCinq0UV/+UIs+7C0cbdWFXeqhRvF4s37IrBy1qoatcq7N0RbZmDMv
2poPTYXRVnnYpYq5SyMN+bTdCM0l4CXxC2fElz/q0g+3qB40KRmXNuLUR51a
xltA+woiLgOH9hRFncWj9sKRVvlgo+y+VTPaquHONWgVjTcXDzaXDDXpok36
aJMs5pbFWnXg1EKrOt6sGXcVxhoKuGsZc5Mgbtxlot06sCm4asedmrDHOObR
jLeqwGUgS1cFFpHX7bl0EDIyIRlsU5KhUIm7Fvdo4wFjPFRABiy5lRDKi7XL
RreJycAnjyHuVJPODBYkJmaawKUnDfpNECggg5qcJmg1QIsOvGWRNhUdIokT
EzDSfgO3wYa00ZCCLInWXhBt14+FVFG/joy5ChrHAnmkWU/iLYTb80hJoUR5
AQN4F5IxY1zjoRLGZyKRVFsB7ef2PAnNheAsBFdh3GMg46BChqhTD+6FXAHx
oC4cIhfCFRZzqSFARkmRAM1dHPfomN2m6DZTrKX43grVmb+aP7TFCP7nwbuI
3lPYtz7/t7LZe6ZSnxjnR9354e1cF32N9T4OW/58+1RqN0VFq0pi3PVyD4mn
kA5paTJ5tjQW+uo85wghhBBCCCGEEPpiFjFTLwFvIr/yF4A3H/ymxIywyUFC
lUf58ieE23TR4IIxnzjuL44EVMMe1ag3Ede0KcdCcmgv7PcoGX/hgEcV95eM
uAvjXkHEJSUxRbCQCRjDrdpIa37cvTDcqhhzqbkvjrr03M5Yq4GMI3KWgaco
SmbAlTFNpWxAxwTFcY807FRFPVpwFoRb9eAshdYyxl8MziLyVkR3YSIDUSXW
1i6LuRaQ9n161m5inJpw86JocwnXVNivHmk1QpNutE1LexfQvqKRkG7Ib4y6
9bRPE/aahoI6stqY2wit+eA0MB49mccX0rHehYy3OO420Z5Cxp+fWFeKnIsO
qGkfd5sWQUsZ4V3EBEsjPi0d0jPb9GF/Hpmm5y2GlgLwF5L0iWs8YIR27rbq
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
PqZ9w77iSZOZ1GtuuTSf4asTApYEcqZTVX5gneb4j+79yHDnB0l3vKeIbvm7
+/t+u4jMKp8t2VeTQMY06UTuNX9ZvDF85eqAKDy8smQ05S6xMub6ZkTH8oVN
q++fWCuXzqluMvyl6//L+7NfsRtNqD77An5+ndXpZEsmo5IvT5ysjg9WJV3c
F9tj+t6Y7fvj77/oO99AXR+M/nFbp/Xv23emDe+8r2vfg2P75ePVWaN742hv
4vAB+YU3f859stvXXO97v2ik6pf9OxKG9z4ysT91dN+iybIk/8H04b1LRvel
DlQ+Nfze+omPtvRWav07FP6yhMn9cWMHVWOVGt/e2OGdi3stP7j48TY6773w
ScXwW6/17ckZ37VodPfSiT2K0F7pmy75KplQnfqZ7f/MHoIQQgghhBBCCH15
K3o4UPIIVSeHZ1biW2OF+KZYMKVemp98+brR6zBj118j+8xn4syZvD09UKx6
V3a3i81xsRgXY/UsUrw8wm6rmcVo3xOcJY3M4ROnf+bApD9vflWTJo2wpDvK
pj45KJjTyaKqj4xyzmGNv1rI27SCVTvpVExUL5TOrP6Zz+j99RN3y+t2nVd4
an71xb/CpVtuNBxTB8OHmQnmZDJnUHncxSotXTxGAZ5okgQibqqg/+P9rcWx
fTuWjO5MHd8pn9y5uH+vKnCumrhJCk6KCwvEEzdx8YM3mnYk95cuHd0fO7wv
dWivYmhnUkdlLvV/yHN+CoXand8fFn+7PcW/e+lIZepYZfzE3oWTb75AE+3S
ergJgcaJQkLXe62m1Z274gdLUriyFH95SrAylatWXNoZ/op7LEIIIYQQQggh
NPObml/VpIRnVlOzCGl+JQ0u0HSWerlLt5A5TSzkzBp7Jd3ydVbL5jpmsROr
v9X93xcHf5PV82+JLSsWOxYwOrCcs8rJlEbVCrLH32j9vFE61Oo6t5vCJzw3
XZ5KSQdfqQSr2stm26LZwG/kZDFQZQ5v0fDOJJ81bmqrvrjyv/Xrc80+fGVT
06527cmvwrdcOZH7tU9f2s6arFCNuEwKZ4wPVSlp39LBci2NddHwSNf7Rc2m
51ss/zre87aPiMYnO13/s3nr4p7NmaPblvbsXNjz/uYQ0Wh/88cVz366WX7c
u2Y8OEihC12Of+9YHz9eGj9YmtZfurS97EnqOcxxNCquhOfPmJ5p2pzQX5Qw
tit1bL98dPviC1WrJy+eDRANvlN6al3WuT2rhk64xGWHuus+3pnVt2NJ//5H
J8uS/eUyrlohnYveePnpm1Kmey9FCCGEEEIIIYRuRlR8dX4l/Rh+74/51Qzo
C8Mri1IsdEBVtyCqnn3NcScbXp8y6k4KvqUYcyaP1CeSXevbrSBnpt+WLB1D
5cgcqV4qHVN0pWu+re9z39N3dRmLiixT19OmPjkoWDPJprGz2eZoNrRGQa4M
sqt8VkXQnEwmzY3W/2f159z32mWuXSw8N7vUlcXEjf/i2q5396uvszmdHOKL
IP5K5q9QUGXaeEW6771XW3Ykdu1+rG/tY+0vLfl4l2F06F0iGjn//qktj3Vs
NfRumn96v0Y6VirAN1X/uHn9Xd1r7mlcm95z5CUKjtO5uvbipAtFS1p2KgbL
ddT3NgVC461/CJKPuOHzpn9q3JLVuTWxd4dqpDR5sFQ5/vF+juhCc90n6xe3
rU1offHBk5sLaaCRJoYv2F7oLYrv3pU0ti/JdzA1VBWeX0kDw/D8yiyb7r0U
IYQQQgghhBC6GV1nfmUKvzu+dj7wJeqGr8N0b9gXtvN68ytreuffPeCJZM45
kRPrtJN1asGSQ2X5ZNFRtZ6rThcXCN89g0wZvFFFDh1ZM6WkqZTq+sOiq2Or
cFeWn7o9PLwiu9YRycwRbPg34m9zQ6Ysn0t8LDlVGsgm3qK6miXjUuYbdGWB
a+9lVd14+czPZxYXVgnm9CtdXqG4qVlXn+y1fe4VuDz+Cr+2KX5bonBQvCVr
okLmq1QFD8aOliUFdyraSuZ3lKa2vZZwekNa9zsHKERE/saXUxpfj+3cuLj3
0IuceEPvx2fWJIvLnHpD2fzikk+366XFBDpetrJzQ8L5bclD9n8LiHfrPveH
4jTpVzw17f1J47rHzm9J6tiuGCia17ovc3LkBPHBPuP/aFu/9NgbSU1rH3t/
w6L2T3ZRkIbfK28uTh4oiRvZmzhZJrt2fhX+J5VN+46KEEIIIYQQQgjdjIrm
caUPk0kmiG+KzZeObBEs8unfsK96MsGexteEJzMH08iuDtTJaFfBoVl3WBj7
9Fd3klFHbkOgJp0cCpJOuq4Ql+fEK9VK3pox7lbxDj3t1pz91fyThfd8En9X
7xOy7n9NlO7l1JBZIzhSyJx+4XfJTT+8v/ONBX6nrvu/PdZouO+Q/LZTP5hP
m3PIqAm5ZaGS9NYfxDb/JN7CYhxz2R+XfaPju0vb/59Fo95EwakI2vU9azJO
5D/wR9k9b6vuaf9lkrj/8EeT/BYV1Rj8rqwzz9x//ulHeZe4m+Wc+vsFxzLv
CXrUoZoEoS7Nvzv7/HNL3ku97cO4u47/6GvBrZnkNIy748iSGXSmjf06/fjT
3xpdk+j3prX9U9ynOYl/SvnGye/eFdqhG7FpyJYmPjqZskKm9MnatFB5auuv
5n9SeP8HSXcey7/35DOPChVK3pxCzjSyafp/o/zk8bv+lLDoQ/W3+p9Xki13
wruYzFrp04JWuTQVDL/gU0ejhWoUgapUX0XK8H7lyK6F/TtUHevjP9madOHQ
GvJxAW6i8aXE46/FN7/xaNu5Bl6YHDu65tRr8Wc3pJzZuPjY+qSTG1KpsUEg
anzzty3rYzs3Kpq3qUJHnmvennns5WSOeJ6E8weeOf16XNOmjIEtCb1bH26s
/oE0GBPGTq5LO702sWWt7OT6R85uTBoo/9EkkX984MS6pJGShIFd8uF9Cn9F
eH5lkkvfLCn9w077XooQQgghhBBCCN2Urju/mvat+sonmFJ5m4LMWYJDSVXS
UUPj1qSe/5XsjJzlmh05sSVVmsDYMzlzprSYMY1sylBNKlUryaEdN6aQK3fg
tzLPYnaEzbUwZrqVlTFmmcPeUc6m7dm8uyBkUZMl79MfLHDOZr6ndO+l32uL
YA0RrJZF2CNY9VzW/0IGZ88Z/H2yeN3JmDdirpWxmjuYI4q9lRxDluV08Knj
332gjsVYo5hxDvPMjvCwiGPx99IGDdlVgl1HtuyaOcwym9GLy9x3MWMMM0cx
wWggT47/VdXb37pDXOHBGOacPcfNIqruYO0/XUwug/QULLqmp2Mr7ma93447
I7vXPodVfI1ZI5m4he6o6P5fqsim52sypCduyRv6Z0XDnbNdLMrGohyRkQ4W
YRIfsWIF70qnquXnvr9YfJRaNrcmmhmjWR1jH8VG025dyKGTDtYyKy7Nr8KH
ovEmJWdMC1bLA1WpobK0kYOp3cXyzuL0c2vn939STQINthw982Lsx6/FnX1t
0WD3n4hCQw2/O/163JkN8ec2Ljm1KenspjT+pJUTQq3vbWxaF9u2OeXM+uTG
HdoT6+JPvSYLUkD6Vdmzp9fGn9kk692U0Fe0tMv5D9JhWeNdJ99IPrcusXld
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
evzt5LsdbE7HTxL5o1qy57kYq45mPf87hcp1ZMoTt4GMT9beG1UbHTWxRs97
V5BlmbgY2XN6X5LViw/69VvJ/ARvXtb097F1key9uG+SK098dkFzOh3O5Gtz
jbOZhbHeVxPI/UTv/1BYoplrHuMd+gmvkmr0fG06b9OGHOk+d2bXPy2pZREf
JnxDfDXIs4K3F1CtjuoLDituF7eq7fn5AWsGWXMvvdpT/wvhrynkzBnSaeHN
mZ0Hk/p3JI//oYhokgKD53b+6MTrCWfXP3Zsk+LsWiUJk9J52iv/sWljXGux
rHebrHNHYntJ6oV313NEwdb3GjfJzxfHD5akdO5I6yhJ7CtVC+QP8f726udP
b0w5s2Vx04bk5m1Zw+++QUTjre+d35jQsiWlc7vifNHSnuLUrpLMEPmI53qq
nzm1Rd5ZmtK/RzF+UMkZL82WLw2cp31HRQghhBBCCCGEbkLbHvj8/Mqqwvxq
2gvZM3lrBhml87fzNrX0ZYKe3NPfecTFWN1ds8hRILj14cNvNJxNKTgypT+f
OYOqtFy9nmx5lYw1sNmda+LJlEtuOZlUZDII7uyWny41MvZh6gNBeyHVFZ5+
domHRX0ou4PchWTPJKNWOq/7Ua2dMTebc+ENNWdaJn080K6zRUZbGev5XTLX
oOLqMk88/7CDMefXZn+Uevfbyls+SLnzw4Rv/FF2V11MpCuGnfvpvQGvmqzL
7ZGsKor1bEkkd47PnTnuTifHanHb6qPm1i2ce0TxtSPKue+m3/FOytzDCbPE
B7VFx0jjJu/Ktp+l2Bj7WHGXdDyYI4ezGDhHJtlXuBnzsujRNXGCe+W5ny1w
zop4M+52cuWHXFoyPU41MjKpyWYIOXO7n41zRDDbN9gH8jsPK+44nHLfu+r7
jiTdYbs92hoVeeoHD4fcWWTVX/OaSzu/+JKGTOlBo3J4X1p/jbrP/k8UmqTQ
0MD7JU1vpJ7eFNuy/rHTWxWdWzLJf4GnYHPNPzRuim8tTe8pTm0tSWraGjf8
XolANNnsOL81rbUosac45fz2tPaS5O7SLIH8nBBor37+zKbkxi3xrZuSm4qV
g2+9RES+9j82rk9qLlJ0lSjPlyzuKk5uL9YGiSMh1F72neai9M7tcml+VZEe
MknTtqn/1vA/7PTvqwghhBBCCCGE0N+8682vxOvTv2Ff7aSPAUoDpSxyZnLW
LOn78ry65p8samDRNREsVKWVPiXn1EpfTehRB20ZIWu6NI2pWTHpUQtuvW02
O8RuGXopg6wrpJNTGdPFxSYbslr+PtHFoj+Q3UauFUGn5tzzsXbG/iS/N2Qr
lOY5Tr3gXB1wqo6ymCMssnPNAjqUN+nRk2e1OYo5I9nI7/PIuZzcy479bFEd
m32IRbpYTB2TToRVHckq57LDbLaDsZafxomrIsf3rNHMzeb2vBJL1flBbzZZ
88a9StfcSA+b442IaGDSqdet0nVWz5iDza2Yw8ipCtWqTj23xMxi3k+NCNVp
yaHmHbnkMZBlmS2G1UTMvfBqilC/vPnZBW4W86fER8iVf8GdTN48sseTK95n
yyTHqpa/i7VES9tsZVHOCPZWRKSFsbfYLbXig8awzp8mkFftc+jJdmUEJI2D
OHNG0KgM1KT5Dmh6D2RQ73sUoqG+s59s0ja9sbS5dHF/SWLjVkXbBsX4hWaB
/F2uf2nenNy0TdlVlNqxQ96+I2Hy44MhjnqP7WzakNxRLOverujcr+3erWzd
rOTIL1CovfK5xs0pbVtT27fIzm5N7jn070QU6Dx+bl1yc0laR5Gyc3dsz05Z
x/b8gPgL8p8pzW3epOjcLh/Ym3ZpfhX+DxW3lrdhfoUQQgghhBBC6KvRtZ8f
tGukj63ZsqTJCZreHFnSFNEuHVglHWflyuFM2r7tiTbGamax/n9OFBcYr1WQ
q1A6f5Q93ueVk00bsqt4j54c2pqY8GJrMsmWFz6leQ6ZdVSraf/Rw+Ia3kz7
5sThbPIUNj+d2MCiP5LdQc6VnEsdcmb5pUnR8poI5o2IGl0TR858cj4pOHM8
bG4tix74DwV5V5I778w/LDCxOR/I7wqIP3pXkGsZmbPJUSDel2zZZNX4HflT
6/GwyLE1S8UNEOyrxB0s6Da4GKuPmNP5Ugo1FEifH3StDI+2VpAnV3AoqXaV
37688blH3Iz9QXYfOXPJIe2WgtHgr812zGGHWOSFl7LIm3/65wuMjL2v+BZX
rwvWqagym1xJ0gmsTLnkLfzTLxY459zyQcLtJD6j2lxO3Db3CsGRL7jEDcsT
nxHv0AftanJIRxsKtnRpkGXO4szqiZqMofKkkX1LB0/v8xPRUF/Lvp+fWZcg
HTG1PU2aLG1Rtu5QUquN+GDfO6+2rY/r25Tau1V5vkhxvlQxce4d4mngrV+f
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
OmTTSh+QvLSTaMP/rdO/ryKEEEIIIYQQQn/zrplfCU4DSUlvigWXBk1j0nmr
XHpyagS7dOqn8IFY4RvtT4RP2K7l6/QT9myq++HIWsX4a7LBLalk/ZHfZqDa
LPKqpWW8udIXArqyB/am9W9Ip30ryZxLhzR0VBf+6Gg2ecQ/9BNU/gNyrBaO
rqAaLbkypY8QHs2msm9TxXelc0+5C4WGfOmQPMvT0qmivNmCO5u8eWTWkOdx
Mq4kTwGV5w69kjHxooYrySHPyqBHQ14VWXPoaB4d/I60HmeutKqGXLJlhrwa
zp3GHVIKXh2ZV42WqDtei+9/Wc45s0nc+Do9eZeTW8u7dGR/MuiWi2sLuQtC
h/ScXRc8lENVT5P5B5xDfGqryFnos6YHjqhHDxs49+PBvbldLz86XiI+/UKq
FdeWJ7gK/PUqrl4TqskdezG1/5UE314NOR/nHbmcJ5Ozy8ip5Fx5vEPP27Sc
VRM0Z41WZLYdyD+2/6nWTYln1yYcez3+2PqU4xtTTrwe37g+aWC7qn9vet+B
hP59aUO7VvTuUvQcTGzcoW3f+WS/5cenS1acLVUPbIq9uF3RuEc1bMzpqUkf
M8cKdt24LWd878NN1bknKrNby1KGy3XDZdqBCvW4MaOvRjlco+/Zm3L2YGpL
aWFf+T92HShoKVW2b04U/6YXdxs6y1JGjMmTxqyARc05wvuGM3wIVnjaPO07
KkIIIYQQQgghdBOiooeC2x8lW8YX5lc6NI2Jf4jwwEorDSsuJR0ax9kyhHqD
355F0vcM5kzW6wOHCnhnIbnlnGflZK14x4JJj55syzl3WqBOJ51yypMXdOVz
bgPV5oWcuT6HnnOLf/p8n1MV9GaTSzfmSRw7pCJbDrkyyJ7t8yaTO4/z5vjq
lP7a7BG3itxazrN8slYRqM0QXGqyp5NFQ56cQF3aeK2WDudLn3b0SGd65935
VJcnHSNkz52olYnr4WtzxfUEvfpRdwa5ssT1kH012bIFt57qnwwZNeEPBhZS
3QremRWsV5BdR3YVX68RTMupVi+dvMuWy7vV5NBPHlKSI5dzKv2HMsQtkb5M
0JNLDh3vyQ64sqXzazmWkfepMXt6qD6DxPU78wRHpuDOJG/BpDeP6pcLNgM5
xKecKz5N8uZPuAzSS+rUC+5cwZkXMusD1Vm+CtnI/kWte2TnS9VN2/QnN6ee
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
              "], {{
              0, 175}, {1600, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, 
              Interleaving -> True, Magnification -> Automatic], Selectable -> 
             False], BaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {1600, 175}, 
            PlotRange -> {{0, 1600}, {0, 175}}]], "", 
          CellChangeTimes -> {{3.448104160478006*^9, 3.448104179877939*^9}, {
            3.448104249222381*^9, 3.448104253789421*^9}, {
            3.448301713983169*^9, 3.448301727766382*^9}, {
            3.448729782542696*^9, 3.4487297903398933`*^9}, {
            3.449485121728216*^9, 3.449485133054387*^9}, {
            3.449486045565728*^9, 3.449486064508789*^9}, {
            3.449490695119616*^9, 3.449490705238412*^9}, {
            3.473784965214143*^9, 3.473784969450467*^9}, 
            3.4737850101648817`*^9, {3.485608924147756*^9, 
            3.485608933475997*^9}}]}, CellMargins -> 0, 
       CellBracketOptions -> {
        "Color" -> RGBColor[0.739193, 0.750317, 0.747173]}, 
       CellChangeTimes -> {3.485614599521085*^9, 3.4856217085969543`*^9}], 
      Cell[
       StyleData[All, "Condensed"], DockedCells -> {
         FEPrivate`FrontEndResource["FEExpressions", "SlideshowToolbar"], 
         Cell[
          BoxData[
           GraphicsBox[
            TagBox[
             RasterBox[CompressedData["
1:eJzs3Xd0HOd5L/4BQFLsINGxvWL7LjpIqstyipNfYju2LKu5XifOzU2cG9uy
KFaxE2BB3YJdtMX2XYC9SZRoiRKLJHawgAQJdgJEIeq2mXnuvAtaZhzpxv4d
JdA95znnQ5zZwew7z7wz+IPf877vSH/8L9/+cQpFUe3cv2emURTZjljlTL2E
sWSAOR0suVArgDox1AnBjBBCCCGEEEIIIYTQ5KMtErDkxCtnxjdNYSum0xtm
0uWz4uWz6IopCCGEEEIIIYQQQghNOiD5VRa7eQqzkYKNFLue+5kMFUlQTiGE
EEIIIYQQQgghNPnqRFCXxWxKYbntisSeioSNUxFCCCGEEEIIIYQQmnwWGZh5
8S3T6U0UVCSxG5PocipWTsHGaQghhBBCCCGEEEIITT5bHlhF8cqZ9OYUtmIq
Uz6F2TSV22Y2JyGEEEIIIYQQQgghNOlYsxTqssn4q4pkKE9mN5IUi908hd2U
hBBCCCGEEEIIIYTQpCPrX1lyYOt02JwCm6ZC+VSomAabpkDFdIQQQgghhBBC
CCGEJp9FCpZceusMdvMU2PwYW/EYbJnBbn0MyEeEEEIIIYQQQgghhCZbIr9i
KmdO5Fewafrv8iuEEEIIIYQQQgghhL4CLLLPz6+2IIQQQgghhBBCCCH0FWCR
gZXkV7BlKmyZjvkVQgghhBBCCCGEEPpqIeOv+HTVrIf51ZYZsHUmya+2zkQI
IYQQQgghhBBCaNIxv8uvSGZVOQM2T35JCCGEEEIIIYQQQgh9ZiK/YqpnQ+V0
kl9tmQVbZ5HphJNdGEIIIYQQQgghhBBC8If51SzMrxBCCCGEEEIIIYTQV4tF
CHW5UJPGVs0m+RWH26ieA5WzEUIIIYQQQgghhBCafH+QX3E/J/IrhBBCCCGE
EEIIIYS+CixiMPOgJo1sY3iFEEIIIYQQQgghhL5qEvkVW5uZ+DgbauZAzVxi
0gtDCCGEEEIIIYQQQqj6kfyqZl4ivJoDtXPJNvcTIYQQQgghhBBCCKFJZxGz
lt/lV7VzoG4u1KVC7XyEEEIIIYQQQgghhL4KGKuYtQhYcxb5WJc6ga2b/MIQ
QgghhBBCCCGEEIJH8iuSWT2SXyGEEEIIIYQQQggh9FUAZiFY+GDOAXM2mDMe
kTYpotb5rDUdLJlQy8mCak4mmHOhhs/tJDXX5hBc5dYsbidtETDcby3ZbF06
93XWkharnc/as8EiYmoy6doM7ldgzY1bsmPWjJjtD0/HmjMmQJ2QreNDXRps
zWXNM6EuF6rmxi1ZjH1+tHom1KfFa2ZxP6E+G+qyoTr3v7yvuLNwnWDNABvX
IXMYy2zaMpexprKWeZ+LHG8mnUB6xpbBdQ5Tx11+5he1z9RlQd10MGeGa3lg
nzexTZvnA9mfQyaT2mawtrk0t20Rsua5X9Z1MXWzoEYMNZmsbXqkPjXsSI/X
c2d/pDO5q7akPzRJDyFCCCGEEEIIIYS+WiyJ/MqSQyKgz8IcS+Zn2//NGHMq
WNMfqs8EWxptmc3YZoElNV47m7XNBzuPw21wH8E6j7WkMua5wO23zAMLd0Xz
oSoVajPYmjlQP5cgw8zSSTBVlwiFHrn2R88btcwasadGHXPBmhuzTw9b0yN1
qYw9l62WQr2MaxDMXEk50a3zSGE1j/1h5dypEzV/Wf1A0jlLJmOeT9fNIx9t
2VCfzVqzf3ch/0HieJL52Mjto2vTmLpMsPO/8BRcU7a5YMmiLQISGFbPAzMv
SvIl7ioEYMkFy3zWMi+RX+WQfv6y7q9teqLUNO7WcDVEzTkkY6wWPxJeZT4a
YU3Wc4gQQgghhBBCCKGvjkR+JZzIrx5JDyaPNQ2spLCYOZO2ZtP2DMY+Hxrm
J/angyMrak3lcBuJyCgN6tMY81yGBFlpictJxCBk2FIWOOaSiKYui1ydOZUs
Vl/HT6Qif3hS1ppN0p6aTKhMp62KcD3XAg9qM2OWXMaSFbNmhy05sZosqMyB
OmHczB93CH/Xe49WnsjcvqR+oOvmJhqcKJ6XGCPHo+tyaCvvc7FcJ9TOJX1i
ywZb7mdp5Be1z9RncX3CVM2Dej7U50ItH6ySid6m67KYWgE5bz2Hx1ozoX7+
l3Zd3LnqBFCdxZ2arcsFroz6ueTufM6T8GX2J0IIIYQQQgghhP5fJib5lTUX
rDkkLZl0takToQ1jFcbNwngNn6nlsbU5UC0As4AMjrKkckjB3EdupzUxhbBe
FLeLwrbcsCUrZpkfN8+NWyQxa1aU+2gWc02RWKZ+Hrfx+xMlYqvPhOtnx60Z
4Zp0uoEXNqdGq/h0FQ/q5kHldLZu/lhNWtTGG62eF66dy7Uzbp5BVrwnid/E
LL8vvx/ISDNbBthyfpdf5ZBUigRKaV8snYRXJLnKJpGUPYfMB/yC9iPmDLBz
N50UH6/jTiSirTymPo2xzQBHFjTLWAuPrk6fGPdF5l1+SdcVs2cxtfPIpdn5
3EmZGjLijnGkJx6/zwtRJ/2BRAghhBBCCCGE0KSziMGayK9sOWTM0kM5k8Yy
MXyI204MOiLLQPGgNpHhWHlkrhn3W1su2bDyuJ1sbRYZxmPl0zZhxJobsWbH
HbmcRAtZYBcwVnG0LpO2z4fG7JhZ/AenY63ZtDUnzp20SkDXZY1Wz4tXZ9E1
0rgtO2xLHatJi1iEY5XZ4crMiDmzv3bOsC0tVs+PVwkmUq9Hmvqyu85OamMs
iQbJnUpPrHOVmlip7HMkRqNlQT2P6zfW8rAFslrXF7XvEDHmxGxKWzprz2Ya
c2kyQZIHDdmMOTVen07maZKuzuQaIYOmvqTrYh18MkauPnu8No00a5eBQzjW
MA8eOUWibzMn/1FECCGEEEIIIYTQV8TD/CoxiYzI/t3GJLELwc5nLBlAxvzM
o+vmsLb50Zq5YzWpjD2VMc9na0SEJY37OF47L1qVytSl0zWpdM18piaDrs2k
63LiZu5yZsWq5sQqMxLzB+eDdT7J6CyJ/CpxIraex9hyJ8KrmDmL3TLjvlne
Z5YMV6SwteL41tnRLdNHbHnDldPu1+jGfK8NNr/woFo3Xj6L2TgLauSsJedh
TPRf0w9cYQzXuIOTS9YBI9kUty1kHfzPBQ4F1ItZC498vUHA/SSLz/9fyrNL
uFNAQybXeMScFnHMgxYZVOTDVhPYpGxDRtyRyVozmdo0sGQz9YIv67riFgnU
CaFeNGbLBJccao2wSQNNQjKN0cZ7NMX6r+tbhBBCCCGEEEII/T/mK5ZfRax8
hoz8yQBHRtyaNlyXPWRX9lrU9+s0fXWpUev8aKWIE7OlDVjm91t0t2vUAxbV
QCVvZEs6a85manPitbmRGsFwfdaoRTdcpRup5nHfSqzpxDXLZ2wkuSKT1+x8
boO25kTNOeHarNFdr7BxgPFoX51ycGPGgy2KsXLRYPn80UOvw+BpYIDoar9e
V0BKqpr3ML+yJspOLCn/5fYDiYwcfGjIJeEV2SMBqwrqtNAk+3xmLTi0UC8m
Q7bsWeDIoa3Z4BB9Yftcb5D2MxlzNt0gAS8Ptoi9qZR7PnX/X7KhRRJrymLs
ueAQQKMgZs760q6rOY3EiQ0C2s2na8WHiqhAGtXx3dnkRA9vSu6jJvdpRAgh
hBBCCCGE0FcBYyXLQ7H1gkSq8xDJDRJhwn+/mIMHjQIy8seSNVorHnGUwr6f
wPuvw55/vVsnf1A7b7xSGK4SDZvTeixK2P/L2IdvxA/+4/3Gp+9ukQ9V8UZq
skZqs8esgh73U3DoV7DvX/rqTT11aeM2YcQipG3zH82vmHpB3MqL1GWHa7P6
dn09AgBRuFKRe3fz3J6tcwfKs+45ysZZbm9sqOtw7283wHt/31Uu5M4SreUn
xkeRpv6L+o2rjXXwWHtiGp1DDLXKe4tzT7w2/cqLOZ/rxE+pofXcF+UkgWzI
hMYcUli9+AtPYRNCQzaZVumQRe3KaGM22B73J1P+qSmj/1wAjrwxroVmUWI6
Z3bi6r6k+9uYDnYBa5NEnQKwGT7Vp26nqJ6/kUCDcCLCSnRpIrl62KuT8xwi
hBBCCCGEEELoK8QsJAuh20XgEJBpaA0C1i4k43YaBJMi3sQHqyDqEIUbJKxl
XrQ6G367bhiADo/c35LRU6G4V6Ucrsrt3yS8Y9MDC/FEvnSv7X/cLuePbeAN
bE2LVUnvV2aNf7QEYsB2fzS8Oa2/OjdSlcZd6ZgtZ6xlYp1wEVjEiWlx/Ehl
zvBmQdT3HZYFGuDumqz+tanX10surlHF31kX5Vrp6by4WnFqI+/2qqzBtfPv
mnnj1pxRC3+8QQZ2FZil4SZhrJFHxrDZxOFm7Xh9VrwpnW4i65OTE9n48QYh
WNK4q4s25NKNAsYig2ZB1DKH+0rYIUsMl5oTt/MiDXK2cQ40zIjbVEzDPNYu
Zey8aL2UbhZAM7/r79KCU6ldFHWAStmVwv2cs4dKa5vF7UnaR3Y+Fv4XOdsi
jJLbKiGBZIM8MRkzCxqFiZFUGeDgihRDI49pmcU6crjDoIEfdaWCQ83aDdBc
tDOF2plEDf9KThKzBkmiMB7JxByCsWY+0ygFu5KxcRt8uoEXtwugURZ3yMNN
/Ah5cvSwlWtQTC6ce34cZFkt1iaDejV3mbHG9JgzJ7HglZyx5QLXVIMGHMoj
+fNDFHXze7mkH1qEZBV6hwAcEjBngTV3vCWPbsrm2oyZJeBUcZ3MNOeQxeTJ
BEnu0gSJKYdi7kq5HuZKIgXXy2kHdzpepD4HmoVhRzrTzD3SYrBJuZ7nfgU2
BZhF0ebccGMuWJWT9ZwjhBBCCCGEEELoT2AWP8yvGh7mVyR8IMnG5NRDN5JQ
gmmURuuFMXPmWGX2SPvPyMgoYHqt+b3lwlsVkv6N6f2bhPfb/o5kV0yYBug5
tPHqWsH9tbwbFfPvbxD0VgpHr+6G8dH+9zfd3MC/v1XUV53ZVyWL1YpjDbmx
ujzGrI7YssLW+bRVNlor7alJ51oLszBORy6vybi5Ouv6+ozOtbOH3v5VPArx
a0cu/HLuhTczetbxHpRn39ssGq4UMI60YcfcuC2bNUtH64WRhqyoNXWsMYOt
Tue6Md7Aj5gzonXZEZskXC+IN2bFGvVj9ekxEs5IoU4StmSNNyse2HOYOsOY
TTleJyQTORvUTHUe1KloK48kXXYp1xTjkMXJMCTB4K/l176Xe/Ul3vUXxKee
m7c9mdqWMvXS9+de/b6k68Xsiy/Nvbk+azzAg9ZsMtmwURFtzISWDKjXR+tE
4M3jSuLaIUmaQwI2BVni3iqEekXEkRuzS8IeXqwp711q6g5qZu/rIgiKRuv5
cZ9srGEe28QbdiQiIIeEtYmgSUqyowYpNMrjVhIDQqMo7siO2zLBmcs2pCfG
jIlJ5NWQy/hkUUcWY8+OtQgiTXxwKli7kDsYuOtqyAOn7n3d7PZkqvuFHGgp
Bruetsu5Z4BxZEJjNnke6kWsTU0Sp2YReYOkNRvMMmhQkRjKkUdysKZc1pET
a+RFm/nQIoF6KV2fA43c05votCYR6e16WWKSrABapNzFQjOfbuBuB59MurRO
9l8fQgghhBBCCCGE/hiWRH7VIIZGYSK/EicGz0gSPycB08CdOottUsRtOWGr
cLSSd8v8OMOMsAB3vC/3bMy6vV50b3XGrfW5g0c2Rllgb34UBRi++uG5JbxL
K3Kubc29tlZ0o1wRHb8JNAyEfn5tM//m5uzeakl/pSK2aeZ4Vc5wDW/Yyh+x
5w7bRH1Vkp5NosGtgh7v30AcgGEurhCdX5J3YaXo1Fvpdw+Wc/v6u96+9Eba
pRWKs8uknWuzrlcJBs386CZpxCIe2ZoLFjVrlnDdyFo0fXWa8Vp9pEYZ2SqM
1sgiNs2QWTlSJ6Trc+natJFmxbBZwVRJovXZg5bsMatosE4Sqc3qrZ81VJ82
vpn/YKuktyZ3zM4bqksbqRfGLMKYNTteLyHTABsUTL0RGrWxVh205Pe/Kd85
ldr2GAWNJtZVEGvKg1YZtGjBLoV6OdiNdJOSdYqgQR9zKGI2KYmzmiTjjQLu
MNKgXQWOPDKwyqkcacyFRg34peDSH6BS9lFThn9tZBq5cxmhWQUtKmhQhd1S
sOeRYV3NZIQVY8th7Nl0syDWLIUmDRlOxrXWqmcblFGriHVKYy0Ctk7JnZ38
qkkBLXK6QQGNBqjRME1CuiUHXAK2Rcl95UNd6s5pyVe+kwVNknAjL+wUQoMM
6vOYJlXMKWGcuSQuc4qijixwykjK6lSSxfkbVSMt4phVAc3GWKMQvKq4Xc0V
HGtS0i4eNEoYqxiapQxZFl5MVrYnDxUpjDsF6xXGXNk011EOFdPIn6znHCGE
EEIIIYQQQn8CErwk8qsGMdMggCZJYlvKNoonBTQq6KbsuEMKtpzRevlwtfBG
hTB+/1yUhnuHttxcM//WOvHtFVmXVvNGr38QB7ix7VdxOhyPjXcsV59Znt21
ide1TnK39mlgI7EYdG5YdHHV7Kvl8++tzxnYyB+uyRnYksv9HNmSOb5ZGKlR
PqiV91YK71bk3vB9m2WBZaKXVvAuLBWcWcb/eEnm3X1vARsfufzBx79K+/DN
tPPLM69tzLq0SdhfLhneJB+tFQ9s4Ydt8v66zKEa4dgWKVuX+6Budp+F31sr
GajMGd2aMVadNV4nGquTRWvzRmqlA3Xzw+a88aoZ4Q05kfIsujpvqDKndwvv
vkXUb+H3b+YNVIt6K/njVfL7tQK6hk9bRBG7lK3nbpAi1qKKeXMiThntyetb
Jt5NUdsoCrymsFdJu2RkdFOzhm2QR1vlrKsAGkzg0o43y0ZCueBWgFUKLSRW
Imvju/Jibhm4c6MtUtqrZ/x50GAMtyjHPfmBFGpnCtW/VEX7tYxbDs48qDeB
Iz/u4oFdBi0yplnBOBTg18acORBQgtsYccnJawSbxSQscmpISNWgAlsW6xbR
rWK6mdupAIcOmsugUQ9OCTi14cbcWFNWtFkODXnHDBk7pyR1v8iDVhX4NNzB
8XoZtx3zyEkBjQpoKoo0SyIeGRmv1SCNtmbSLTyoNzIeEbiV0MCdOo+sP9+a
l4jauI96koyR5K0I6jXxVilZKL4pF5rkZMWtJjVYTIxNCS0GqFcyTv5kPecI
IYQQQgghhBD64z3Mrxol0CQhH8mImolX2kkmR4OcbRXEHWQe2VC94kG1oKci
ffSMiwYYvnL4/MqMrpW87mX8s+sNdHQYYPzYStPQjU/jAN11f3tuZXbHyvmX
VgnC2/8JaBgf6jq3QnhtXe71DcLLa2Q3W797/4O10VtHwhfe7X+36nbLt25u
5vWUp/ZWCi+t499zfYdrJMYyJ36Zfmql4P72f3jwzsbRix8wDNB9g327N9/Y
t7Zz09M9jS88eG/NuOuF65WigT0/GTtl7337f921ZEfqcnvriu+F/nzwo9Xj
tw8M9hy7e7Sqx/etu2b1nU2Zg9UZ/dW5o8EXmU+33HF9626ldvDQksEr74x9
FHyw9xcDlZrOVWk9bT+MHGtkrh28e3RLX9vLt2t04xVZ8TrFkF0ZteWwNtF4
gyTenAmNWnCr+xcL36Om7qGmQasx2qqEZh20Klm3Ot5acG+p+MyfTf9YNfts
aea9n/Kg2QCNMmiVkr51kl7lDmZr8u/9RHbq2dwjuowLz2Re+5tUaDKCt/Bt
inImUyNLlbAp7+73+MdMc84sSr/9gxxo0YNLSnsVbJOxf7H45PeogRUiMD91
/Yeii0/lfFSccvbvZo+XaxiXJuoRkxmgzWqSMjXnQZ3uyo9Tz30t4yPD3Et/
k3nnF3OhdgF4ClmnmPFqwKk+ZsgIUVT3i7xEnKUHuwZ8sphPdneloPtFwQnj
7GOPZ158IYet4AowsB5Z2CUCjwYcau6741WSaz/IOJ438+oz/L5fiqBe178q
6/p3BLeW5gxVSDq/m3blxex4i37UxyMPdotuzJkbW6++801R948yEjmbnAxR
m6znHCGEEEIIIYQQQn88i5i2iEjE0Swls8NaPsuvJgftEEOrlG5SQrNktF7e
X81/sDWnb++/sQDxodsfr5F3LMvuXCrqtH2TBqD7Oj78RXrvkcY4wK1ty84u
Sz+/NPPcSv7o4TqajvWeq+94i8ft7FitHjm4GZghgBGCGWeBgejN3vcWXyvP
7lk7/8Ya9UDjd7gzAAsnfyk9vi4/ciEII/0sAw+4s0AMxgcgFrto/2HPga0Q
H7l7ePXAKT/EeiHGPDhq7tmYNlQhgZMegGGyBHxsHKLjiYXlx8c/NXdt0t7f
lD5Qkdp7rJqN9N35tAaufgzQFyEtR9g4PPhtee+uNTAyyp0nChAGslp9/85/
7F3PH9wkum9TRupzWLs42qiAZjk06cCjuftGzv4kanfyVHDpY648aNKCWw91
mkt/mb03JXk3RbVPp7YlJx2gpr6npMBcGnYJmWYFOAugueDO/xK0pVPbqWk7
pyW3UdSuqdSO6RTUl4BXu5+i9iQn3fm20Z9K7aPIWvFcUwdmpByQUNCaH3Yp
oaW4+0VRaDZ1+69Upxakh2ZQeyiqjUoKpUzzT6d6/lEec8rGvCKWpGHq2OtF
h3Kn7ZpJtSRRwRnJO1NS9iRRxx6fwazLB6cu5tZAS94RQ/r2ZOraizkQUDCN
Sq4GsEsufXfOjqlJu5Nme6dRzhnU7qTkd1KTun+cE+eu3WmKWuTgyxt5I7+N
R7WnJHEX0jaVakmhTj+ffeU16dtJ0869NH9whco3ldr+GBXdUBZ1c/1j4Pot
5pbd/H7O/inU4YUU7VBBi4JuFE3u044QQgghhBBCCKE/ikVMFgv6LL9yykhI
MnnIjLNmBdus5moLN0gGa/nDlZJbjc8BA8CMnqz92unluR3LpL17ltIA9467
P/633O7gv5El3E/uOrl43uVl0lNvSYavHOaOvrnn3zpXKU4vy7q+81cQHqcj
4Qt7155cmdlZqe09uBZiAA/uX3e+eHnprOvLedd9r40yMRZiF5eJji7NPmH9
q3POn9/4OBBnYsO3Pzhr/8mnDT87siLrzoE3WIDx7qMk2joT7HL/7H79c4PV
Od11RdDhZa8cutX+kxvrBDffyr6xewkw4xDtueH9eecKcdf6+bfe3QRRho72
Dpw/cLnmiXNL5Lf3LWVJigXMWG/3wXUflktObtH1f+RIvAfx41s1BT3lvLtm
xbiFxzgU4UY5WbKpNQ9c2ntvCrZT1I5pU8BlIEFQq3LcZbr3U/lOinondcbA
/9aDvyCyUfeePukg9Vjn3/Fptynm4+5sQfjNAm8qtSM5+fRfzxhbL4fWksgG
U+fLWTGXcaRNH3iM+i011ZNKdbyijG8tBG/ZpVd4Xop6P3l+1z/kxtx68BVc
/5ZwPzXt/fR5B5TU8N/roblsfL3pA8P0A1TybzMpaH4GPCpoLIw16/YoKK7I
k2VpTM0CaHpu5BcLPpTP9FNUxzfSoXlB3KcHV95RY9quqclXv5fNekoj3IX4
C2+8lrV/CvUeNXvolQIyB7CmbOBvTTuo5OAcKrKmBNzF0KqP25TvziYxXceT
ObGaQnAVPfif6v1p1O7pSQeo6Vd/JIKGr70nnMKdveenJPLiniimSQMu0zHd
lB0Udek1Hhn91aqJ2UWT+7QjhBBCCCGEEELoj2KRfpZfkcFXk51fMS4xecFc
izrWQPK0EatoaKvyaqWK5FcwftH96ulVopNLJJFj9TQbv7Zn4/Ffi05WfYuF
WOTBzU/eSD/7uuTTt5QAoxCFS62vnX49+8JSZbjvPA1wcc/a66t5p1drry6b
d3K15u7ZbdxhvUctJ94ydiwRnW9+GcgYr/Erv8k5vzj79HLB8cXZd/e+ATSM
XX3v/f/N/4A70dLs7n2LyfioKAzuXX9ide6V9RnX1uXd2si7WSMacD51e73k
enne5TU5t1and6xQ3nzbDGz03ieujlWSs6sUPfvLWYhzDR7forv8m/SO5byT
K/iR/ssRAPbWByff0HctFpxbMu+T2q8BHeUKvmJ/7u5m3t066XBNTtyeN9ok
hyZ13K1kW/UPlqi2UdSOlOnQXEi7DeBXgddwQJC0K4ka/LWS3mGI+vTgXjBQ
rd3NHZZGQePTsZ1CaNF+mj9nB5XcUSgGV1EsaIwHdXGnEpxlD7wyaF/wPpV0
kEp9u5ACVxl4lcMhBTi/fuqJrO3J1LEFs8FXGg8pr34/Zy81zUdRQ0tMjF89
GtDBDmPkTd3bU6i2FKpnlXF8mxY8mv5XNaFp1Hu8aVC9MNYmGAnwIVDWu072
DjXfOYeKVphiHgMEdB8aU9so6saLuRFPIWxTgVV/QJHiSaa6X5aBp3CkTTay
TQ4tZWcen719CnX2G+kRlwmChVd/lrqfStkl5q7reXDr4wER49Xc/LF0d/L0
3UnJp344F7wLu/5ayJX90aLHwJMfD+Rw/QNNC7ZNo/ZNmzJSXhwNKMlaWK68
yf8DRAghhBBCCCGE0H/KIgSrkGy0KmmnnHUpyYLbLQryczIwrQTZaFbQjXnj
9XkDNbI7W0SxroPARjrftX78esaJpbLI/ZsszVza+uzJ/5157M3ceDgCLH1y
U+nx36R1tP4IgIHY8JHl2rO/zuqyvcCywMRGLm+Qn16jurRSdXFtzuWVkquB
nwMdY0bDH6/MOrVE0dn4Mpnwx8KZZfxzK3NPLpecWMG/u3ctd5aRS8c//k3O
kd/kfvKmrHv3Rq41iN7rWq09t0bQsVZ6c4v4xgbdvVpxT43k3qaca+X8y+sl
nW+Jzi8TXGn8GdDj/dePHVkuPLFMePud9Vz7w1c+PL0898QK0dk3pZ8uyx25
/AG389b+tSffzDm1VHxyiaBjKZ8mlTDX3N+/vl5yZ4uS64GwVRltkZKlqzx5
4MrvXaLaSVF7KYrx54OngPbqB1cWH0xK3TMrBdyPxwJ68BXHfRoIFbyfmxyY
ST34pZHdWTpYYdw3ZWp7MtVr07B+I7Ryh8nArYNWA3jyGZ9pL0XGLN3+ZwHX
ILiLyEpTvvzOV8T7KOpD43zwFrGBgsuvklFev5VTtKsQfEZyjLsA/CX7qJSd
SdT95SrwlnDf+mTBvANUyuVv5tJeHbTngdsAjQuYUOFvVSnbKKrrZSntyQfX
wiNFqbuTkq9+TxgPGMFVNrxGHZpG7ZlKgaUoFlRAaxG4DBDQ3v6FdPdU6u3Z
M8BTAoGyjw0ZO6nkC387H1pKYyEN7dSBtwAcJaEUalfSlMsvixhfSV9F3m6K
OjRzGjiLgWvco+9ZoglRUw6Kk6HZxPrlMY8SHEWT9ZwjhBBCCCGEEELoTzAx
f7A5D1rJ3DTWpSJvnWvJIz8nA+tSTmRobIuSaVKF7aoHdYq7W8X3P6yDWGzk
8nsnVgiOriwAJg7hgY/eVHcsER1byh+8eJQF6PL98NPXM67vWQ4sDFw9cux1
5dk3ebd3/jMwMHzv6pnV2R0r5J2rZJdWiTrfyjhZ+zXSCAsdW0tOLpF0Nn7/
s/yq4y3eqRXSkysF9/atI3P7Lh//5I3cI29kf/Km5MbejXQcxu51nFwiOL+C
371Bcq08+06FftDMv7s5p2dzwa0K2Y3q4kuN/9/Z1teuHaqByGDk0oFzi3M/
WcK/eWAtV8nQ5cOnluVM5FcnlvNIfgVw+8C6U0tyTy+TnFoqPL9MQPIrmMiv
ZIn8SjFmeyS/cuffX6relUSWqGIDBay3gPGZrvzr/NZp1PH82eD5MwgUkPQp
uDDmKz6jEgYp6sqPRCNB491fKg5QSW/PoqDliZhbC04d+CTcTU/MrdOz/vz9
ydN2JSf3/puUIYFPEbjVrNd08SXhXor6yJQG3iLaZ+p8RbY3ifpIM431FLNu
HZmI5/n3+ZWvlGvqIH/aO8mP9fyjKu7TxD1yEkM1l0SD+s6/5O1JTjnzF9ms
rxA8Cw4bZ+2gqO5XRLSvADyll3+e3pZEHRWlQmspu01NFrxqNUBQB3WP755B
7aKSxqq0jL/4UM6s3UlU378qoKkg7OUeGAN4DFy3HJenb6OozpeEsP1JuqX4
QCbXRUkja/TjQRV4NJ2vCnemTOv482zwFnDdGPfmQVP+ZD3nCCGEEEIIIYQQ
+hN8bn7lVHEfJwUJr9ykGK4MukUdaVQNWhS91ZK7O/8hsQRW/6El/M7Wn3Hb
Y9eOHF8sPbtEeHyZoPdAxThA96HKE6/z+k74ozRcPWQ/92vBx78RXHt7OXfw
wOVPTr2VeW2trHujvHuN9tqGuSc2SIElCdblxu8dfz37UsOLE/nV2eWC86v4
Z96Sn14l6j2wASA+fOXIiSW5x97M/nSJ5M6BcoaG/qtHzq0TX1gh7lonubEl
u3+T6vZWwa3Wb4Q/qI+GIxCNJJKxKB2HOED/xYMfvpF7fHHujf1rJvKr08tz
T64UdyyTnlopGL3yPnfaO2+vP70s58xy8enlggvLhYnxV/TV1pe610lvbVHc
r5GPWhUkv2rRk/zKU/BofgW+Qtaff/0FcVsy9d70mUfVc4+WzPjEOOsTdeon
BWnvzpxxkHrs8vf58faSa6+KD1AppwrSwbuIjL9yGRiPiHYqoUUDXhO3ZzdF
7Zoy5cEbKgjls66CifFXF18S7vldfsX48ztfke1PSf7ENBv8ZZ/lV2zg3+VX
ECjYnVj+vW+JOhbSkIeqRQstxvh2bffLkj1U8uH8meAv5Y48bJy1k6KuvMJn
fCUQXHTlx9l7qJSj6nlkUJlPybTqoVUfccnBVeZP4a53Wv9qDQQLd5BF46n+
Fdz+YjakZVv1jFc3HlSdUGXsTknqfCkX3KVsoOjE18k0w5vfUwy3qbhvHTHO
5b7Y869y1qcHp571kZcYTtZzjhBCCCGEEEIIoT/BZ/mVS01yBvfD/9Fz25OC
FDChVcU41dEm9ZAt736drNu+EMZYYGOf1n3t2v6qcBi639585PWcE2/yT6+X
3Wv4uwhAT9eHR36tjPd20gDnWv7l9K/mfvKm7PqhTSzExq4cvbBKemOd4GqF
5MYa9Y3NaRe2ZANZNgsuu/7H8cW5E/kVy5D86sJqwbnVyrNrRX3vlHNnHLr8
0ZkVghMr+KeWiu8d3JgY3HX4zApe50bVhc2qW1t4A5sl/cGXoP8TEojdv9Dz
Xu2llh90NH27+9AWoMMPOj/8eLHm+GL+jX1ruQNGuj46u5J/ZrXk4krFuTWi
sS4y/uruO+vOreR3vCU795b40sqH+VWX66Vr66U3N8sT+VVemKxOpme5nknk
VzuTqL1UEgQLwV8EgYKebyvfTXpsPzU9MJPyTKf2T5uxh5rVTk13P0YFp1GX
fiCC4KKrLwkOJlFHCqjxkGxi/mDMLU70th58RiZg3EGRpd0fLNFAKJ92msjb
AP0Fl14W7U1KzB/0FbNtRZdfle9LTvrYOAuCC8Br+Cy/2vtZfhUo4+p5m5qx
k6J6V+bFQhpw53OnYJya6La8rh+K9lEpH+pmQPvj4C89VjB7D0VdeCUHgk+C
t/jSS5ncF48ZUyFgYrwqxqvjiqR9GgiWBqZT71Kzerja2or3UlN3T6FuL+eT
kkJaukXLHTO2Q3lKm8FdwtUfCMBVGm8z3n1DwdXwiSw9vrso6izlytuVQkFj
KewqYRx6kgd6FJP1nCOEEEIIIYQQQuiP9zC/aiHBEeMi06we5lqf5Uj/vRiX
ZmKDq41xqmPNmhFHXp9ZdmULHwbuAcC5tl88uPwRsHCh+UcnluSeWsbvqFBe
WS3nfhWPj7y/+s+BiQEb/3j9s0d/mXZmufz2O8viEBu/dvrcSnn3BklXhfTm
OkX3ZtGFagUDNMThdN03jy3mX3R8j2Ef5lcX1wg71ijOrRP3H6wAiI10fXTu
LcGZNcIzy8X3DpAMarD7g0vLxZc3STqr5Hc3825vVjw44aMBBm+duVJt6HhL
cGFZVsdyQUfrP8UBeq4eP/ybnM/yq9GrR86t4p1bK+tcpTi/7mF+de/g+vOr
+BdWK86vllxeJZ6YPziRX93Ymhh/Va+KOGXg1JMb9Hn51ZkfZ21PSX5fn86E
noq2F4K7LO7RwfZCcJVA4Flo5o4pvfwafzeVdEotBN8zZPl0pyHmlgBZ6koP
Lh0TMO5NmdJOUUNLtWzQRPIrnw4Chb/Pr/wlsK2k8xXZToo6bphJcqr/kF/1
rlCT/cFC7iu7kqj7S7S0z8Q2a9lW7jAD2248/52cfVTSseLZbKiM9hYfM83a
RyVf/qEQ/I+zvsJLP8jaT00/bkoncxJ9BsZnIAtnBU3gXBCckrSDovrX6Bl/
/s4p1L6p1M3XheApIstYefJjXm1su/GUJouM5vohD7yldLuBcZbsnkXto6ZG
mkqv/0b5DjX1bFE6HTSFuZrdJeDX0q2iyXrOEUIIIYQQQggh9CewiFmbhEwY
9GgSY3sS8ZFr0uph3VpwaRM1kNCDbtWMNqgGrIpblbnhjv0swIVDTRAbBXb8
yOoiMttujezUWv7VVTnjtztYYK6+XQssRPsuH35D8PFS7enFuRdb/waAiffd
PbZadXWjumuz8vpGyeUK1YWmb5L8ih7/aLnh6Bu8h+OvWDi3kn9preD8WmXH
esnAe+UA8aErR86uFJ5ZIzy3Utrz9jpg2KHuw9fXaq5sSL9ZzevdLL5hLYKx
PmDgXujvLyyTnV2uOr1SdvTX8y40vQrsyEjXh5/8a8bD/Ioh4686VvM71sku
r5Zf2CAcv0rmD/a8u+HiGuGldYpL6+Rda6SJ/AqueF7u3iC7Wam8X6uYyK/Y
1on8quiz/IoJFYOvBAIF/YulH1DTD2fNgtBzEMoHbxmJfTz6SJsm4tUljikd
WKFpm0IFp1Lg5o4pA08pWZnKayBhkTcfgoW7kpO3/S6/IvMH/Xrw5V96WbSb
oj4qSAdfMbQXX3xZupOiyPgrfynrNbA+LXgLJ/KrHSm/z6+OGubuSU66+ooE
fI9DgDuAq6GMcReefjrrwJSkru/yme1lEHjimGnWHorqfE3EchW2FT94S+Ol
qLczp0Lz41zj3HUxnnzWnx9fW7otOWnbDK7yJ2DnEx+oZ++gqOs/kkHwCcbP
PTAFTKgQPE+/nZq0N2XK+ZczwVtMBphtKzmykGs/ueffdBe/Jd1HUd0v8ePb
8uNuEzi1ZKZqQDv5f4AIIYQQQgghhBD6T/1BfuWdyI4SQdZkIPmVR0deipfA
uLTjTaoH9Yr7FtndA6sYhoHxYWCB7j9/ZLHoxDJ+14a8jvWCm5XSno/cwMaZ
0Zvcb3vPtB36ZcbJlfqOJTmnqwogeh9oOO9+5dIa+cUNks514vMbtfcPO1iA
8K0PziyWfrJC9HD9doCOtwSX14surled3yAdPFQBwAx3HT/9lvDMavH5VfL7
BzeQMVTdH3auVdzaJLhTJbq1QXK+Ug/0CMtEb7leOLE+6+SanOMrhIdX6HoP
mxkW+q598sFv+J+8Kb65f91EfnV+jeDCBkXXWuXFjaKJ/Kr3vfVcVZc35HWu
V1xdJ6HJUl/Q5X2le6P8VlVeX51yzK4OtypYp5HcIG9x71Lto/kVGygYbzaE
plNtSVRk3UJoWwQ+A4S4ntSCXwMOIwQXRYPaaG3RbgHlf4y69TM97S0F7wLa
x913E1mq3VfEthVtp5Im5g+ywcROP1nU/dKr4t0UdaQwY+KYiy9Ld1HUJ6bZ
LHderwH8OvAWQrD0D/Krs9+bv4eiTpZmQevzTHvBWCAPgs+B65ltc6htFDXw
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
heHtJvLb0IJwe2m0/Int06j91NShTYZIu571FUf3FEDbU8cLUt+hpnX9VMgd
STrKnR/3q0g73kLuXP+/n8//7r/TSfp7RAghhBBCCCGEvhIsj+ZXBRM7JzG/
+g/yySgdr4lMfHPnxxqkbMMCurGEbSmJthhHnHlgL6O9C4YbVRDKB3seNOeH
G7QPXCQCinq0UV/+UIs+7C0cbdWFXeqhRvF4s37IrBy1qoatcq7N0RbZmDMv
2poPTYXRVnnYpYq5SyMN+bTdCM0l4CXxC2fElz/q0g+3qB40KRmXNuLUR51a
xltA+woiLgOH9hRFncWj9sKRVvlgo+y+VTPaquHONWgVjTcXDzaXDDXpok36
aJMs5pbFWnXg1EKrOt6sGXcVxhoKuGsZc5Mgbtxlot06sCm4asedmrDHOObR
jLeqwGUgS1cFFpHX7bl0EDIyIRlsU5KhUIm7Fvdo4wFjPFRABiy5lRDKi7XL
RreJycAnjyHuVJPODBYkJmaawKUnDfpNECggg5qcJmg1QIsOvGWRNhUdIokT
EzDSfgO3wYa00ZCCLInWXhBt14+FVFG/joy5ChrHAnmkWU/iLYTb80hJoUR5
AQN4F5IxY1zjoRLGZyKRVFsB7ef2PAnNheAsBFdh3GMg46BChqhTD+6FXAHx
oC4cIhfCFRZzqSFARkmRAM1dHPfomN2m6DZTrKX43grVmb+aP7TFCP7nwbuI
3lPYtz7/t7LZe6ZSnxjnR9354e1cF32N9T4OW/58+1RqN0VFq0pi3PVyD4mn
kA5paTJ5tjQW+uo85wghhBBCCCGEEPpiFjFTLwFvIr/yF4A3H/ymxIywyUFC
lUf58ieE23TR4IIxnzjuL44EVMMe1ag3Ede0KcdCcmgv7PcoGX/hgEcV95eM
uAvjXkHEJSUxRbCQCRjDrdpIa37cvTDcqhhzqbkvjrr03M5Yq4GMI3KWgaco
SmbAlTFNpWxAxwTFcY807FRFPVpwFoRb9eAshdYyxl8MziLyVkR3YSIDUSXW
1i6LuRaQ9n161m5inJpw86JocwnXVNivHmk1QpNutE1LexfQvqKRkG7Ib4y6
9bRPE/aahoI6stqY2wit+eA0MB49mccX0rHehYy3OO420Z5Cxp+fWFeKnIsO
qGkfd5sWQUsZ4V3EBEsjPi0d0jPb9GF/Hpmm5y2GlgLwF5L0iWs8YIR27rbq
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
PqZ9w77iSZOZ1GtuuTSf4asTApYEcqZTVX5gneb4j+79yHDnB0l3vKeIbvm7
+/t+u4jMKp8t2VeTQMY06UTuNX9ZvDF85eqAKDy8smQ05S6xMub6ZkTH8oVN
q++fWCuXzqluMvyl6//L+7NfsRtNqD77An5+ndXpZEsmo5IvT5ysjg9WJV3c
F9tj+t6Y7fvj77/oO99AXR+M/nFbp/Xv23emDe+8r2vfg2P75ePVWaN742hv
4vAB+YU3f859stvXXO97v2ik6pf9OxKG9z4ysT91dN+iybIk/8H04b1LRvel
DlQ+Nfze+omPtvRWav07FP6yhMn9cWMHVWOVGt/e2OGdi3stP7j48TY6773w
ScXwW6/17ckZ37VodPfSiT2K0F7pmy75KplQnfqZ7f/MHoIQQgghhBBCCH15
K3o4UPIIVSeHZ1biW2OF+KZYMKVemp98+brR6zBj118j+8xn4syZvD09UKx6
V3a3i81xsRgXY/UsUrw8wm6rmcVo3xOcJY3M4ROnf+bApD9vflWTJo2wpDvK
pj45KJjTyaKqj4xyzmGNv1rI27SCVTvpVExUL5TOrP6Zz+j99RN3y+t2nVd4
an71xb/CpVtuNBxTB8OHmQnmZDJnUHncxSotXTxGAZ5okgQibqqg/+P9rcWx
fTuWjO5MHd8pn9y5uH+vKnCumrhJCk6KCwvEEzdx8YM3mnYk95cuHd0fO7wv
dWivYmhnUkdlLvV/yHN+CoXand8fFn+7PcW/e+lIZepYZfzE3oWTb75AE+3S
ergJgcaJQkLXe62m1Z274gdLUriyFH95SrAylatWXNoZ/op7LEIIIYQQQggh
NPObml/VpIRnVlOzCGl+JQ0u0HSWerlLt5A5TSzkzBp7Jd3ydVbL5jpmsROr
v9X93xcHf5PV82+JLSsWOxYwOrCcs8rJlEbVCrLH32j9vFE61Oo6t5vCJzw3
XZ5KSQdfqQSr2stm26LZwG/kZDFQZQ5v0fDOJJ81bmqrvrjyv/Xrc80+fGVT
06527cmvwrdcOZH7tU9f2s6arFCNuEwKZ4wPVSlp39LBci2NddHwSNf7Rc2m
51ss/zre87aPiMYnO13/s3nr4p7NmaPblvbsXNjz/uYQ0Wh/88cVz366WX7c
u2Y8OEihC12Of+9YHz9eGj9YmtZfurS97EnqOcxxNCquhOfPmJ5p2pzQX5Qw
tit1bL98dPviC1WrJy+eDRANvlN6al3WuT2rhk64xGWHuus+3pnVt2NJ//5H
J8uS/eUyrlohnYveePnpm1Kmey9FCCGEEEIIIYRuRlR8dX4l/Rh+74/51Qzo
C8Mri1IsdEBVtyCqnn3NcScbXp8y6k4KvqUYcyaP1CeSXevbrSBnpt+WLB1D
5cgcqV4qHVN0pWu+re9z39N3dRmLiixT19OmPjkoWDPJprGz2eZoNrRGQa4M
sqt8VkXQnEwmzY3W/2f159z32mWuXSw8N7vUlcXEjf/i2q5396uvszmdHOKL
IP5K5q9QUGXaeEW6771XW3Ykdu1+rG/tY+0vLfl4l2F06F0iGjn//qktj3Vs
NfRumn96v0Y6VirAN1X/uHn9Xd1r7mlcm95z5CUKjtO5uvbipAtFS1p2KgbL
ddT3NgVC461/CJKPuOHzpn9q3JLVuTWxd4dqpDR5sFQ5/vF+juhCc90n6xe3
rU1offHBk5sLaaCRJoYv2F7oLYrv3pU0ti/JdzA1VBWeX0kDw/D8yiyb7r0U
IYQQQgghhBC6GV1nfmUKvzu+dj7wJeqGr8N0b9gXtvN68ytreuffPeCJZM45
kRPrtJN1asGSQ2X5ZNFRtZ6rThcXCN89g0wZvFFFDh1ZM6WkqZTq+sOiq2Or
cFeWn7o9PLwiu9YRycwRbPg34m9zQ6Ysn0t8LDlVGsgm3qK6miXjUuYbdGWB
a+9lVd14+czPZxYXVgnm9CtdXqG4qVlXn+y1fe4VuDz+Cr+2KX5bonBQvCVr
okLmq1QFD8aOliUFdyraSuZ3lKa2vZZwekNa9zsHKERE/saXUxpfj+3cuLj3
0IuceEPvx2fWJIvLnHpD2fzikk+366XFBDpetrJzQ8L5bclD9n8LiHfrPveH
4jTpVzw17f1J47rHzm9J6tiuGCia17ovc3LkBPHBPuP/aFu/9NgbSU1rH3t/
w6L2T3ZRkIbfK28uTh4oiRvZmzhZJrt2fhX+J5VN+46KEEIIIYQQQgjdjIrm
caUPk0kmiG+KzZeObBEs8unfsK96MsGexteEJzMH08iuDtTJaFfBoVl3WBj7
9Fd3klFHbkOgJp0cCpJOuq4Ql+fEK9VK3pox7lbxDj3t1pz91fyThfd8En9X
7xOy7n9NlO7l1JBZIzhSyJx+4XfJTT+8v/ONBX6nrvu/PdZouO+Q/LZTP5hP
m3PIqAm5ZaGS9NYfxDb/JN7CYhxz2R+XfaPju0vb/59Fo95EwakI2vU9azJO
5D/wR9k9b6vuaf9lkrj/8EeT/BYV1Rj8rqwzz9x//ulHeZe4m+Wc+vsFxzLv
CXrUoZoEoS7Nvzv7/HNL3ku97cO4u47/6GvBrZnkNIy748iSGXSmjf06/fjT
3xpdk+j3prX9U9ynOYl/SvnGye/eFdqhG7FpyJYmPjqZskKm9MnatFB5auuv
5n9SeP8HSXcey7/35DOPChVK3pxCzjSyafp/o/zk8bv+lLDoQ/W3+p9Xki13
wruYzFrp04JWuTQVDL/gU0ejhWoUgapUX0XK8H7lyK6F/TtUHevjP9madOHQ
GvJxAW6i8aXE46/FN7/xaNu5Bl6YHDu65tRr8Wc3pJzZuPjY+qSTG1KpsUEg
anzzty3rYzs3Kpq3qUJHnmvennns5WSOeJ6E8weeOf16XNOmjIEtCb1bH26s
/oE0GBPGTq5LO702sWWt7OT6R85uTBoo/9EkkX984MS6pJGShIFd8uF9Cn9F
eH5lkkvfLCn9w077XooQQgghhBBCCN2Urju/mvat+sonmFJ5m4LMWYJDSVXS
UUPj1qSe/5XsjJzlmh05sSVVmsDYMzlzprSYMY1sylBNKlUryaEdN6aQK3fg
tzLPYnaEzbUwZrqVlTFmmcPeUc6m7dm8uyBkUZMl79MfLHDOZr6ndO+l32uL
YA0RrJZF2CNY9VzW/0IGZ88Z/H2yeN3JmDdirpWxmjuYI4q9lRxDluV08Knj
332gjsVYo5hxDvPMjvCwiGPx99IGDdlVgl1HtuyaOcwym9GLy9x3MWMMM0cx
wWggT47/VdXb37pDXOHBGOacPcfNIqruYO0/XUwug/QULLqmp2Mr7ma93447
I7vXPodVfI1ZI5m4he6o6P5fqsim52sypCduyRv6Z0XDnbNdLMrGohyRkQ4W
YRIfsWIF70qnquXnvr9YfJRaNrcmmhmjWR1jH8VG025dyKGTDtYyKy7Nr8KH
ovEmJWdMC1bLA1WpobK0kYOp3cXyzuL0c2vn939STQINthw982Lsx6/FnX1t
0WD3n4hCQw2/O/163JkN8ec2Ljm1KenspjT+pJUTQq3vbWxaF9u2OeXM+uTG
HdoT6+JPvSYLUkD6Vdmzp9fGn9kk692U0Fe0tMv5D9JhWeNdJ99IPrcusXld
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
evzt5LsdbE7HTxL5o1qy57kYq45mPf87hcp1ZMoTt4GMT9beG1UbHTWxRs97
V5BlmbgY2XN6X5LViw/69VvJ/ARvXtb097F1key9uG+SK098dkFzOh3O5Gtz
jbOZhbHeVxPI/UTv/1BYoplrHuMd+gmvkmr0fG06b9OGHOk+d2bXPy2pZREf
JnxDfDXIs4K3F1CtjuoLDituF7eq7fn5AWsGWXMvvdpT/wvhrynkzBnSaeHN
mZ0Hk/p3JI//oYhokgKD53b+6MTrCWfXP3Zsk+LsWiUJk9J52iv/sWljXGux
rHebrHNHYntJ6oV313NEwdb3GjfJzxfHD5akdO5I6yhJ7CtVC+QP8f726udP
b0w5s2Vx04bk5m1Zw+++QUTjre+d35jQsiWlc7vifNHSnuLUrpLMEPmI53qq
nzm1Rd5ZmtK/RzF+UMkZL82WLw2cp31HRQghhBBCCCGEbkLbHvj8/Mqqwvxq
2gvZM3lrBhml87fzNrX0ZYKe3NPfecTFWN1ds8hRILj14cNvNJxNKTgypT+f
OYOqtFy9nmx5lYw1sNmda+LJlEtuOZlUZDII7uyWny41MvZh6gNBeyHVFZ5+
domHRX0ou4PchWTPJKNWOq/7Ua2dMTebc+ENNWdaJn080K6zRUZbGev5XTLX
oOLqMk88/7CDMefXZn+Uevfbyls+SLnzw4Rv/FF2V11MpCuGnfvpvQGvmqzL
7ZGsKor1bEkkd47PnTnuTifHanHb6qPm1i2ce0TxtSPKue+m3/FOytzDCbPE
B7VFx0jjJu/Ktp+l2Bj7WHGXdDyYI4ezGDhHJtlXuBnzsujRNXGCe+W5ny1w
zop4M+52cuWHXFoyPU41MjKpyWYIOXO7n41zRDDbN9gH8jsPK+44nHLfu+r7
jiTdYbs92hoVeeoHD4fcWWTVX/OaSzu/+JKGTOlBo3J4X1p/jbrP/k8UmqTQ
0MD7JU1vpJ7eFNuy/rHTWxWdWzLJf4GnYHPNPzRuim8tTe8pTm0tSWraGjf8
XolANNnsOL81rbUosac45fz2tPaS5O7SLIH8nBBor37+zKbkxi3xrZuSm4qV
g2+9RES+9j82rk9qLlJ0lSjPlyzuKk5uL9YGiSMh1F72neai9M7tcml+VZEe
MknTtqn/1vA/7PTvqwghhBBCCCGE0N+8682vxOvTv2Ff7aSPAUoDpSxyZnLW
LOn78ry65p8samDRNREsVKWVPiXn1EpfTehRB20ZIWu6NI2pWTHpUQtuvW02
O8RuGXopg6wrpJNTGdPFxSYbslr+PtHFoj+Q3UauFUGn5tzzsXbG/iS/N2Qr
lOY5Tr3gXB1wqo6ymCMssnPNAjqUN+nRk2e1OYo5I9nI7/PIuZzcy479bFEd
m32IRbpYTB2TToRVHckq57LDbLaDsZafxomrIsf3rNHMzeb2vBJL1flBbzZZ
88a9StfcSA+b442IaGDSqdet0nVWz5iDza2Yw8ipCtWqTj23xMxi3k+NCNVp
yaHmHbnkMZBlmS2G1UTMvfBqilC/vPnZBW4W86fER8iVf8GdTN48sseTK95n
yyTHqpa/i7VES9tsZVHOCPZWRKSFsbfYLbXig8awzp8mkFftc+jJdmUEJI2D
OHNG0KgM1KT5Dmh6D2RQ73sUoqG+s59s0ja9sbS5dHF/SWLjVkXbBsX4hWaB
/F2uf2nenNy0TdlVlNqxQ96+I2Hy44MhjnqP7WzakNxRLOverujcr+3erWzd
rOTIL1CovfK5xs0pbVtT27fIzm5N7jn070QU6Dx+bl1yc0laR5Gyc3dsz05Z
x/b8gPgL8p8pzW3epOjcLh/Ym3ZpfhX+DxW3lrdhfoUQQgghhBBC6KvRtZ8f
tGukj63ZsqTJCZreHFnSFNEuHVglHWflyuFM2r7tiTbGamax/n9OFBcYr1WQ
q1A6f5Q93ueVk00bsqt4j54c2pqY8GJrMsmWFz6leQ6ZdVSraf/Rw+Ia3kz7
5sThbPIUNj+d2MCiP5LdQc6VnEsdcmb5pUnR8poI5o2IGl0TR858cj4pOHM8
bG4tix74DwV5V5I778w/LDCxOR/I7wqIP3pXkGsZmbPJUSDel2zZZNX4HflT
6/GwyLE1S8UNEOyrxB0s6Da4GKuPmNP5Ugo1FEifH3StDI+2VpAnV3AoqXaV
37688blH3Iz9QXYfOXPJIe2WgtHgr812zGGHWOSFl7LIm3/65wuMjL2v+BZX
rwvWqagym1xJ0gmsTLnkLfzTLxY459zyQcLtJD6j2lxO3Db3CsGRL7jEDcsT
nxHv0AftanJIRxsKtnRpkGXO4szqiZqMofKkkX1LB0/v8xPRUF/Lvp+fWZcg
HTG1PU2aLG1Rtu5QUquN+GDfO6+2rY/r25Tau1V5vkhxvlQxce4d4mngrV+f
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
OmTTSh+QvLSTaMP/rdO/ryKEEEIIIYQQQn/zrplfCU4DSUlvigWXBk1j0nmr
XHpyagS7dOqn8IFY4RvtT4RP2K7l6/QT9myq++HIWsX4a7LBLalk/ZHfZqDa
LPKqpWW8udIXArqyB/am9W9Ip30ryZxLhzR0VBf+6Gg2ecQ/9BNU/gNyrBaO
rqAaLbkypY8QHs2msm9TxXelc0+5C4WGfOmQPMvT0qmivNmCO5u8eWTWkOdx
Mq4kTwGV5w69kjHxooYrySHPyqBHQ14VWXPoaB4d/I60HmeutKqGXLJlhrwa
zp3GHVIKXh2ZV42WqDtei+9/Wc45s0nc+Do9eZeTW8u7dGR/MuiWi2sLuQtC
h/ScXRc8lENVT5P5B5xDfGqryFnos6YHjqhHDxs49+PBvbldLz86XiI+/UKq
FdeWJ7gK/PUqrl4TqskdezG1/5UE314NOR/nHbmcJ5Ozy8ip5Fx5vEPP27Sc
VRM0Z41WZLYdyD+2/6nWTYln1yYcez3+2PqU4xtTTrwe37g+aWC7qn9vet+B
hP59aUO7VvTuUvQcTGzcoW3f+WS/5cenS1acLVUPbIq9uF3RuEc1bMzpqUkf
M8cKdt24LWd878NN1bknKrNby1KGy3XDZdqBCvW4MaOvRjlco+/Zm3L2YGpL
aWFf+T92HShoKVW2b04U/6YXdxs6y1JGjMmTxqyARc05wvuGM3wIVnjaPO07
KkIIIYQQQgghdBOiooeC2x8lW8YX5lc6NI2Jf4jwwEorDSsuJR0ax9kyhHqD
355F0vcM5kzW6wOHCnhnIbnlnGflZK14x4JJj55syzl3WqBOJ51yypMXdOVz
bgPV5oWcuT6HnnOLf/p8n1MV9GaTSzfmSRw7pCJbDrkyyJ7t8yaTO4/z5vjq
lP7a7BG3itxazrN8slYRqM0QXGqyp5NFQ56cQF3aeK2WDudLn3b0SGd65935
VJcnHSNkz52olYnr4WtzxfUEvfpRdwa5ssT1kH012bIFt57qnwwZNeEPBhZS
3QremRWsV5BdR3YVX68RTMupVi+dvMuWy7vV5NBPHlKSI5dzKv2HMsQtkb5M
0JNLDh3vyQ64sqXzazmWkfepMXt6qD6DxPU78wRHpuDOJG/BpDeP6pcLNgM5
xKecKz5N8uZPuAzSS+rUC+5cwZkXMusD1Vm+CtnI/kWte2TnS9VN2/QnN6ee
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
              "], {{
              0, 175}, {1600, 0}}, {0, 255}, ColorFunction -> RGBColor], 
             BoxForm`ImageTag[
             "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, 
              Interleaving -> True, Magnification -> Automatic], Selectable -> 
             False], BaseStyle -> "ImageGraphics", ImageSize -> 
            Magnification[1], ImageSizeRaw -> {1600, 175}, 
            PlotRange -> {{0, 1600}, {0, 175}}]], "", 
          CellChangeTimes -> {{3.448104160478006*^9, 3.448104179877939*^9}, {
            3.448104249222381*^9, 3.448104253789421*^9}, {
            3.448301713983169*^9, 3.448301727766382*^9}, {
            3.448729782542696*^9, 3.4487297903398933`*^9}, {
            3.449485121728216*^9, 3.449485133054387*^9}, {
            3.449486045565728*^9, 3.449486064508789*^9}, {
            3.449490695119616*^9, 3.449490705238412*^9}, {
            3.473784965214143*^9, 3.473784969450467*^9}, 
            3.4737850101648817`*^9, {3.485608924147756*^9, 
            3.485608933475997*^9}}]}, MenuSortingValue -> None]}, Open]], 
   Cell[
    BoxData[
     GraphicsBox[
      TagBox[
       RasterBox[CompressedData["
1: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
4MrvXaLaSVF7KYrx54OngPbqB1cWH0xK3TMrBdyPxwJ68BXHfRoIFbyfmxyY
ST34pZHdWTpYYdw3ZWp7MtVr07B+I7Ryh8nArYNWA3jyGZ9pL0XGLN3+ZwHX
ILiLyEpTvvzOV8T7KOpD43zwFrGBgsuvklFev5VTtKsQfEZyjLsA/CX7qJSd
SdT95SrwlnDf+mTBvANUyuVv5tJeHbTngdsAjQuYUOFvVSnbKKrrZSntyQfX
wiNFqbuTkq9+TxgPGMFVNrxGHZpG7ZlKgaUoFlRAaxG4DBDQ3v6FdPdU6u3Z
M8BTAoGyjw0ZO6nkC387H1pKYyEN7dSBtwAcJaEUalfSlMsvixhfSV9F3m6K
OjRzGjiLgWvco+9ZoglRUw6Kk6HZxPrlMY8SHEWT9ZwjhBBCCCGEEELoTzAx
f7A5D1rJ3DTWpSJvnWvJIz8nA+tSTmRobIuSaVKF7aoHdYq7W8X3P6yDWGzk
8nsnVgiOriwAJg7hgY/eVHcsER1byh+8eJQF6PL98NPXM67vWQ4sDFw9cux1
5dk3ebd3/jMwMHzv6pnV2R0r5J2rZJdWiTrfyjhZ+zXSCAsdW0tOLpF0Nn7/
s/yq4y3eqRXSkysF9/atI3P7Lh//5I3cI29kf/Km5MbejXQcxu51nFwiOL+C
371Bcq08+06FftDMv7s5p2dzwa0K2Y3q4kuN/9/Z1teuHaqByGDk0oFzi3M/
WcK/eWAtV8nQ5cOnluVM5FcnlvNIfgVw+8C6U0tyTy+TnFoqPL9MQPIrmMiv
ZIn8SjFmeyS/cuffX6relUSWqGIDBay3gPGZrvzr/NZp1PH82eD5MwgUkPQp
uDDmKz6jEgYp6sqPRCNB491fKg5QSW/PoqDliZhbC04d+CTcTU/MrdOz/vz9
ydN2JSf3/puUIYFPEbjVrNd08SXhXor6yJQG3iLaZ+p8RbY3ifpIM431FLNu
HZmI5/n3+ZWvlGvqIH/aO8mP9fyjKu7TxD1yEkM1l0SD+s6/5O1JTjnzF9ms
rxA8Cw4bZ+2gqO5XRLSvADyll3+e3pZEHRWlQmspu01NFrxqNUBQB3WP755B
7aKSxqq0jL/4UM6s3UlU378qoKkg7OUeGAN4DFy3HJenb6OozpeEsP1JuqX4
QCbXRUkja/TjQRV4NJ2vCnemTOv482zwFnDdGPfmQVP+ZD3nCCGEEEIIIYQQ
+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
PbZadXWjumuz8vpGyeUK1YWmb5L8ih7/aLnh6Bu8h+OvWDi3kn9preD8WmXH
esnAe+UA8aErR86uFJ5ZIzy3Utrz9jpg2KHuw9fXaq5sSL9ZzevdLL5hLYKx
PmDgXujvLyyTnV2uOr1SdvTX8y40vQrsyEjXh5/8a8bD/Ioh4686VvM71sku
r5Zf2CAcv0rmD/a8u+HiGuGldYpL6+Rda6SJ/AqueF7u3iC7Wam8X6uYyK/Y
1on8quiz/IoJFYOvBAIF/YulH1DTD2fNgtBzEMoHbxmJfTz6SJsm4tUljikd
WKFpm0IFp1Lg5o4pA08pWZnKayBhkTcfgoW7kpO3/S6/IvMH/Xrw5V96WbSb
oj4qSAdfMbQXX3xZupOiyPgrfynrNbA+LXgLJ/KrHSm/z6+OGubuSU66+ooE
fI9DgDuAq6GMcReefjrrwJSkru/yme1lEHjimGnWHorqfE3EchW2FT94S+Ol
qLczp0Lz41zj3HUxnnzWnx9fW7otOWnbDK7yJ2DnEx+oZ++gqOs/kkHwCcbP
PTAFTKgQPE+/nZq0N2XK+ZczwVtMBphtKzmykGs/ueffdBe/Jd1HUd0v8ePb
8uNuEzi1ZKZqQDv5f4AIIYQQQgghhBD6T/1BfuWdyI4SQdZkIPmVR0deipfA
uLTjTaoH9Yr7FtndA6sYhoHxYWCB7j9/ZLHoxDJ+14a8jvWCm5XSno/cwMaZ
0Zvcb3vPtB36ZcbJlfqOJTmnqwogeh9oOO9+5dIa+cUNks514vMbtfcPO1iA
8K0PziyWfrJC9HD9doCOtwSX14surled3yAdPFQBwAx3HT/9lvDMavH5VfL7
BzeQMVTdH3auVdzaJLhTJbq1QXK+Ug/0CMtEb7leOLE+6+SanOMrhIdX6HoP
mxkW+q598sFv+J+8Kb65f91EfnV+jeDCBkXXWuXFjaKJ/Kr3vfVcVZc35HWu
V1xdJ6HJUl/Q5X2le6P8VlVeX51yzK4OtypYp5HcIG9x71Lto/kVGygYbzaE
plNtSVRk3UJoWwQ+A4S4ntSCXwMOIwQXRYPaaG3RbgHlf4y69TM97S0F7wLa
x913E1mq3VfEthVtp5Im5g+ywcROP1nU/dKr4t0UdaQwY+KYiy9Ld1HUJ6bZ
LHderwH8OvAWQrD0D/Krs9+bv4eiTpZmQevzTHvBWCAPgs+B65ltc6htFDXw
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
heHtJvLb0IJwe2m0/Int06j91NShTYZIu571FUf3FEDbU8cLUt+hpnX9VMgd
STrKnR/3q0g73kLuXP+/n8//7r/TSfp7RAghhBBCCCGEvhIsj+ZXBRM7JzG/
+g/yySgdr4lMfHPnxxqkbMMCurGEbSmJthhHnHlgL6O9C4YbVRDKB3seNOeH
G7QPXCQCinq0UV/+UIs+7C0cbdWFXeqhRvF4s37IrBy1qoatcq7N0RbZmDMv
2poPTYXRVnnYpYq5SyMN+bTdCM0l4CXxC2fElz/q0g+3qB40KRmXNuLUR51a
xltA+woiLgOH9hRFncWj9sKRVvlgo+y+VTPaquHONWgVjTcXDzaXDDXpok36
aJMs5pbFWnXg1EKrOt6sGXcVxhoKuGsZc5Mgbtxlot06sCm4asedmrDHOObR
jLeqwGUgS1cFFpHX7bl0EDIyIRlsU5KhUIm7Fvdo4wFjPFRABiy5lRDKi7XL
RreJycAnjyHuVJPODBYkJmaawKUnDfpNECggg5qcJmg1QIsOvGWRNhUdIokT
EzDSfgO3wYa00ZCCLInWXhBt14+FVFG/joy5ChrHAnmkWU/iLYTb80hJoUR5
AQN4F5IxY1zjoRLGZyKRVFsB7ef2PAnNheAsBFdh3GMg46BChqhTD+6FXAHx
oC4cIhfCFRZzqSFARkmRAM1dHPfomN2m6DZTrKX43grVmb+aP7TFCP7nwbuI
3lPYtz7/t7LZe6ZSnxjnR9354e1cF32N9T4OW/58+1RqN0VFq0pi3PVyD4mn
kA5paTJ5tjQW+uo85wghhBBCCCGEEPpiFjFTLwFvIr/yF4A3H/ymxIywyUFC
lUf58ieE23TR4IIxnzjuL44EVMMe1ag3Ede0KcdCcmgv7PcoGX/hgEcV95eM
uAvjXkHEJSUxRbCQCRjDrdpIa37cvTDcqhhzqbkvjrr03M5Yq4GMI3KWgaco
SmbAlTFNpWxAxwTFcY807FRFPVpwFoRb9eAshdYyxl8MziLyVkR3YSIDUSXW
1i6LuRaQ9n161m5inJpw86JocwnXVNivHmk1QpNutE1LexfQvqKRkG7Ib4y6
9bRPE/aahoI6stqY2wit+eA0MB49mccX0rHehYy3OO420Z5Cxp+fWFeKnIsO
qGkfd5sWQUsZ4V3EBEsjPi0d0jPb9GF/Hpmm5y2GlgLwF5L0iWs8YIR27rbq
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
PqZ9w77iSZOZ1GtuuTSf4asTApYEcqZTVX5gneb4j+79yHDnB0l3vKeIbvm7
+/t+u4jMKp8t2VeTQMY06UTuNX9ZvDF85eqAKDy8smQ05S6xMub6ZkTH8oVN
q++fWCuXzqluMvyl6//L+7NfsRtNqD77An5+ndXpZEsmo5IvT5ysjg9WJV3c
F9tj+t6Y7fvj77/oO99AXR+M/nFbp/Xv23emDe+8r2vfg2P75ePVWaN742hv
4vAB+YU3f859stvXXO97v2ik6pf9OxKG9z4ysT91dN+iybIk/8H04b1LRvel
DlQ+Nfze+omPtvRWav07FP6yhMn9cWMHVWOVGt/e2OGdi3stP7j48TY6773w
ScXwW6/17ckZ37VodPfSiT2K0F7pmy75KplQnfqZ7f/MHoIQQgghhBBCCH15
K3o4UPIIVSeHZ1biW2OF+KZYMKVemp98+brR6zBj118j+8xn4syZvD09UKx6
V3a3i81xsRgXY/UsUrw8wm6rmcVo3xOcJY3M4ROnf+bApD9vflWTJo2wpDvK
pj45KJjTyaKqj4xyzmGNv1rI27SCVTvpVExUL5TOrP6Zz+j99RN3y+t2nVd4
an71xb/CpVtuNBxTB8OHmQnmZDJnUHncxSotXTxGAZ5okgQibqqg/+P9rcWx
fTuWjO5MHd8pn9y5uH+vKnCumrhJCk6KCwvEEzdx8YM3mnYk95cuHd0fO7wv
dWivYmhnUkdlLvV/yHN+CoXand8fFn+7PcW/e+lIZepYZfzE3oWTb75AE+3S
ergJgcaJQkLXe62m1Z274gdLUriyFH95SrAylatWXNoZ/op7LEIIIYQQQggh
NPObml/VpIRnVlOzCGl+JQ0u0HSWerlLt5A5TSzkzBp7Jd3ydVbL5jpmsROr
v9X93xcHf5PV82+JLSsWOxYwOrCcs8rJlEbVCrLH32j9vFE61Oo6t5vCJzw3
XZ5KSQdfqQSr2stm26LZwG/kZDFQZQ5v0fDOJJ81bmqrvrjyv/Xrc80+fGVT
06527cmvwrdcOZH7tU9f2s6arFCNuEwKZ4wPVSlp39LBci2NddHwSNf7Rc2m
51ss/zre87aPiMYnO13/s3nr4p7NmaPblvbsXNjz/uYQ0Wh/88cVz366WX7c
u2Y8OEihC12Of+9YHz9eGj9YmtZfurS97EnqOcxxNCquhOfPmJ5p2pzQX5Qw
tit1bL98dPviC1WrJy+eDRANvlN6al3WuT2rhk64xGWHuus+3pnVt2NJ//5H
J8uS/eUyrlohnYveePnpm1Kmey9FCCGEEEIIIYRuRlR8dX4l/Rh+74/51Qzo
C8Mri1IsdEBVtyCqnn3NcScbXp8y6k4KvqUYcyaP1CeSXevbrSBnpt+WLB1D
5cgcqV4qHVN0pWu+re9z39N3dRmLiixT19OmPjkoWDPJprGz2eZoNrRGQa4M
sqt8VkXQnEwmzY3W/2f159z32mWuXSw8N7vUlcXEjf/i2q5396uvszmdHOKL
IP5K5q9QUGXaeEW6771XW3Ykdu1+rG/tY+0vLfl4l2F06F0iGjn//qktj3Vs
NfRumn96v0Y6VirAN1X/uHn9Xd1r7mlcm95z5CUKjtO5uvbipAtFS1p2KgbL
ddT3NgVC461/CJKPuOHzpn9q3JLVuTWxd4dqpDR5sFQ5/vF+juhCc90n6xe3
rU1offHBk5sLaaCRJoYv2F7oLYrv3pU0ti/JdzA1VBWeX0kDw/D8yiyb7r0U
IYQQQgghhBC6GV1nfmUKvzu+dj7wJeqGr8N0b9gXtvN68ytreuffPeCJZM45
kRPrtJN1asGSQ2X5ZNFRtZ6rThcXCN89g0wZvFFFDh1ZM6WkqZTq+sOiq2Or
cFeWn7o9PLwiu9YRycwRbPg34m9zQ6Ysn0t8LDlVGsgm3qK6miXjUuYbdGWB
a+9lVd14+czPZxYXVgnm9CtdXqG4qVlXn+y1fe4VuDz+Cr+2KX5bonBQvCVr
okLmq1QFD8aOliUFdyraSuZ3lKa2vZZwekNa9zsHKERE/saXUxpfj+3cuLj3
0IuceEPvx2fWJIvLnHpD2fzikk+366XFBDpetrJzQ8L5bclD9n8LiHfrPveH
4jTpVzw17f1J47rHzm9J6tiuGCia17ovc3LkBPHBPuP/aFu/9NgbSU1rH3t/
w6L2T3ZRkIbfK28uTh4oiRvZmzhZJrt2fhX+J5VN+46KEEIIIYQQQgjdjIrm
caUPk0kmiG+KzZeObBEs8unfsK96MsGexteEJzMH08iuDtTJaFfBoVl3WBj7
9Fd3klFHbkOgJp0cCpJOuq4Ql+fEK9VK3pox7lbxDj3t1pz91fyThfd8En9X
7xOy7n9NlO7l1JBZIzhSyJx+4XfJTT+8v/ONBX6nrvu/PdZouO+Q/LZTP5hP
m3PIqAm5ZaGS9NYfxDb/JN7CYhxz2R+XfaPju0vb/59Fo95EwakI2vU9azJO
5D/wR9k9b6vuaf9lkrj/8EeT/BYV1Rj8rqwzz9x//ulHeZe4m+Wc+vsFxzLv
CXrUoZoEoS7Nvzv7/HNL3ku97cO4u47/6GvBrZnkNIy748iSGXSmjf06/fjT
3xpdk+j3prX9U9ynOYl/SvnGye/eFdqhG7FpyJYmPjqZskKm9MnatFB5auuv
5n9SeP8HSXcey7/35DOPChVK3pxCzjSyafp/o/zk8bv+lLDoQ/W3+p9Xki13
wruYzFrp04JWuTQVDL/gU0ejhWoUgapUX0XK8H7lyK6F/TtUHevjP9madOHQ
GvJxAW6i8aXE46/FN7/xaNu5Bl6YHDu65tRr8Wc3pJzZuPjY+qSTG1KpsUEg
anzzty3rYzs3Kpq3qUJHnmvennns5WSOeJ6E8weeOf16XNOmjIEtCb1bH26s
/oE0GBPGTq5LO702sWWt7OT6R85uTBoo/9EkkX984MS6pJGShIFd8uF9Cn9F
eH5lkkvfLCn9w077XooQQgghhBBCCN2Urju/mvat+sonmFJ5m4LMWYJDSVXS
UUPj1qSe/5XsjJzlmh05sSVVmsDYMzlzprSYMY1sylBNKlUryaEdN6aQK3fg
tzLPYnaEzbUwZrqVlTFmmcPeUc6m7dm8uyBkUZMl79MfLHDOZr6ndO+l32uL
YA0RrJZF2CNY9VzW/0IGZ88Z/H2yeN3JmDdirpWxmjuYI4q9lRxDluV08Knj
332gjsVYo5hxDvPMjvCwiGPx99IGDdlVgl1HtuyaOcwym9GLy9x3MWMMM0cx
wWggT47/VdXb37pDXOHBGOacPcfNIqruYO0/XUwug/QULLqmp2Mr7ma93447
I7vXPodVfI1ZI5m4he6o6P5fqsim52sypCduyRv6Z0XDnbNdLMrGohyRkQ4W
YRIfsWIF70qnquXnvr9YfJRaNrcmmhmjWR1jH8VG025dyKGTDtYyKy7Nr8KH
ovEmJWdMC1bLA1WpobK0kYOp3cXyzuL0c2vn939STQINthw982Lsx6/FnX1t
0WD3n4hCQw2/O/163JkN8ec2Ljm1KenspjT+pJUTQq3vbWxaF9u2OeXM+uTG
HdoT6+JPvSYLUkD6Vdmzp9fGn9kk692U0Fe0tMv5D9JhWeNdJ99IPrcusXld
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
evzt5LsdbE7HTxL5o1qy57kYq45mPf87hcp1ZMoTt4GMT9beG1UbHTWxRs97
V5BlmbgY2XN6X5LViw/69VvJ/ARvXtb097F1key9uG+SK098dkFzOh3O5Gtz
jbOZhbHeVxPI/UTv/1BYoplrHuMd+gmvkmr0fG06b9OGHOk+d2bXPy2pZREf
JnxDfDXIs4K3F1CtjuoLDituF7eq7fn5AWsGWXMvvdpT/wvhrynkzBnSaeHN
mZ0Hk/p3JI//oYhokgKD53b+6MTrCWfXP3Zsk+LsWiUJk9J52iv/sWljXGux
rHebrHNHYntJ6oV313NEwdb3GjfJzxfHD5akdO5I6yhJ7CtVC+QP8f726udP
b0w5s2Vx04bk5m1Zw+++QUTjre+d35jQsiWlc7vifNHSnuLUrpLMEPmI53qq
nzm1Rd5ZmtK/RzF+UMkZL82WLw2cp31HRQghhBBCCCGEbkLbHvj8/Mqqwvxq
2gvZM3lrBhml87fzNrX0ZYKe3NPfecTFWN1ds8hRILj14cNvNJxNKTgypT+f
OYOqtFy9nmx5lYw1sNmda+LJlEtuOZlUZDII7uyWny41MvZh6gNBeyHVFZ5+
domHRX0ou4PchWTPJKNWOq/7Ua2dMTebc+ENNWdaJn080K6zRUZbGev5XTLX
oOLqMk88/7CDMefXZn+Uevfbyls+SLnzw4Rv/FF2V11MpCuGnfvpvQGvmqzL
7ZGsKor1bEkkd47PnTnuTifHanHb6qPm1i2ce0TxtSPKue+m3/FOytzDCbPE
B7VFx0jjJu/Ktp+l2Bj7WHGXdDyYI4ezGDhHJtlXuBnzsujRNXGCe+W5ny1w
zop4M+52cuWHXFoyPU41MjKpyWYIOXO7n41zRDDbN9gH8jsPK+44nHLfu+r7
jiTdYbs92hoVeeoHD4fcWWTVX/OaSzu/+JKGTOlBo3J4X1p/jbrP/k8UmqTQ
0MD7JU1vpJ7eFNuy/rHTWxWdWzLJf4GnYHPNPzRuim8tTe8pTm0tSWraGjf8
XolANNnsOL81rbUosac45fz2tPaS5O7SLIH8nBBor37+zKbkxi3xrZuSm4qV
g2+9RES+9j82rk9qLlJ0lSjPlyzuKk5uL9YGiSMh1F72neai9M7tcml+VZEe
MknTtqn/1vA/7PTvqwghhBBCCCGE0N+8682vxOvTv2Ff7aSPAUoDpSxyZnLW
LOn78ry65p8samDRNREsVKWVPiXn1EpfTehRB20ZIWu6NI2pWTHpUQtuvW02
O8RuGXopg6wrpJNTGdPFxSYbslr+PtHFoj+Q3UauFUGn5tzzsXbG/iS/N2Qr
lOY5Tr3gXB1wqo6ymCMssnPNAjqUN+nRk2e1OYo5I9nI7/PIuZzcy479bFEd
m32IRbpYTB2TToRVHckq57LDbLaDsZafxomrIsf3rNHMzeb2vBJL1flBbzZZ
88a9StfcSA+b442IaGDSqdet0nVWz5iDza2Yw8ipCtWqTj23xMxi3k+NCNVp
yaHmHbnkMZBlmS2G1UTMvfBqilC/vPnZBW4W86fER8iVf8GdTN48sseTK95n
yyTHqpa/i7VES9tsZVHOCPZWRKSFsbfYLbXig8awzp8mkFftc+jJdmUEJI2D
OHNG0KgM1KT5Dmh6D2RQ73sUoqG+s59s0ja9sbS5dHF/SWLjVkXbBsX4hWaB
/F2uf2nenNy0TdlVlNqxQ96+I2Hy44MhjnqP7WzakNxRLOverujcr+3erWzd
rOTIL1CovfK5xs0pbVtT27fIzm5N7jn070QU6Dx+bl1yc0laR5Gyc3dsz05Z
x/b8gPgL8p8pzW3epOjcLh/Ym3ZpfhX+DxW3lrdhfoUQQgghhBBC6KvRtZ8f
tGukj63ZsqTJCZreHFnSFNEuHVglHWflyuFM2r7tiTbGamax/n9OFBcYr1WQ
q1A6f5Q93ueVk00bsqt4j54c2pqY8GJrMsmWFz6leQ6ZdVSraf/Rw+Ia3kz7
5sThbPIUNj+d2MCiP5LdQc6VnEsdcmb5pUnR8poI5o2IGl0TR858cj4pOHM8
bG4tix74DwV5V5I778w/LDCxOR/I7wqIP3pXkGsZmbPJUSDel2zZZNX4HflT
6/GwyLE1S8UNEOyrxB0s6Da4GKuPmNP5Ugo1FEifH3StDI+2VpAnV3AoqXaV
37688blH3Iz9QXYfOXPJIe2WgtHgr812zGGHWOSFl7LIm3/65wuMjL2v+BZX
rwvWqagym1xJ0gmsTLnkLfzTLxY459zyQcLtJD6j2lxO3Db3CsGRL7jEDcsT
nxHv0AftanJIRxsKtnRpkGXO4szqiZqMofKkkX1LB0/v8xPRUF/Lvp+fWZcg
HTG1PU2aLG1Rtu5QUquN+GDfO6+2rY/r25Tau1V5vkhxvlQxce4d4mngrV+f
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
OmTTSh+QvLSTaMP/rdO/ryKEEEIIIYQQQn/zrplfCU4DSUlvigWXBk1j0nmr
XHpyagS7dOqn8IFY4RvtT4RP2K7l6/QT9myq++HIWsX4a7LBLalk/ZHfZqDa
LPKqpWW8udIXArqyB/am9W9Ip30ryZxLhzR0VBf+6Gg2ecQ/9BNU/gNyrBaO
rqAaLbkypY8QHs2msm9TxXelc0+5C4WGfOmQPMvT0qmivNmCO5u8eWTWkOdx
Mq4kTwGV5w69kjHxooYrySHPyqBHQ14VWXPoaB4d/I60HmeutKqGXLJlhrwa
zp3GHVIKXh2ZV42WqDtei+9/Wc45s0nc+Do9eZeTW8u7dGR/MuiWi2sLuQtC
h/ScXRc8lENVT5P5B5xDfGqryFnos6YHjqhHDxs49+PBvbldLz86XiI+/UKq
FdeWJ7gK/PUqrl4TqskdezG1/5UE314NOR/nHbmcJ5Ozy8ip5Fx5vEPP27Sc
VRM0Z41WZLYdyD+2/6nWTYln1yYcez3+2PqU4xtTTrwe37g+aWC7qn9vet+B
hP59aUO7VvTuUvQcTGzcoW3f+WS/5cenS1acLVUPbIq9uF3RuEc1bMzpqUkf
M8cKdt24LWd878NN1bknKrNby1KGy3XDZdqBCvW4MaOvRjlco+/Zm3L2YGpL
aWFf+T92HShoKVW2b04U/6YXdxs6y1JGjMmTxqyARc05wvuGM3wIVnjaPO07
KkIIIYQQQgghdBOiooeC2x8lW8YX5lc6NI2Jf4jwwEorDSsuJR0ax9kyhHqD
355F0vcM5kzW6wOHCnhnIbnlnGflZK14x4JJj55syzl3WqBOJ51yypMXdOVz
bgPV5oWcuT6HnnOLf/p8n1MV9GaTSzfmSRw7pCJbDrkyyJ7t8yaTO4/z5vjq
lP7a7BG3itxazrN8slYRqM0QXGqyp5NFQ56cQF3aeK2WDudLn3b0SGd65935
VJcnHSNkz52olYnr4WtzxfUEvfpRdwa5ssT1kH012bIFt57qnwwZNeEPBhZS
3QremRWsV5BdR3YVX68RTMupVi+dvMuWy7vV5NBPHlKSI5dzKv2HMsQtkb5M
0JNLDh3vyQ64sqXzazmWkfepMXt6qD6DxPU78wRHpuDOJG/BpDeP6pcLNgM5
xKecKz5N8uZPuAzSS+rUC+5cwZkXMusD1Vm+CtnI/kWte2TnS9VN2/QnN6ee
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
        "], {{0, 
        175}, {1600, 0}}, {0, 255}, ColorFunction -> RGBColor], 
       BoxForm`ImageTag[
       "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> 
        True, Magnification -> Automatic], Selectable -> False], BaseStyle -> 
      "ImageGraphics", ImageSize -> Magnification[1], 
      ImageSizeRaw -> {1600, 175}, PlotRange -> {{0, 1600}, {0, 175}}]], "", 
    CellMargins -> 0, 
    CellChangeTimes -> {{3.448104160478006*^9, 3.448104179877939*^9}, {
      3.448104249222381*^9, 3.448104253789421*^9}, {3.448301713983169*^9, 
      3.448301727766382*^9}, {3.448729782542696*^9, 3.4487297903398933`*^9}, {
      3.449485121728216*^9, 3.449485133054387*^9}, {3.449486045565728*^9, 
      3.449486064508789*^9}, {3.449490695119616*^9, 3.449490705238412*^9}, {
      3.473784965214143*^9, 3.473784969450467*^9}, 3.4737850101648817`*^9, {
      3.485608924147756*^9, 3.485608933475997*^9}}], 
   Cell[
    BoxData[
     RowBox[{
       RowBox[{"(*", 
         RowBox[{
          "Evaluate", " ", "the", " ", "following", " ", "to", " ", "copy", 
           " ", "the", " ", "style", " ", "of", " ", "the", " ", "cell", " ", 
           "above", " ", "into", " ", "\[IndentingNewLine]", "the", " ", 
           "docked", " ", "cell", " ", "style", " ", "of", " ", 
           RowBox[{"the", " ", "'"}], 
           RowBox[{"Notebook", "'"}], " ", "definition", " ", 
           RowBox[{"(", 
             RowBox[{"2", " ", "cells", " ", "above"}], ")"}], " ", 
           "\[IndentingNewLine]", "These", " ", "two", " ", "cell", " ", 
           "can", " ", "be", " ", "removed", " ", "once", " ", "the", " ", 
           "docked", " ", "cell", " ", "is", " ", 
           RowBox[{"created", "."}]}], "\[IndentingNewLine]", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
         RowBox[{
           RowBox[{"SelectionMove", "[", 
             RowBox[{
               RowBox[{"SelectedNotebook", "[", "]"}], ",", "Previous", ",", 
               "Cell", ",", "2"}], "]"}], ";"}], "\[IndentingNewLine]", 
         RowBox[{
           RowBox[{"celldata", "=", 
             RowBox[{"NotebookRead", "[", 
               RowBox[{"SelectedNotebook", "[", "]"}], "]"}]}], ";"}], 
         "\[IndentingNewLine]", 
         RowBox[{
           RowBox[{"SelectionMove", "[", 
             RowBox[{
               RowBox[{"SelectedNotebook", "[", "]"}], ",", "Previous", ",", 
               "Cell", ",", "1"}], "]"}], ";"}], "\[IndentingNewLine]", 
         RowBox[{
           RowBox[{"SetOptions", "[", 
             RowBox[{
               RowBox[{"NotebookSelection", "[", 
                 RowBox[{"SelectedNotebook", "[", "]"}], "]"}], ",", 
               RowBox[{"DockedCells", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"FEPrivate`FrontEndResource", "[", 
                    RowBox[{
                    "\"FEExpressions\"", ",", "\"SlideshowToolbar\""}], "]"}],
                     ",", "celldata"}], "}"}]}]}], "]"}], ";"}]}]}]], "Input",
     CellChangeTimes -> {{3.38831364079608*^9, 3.388313648848673*^9}, {
      3.388313705453738*^9, 3.388313712402935*^9}, {3.388313761332337*^9, 
      3.388313848299779*^9}, {3.388313886630456*^9, 3.388314048491518*^9}, {
      3.3883140891684637`*^9, 3.3883141188834057`*^9}, {3.388316871550132*^9, 
      3.388316908611515*^9}, {3.3883170423920717`*^9, 
      3.3883170826776247`*^9}, {3.388317794784313*^9, 3.388317972980825*^9}, {
      3.388318143311693*^9, 3.3883181457005157`*^9}, {3.38831883644632*^9, 
      3.3883188696857367`*^9}, {3.388318945630301*^9, 3.388318948563595*^9}, {
      3.388319004342214*^9, 3.38831900651579*^9}, {3.388319058805889*^9, 
      3.388319098014468*^9}, {3.388319134493579*^9, 3.388319170214745*^9}, {
      3.3883194184532957`*^9, 3.388319465324798*^9}, {3.388319542581661*^9, 
      3.3883195480769463`*^9}, {3.388319947903751*^9, 3.388319948372787*^9}, {
      3.388320318629324*^9, 3.388320350829337*^9}, {3.388830915896137*^9, 
      3.388830957727977*^9}, {3.388831030559073*^9, 3.388831031198735*^9}, 
      3.443449752202841*^9}, FontWeight -> "Bold"], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Title"], ShowCellBracket -> False, ShowGroupOpener -> False,
        CellMargins -> {{0, 0}, {0, 0}}, 
       CellBracketOptions -> {"Margins" -> {0, 0}}, 
       CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> False, 
       CellFrameMargins -> {{20, 20}, {20, 20}}, DefaultNewInlineCellStyle -> 
       "None", InputAutoReplacements -> {"TeX" -> StyleBox[
           RowBox[{"T", 
             AdjustmentBox[
             "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
              0.5], "X"}]], "LaTeX" -> StyleBox[
           RowBox[{"L", 
             StyleBox[
              AdjustmentBox[
              "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
               BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
             AdjustmentBox[
             "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
              0.5], "X"}]], "mma" -> "Mathematica", "Mma" -> "Mathematica", 
         "MMA" -> "Mathematica", "gridMathematica" -> FormBox[
           RowBox[{"grid", 
             AdjustmentBox[
              StyleBox["Mathematica", FontSlant -> "Italic"], 
              BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
         "webMathematica" -> FormBox[
           RowBox[{"web", 
             AdjustmentBox[
              StyleBox["Mathematica", FontSlant -> "Italic"], 
              BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], Inherited}, 
       CellChangeTimes -> {3.479211616867702*^9, 3.483202458952606*^9}, 
       TextAlignment -> Left, LineSpacing -> {1, 11}, LanguageCategory -> 
       "NaturalLanguage", CounterIncrements -> "Title", 
       CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
         "Figure", 0}, {"Subtitle", 0}, {"Subsubtitle", 0}}, FontFamily -> 
       "Helvetica", FontSize -> 15, FontWeight -> "Bold", FontSlant -> 
       "Plain", FontColor -> 
       RGBColor[
        0.15384145876249333`, 0.14598306248569468`, 0.14416723887998778`], 
       Background -> None], 
      Cell[
       StyleData["Title", "Presentation", StyleDefinitions -> None], 
       CellMargins -> {{58, 0}, {0, 0}}, LineSpacing -> {1, 0}, FontSize -> 
       28], 
      Cell[
       StyleData["Title", "Working", StyleDefinitions -> None], 
       CellMargins -> {{58, 0}, {0, 0}}, LineSpacing -> {1, 0}, FontSize -> 
       28], 
      Cell[
       StyleData["Title", "SlideShow", StyleDefinitions -> None], 
       CellMargins -> {{58, 0}, {0, 10}}, LineSpacing -> {1, 18}, FontSize -> 
       28], 
      Cell[
       StyleData["Title", "Printout", StyleDefinitions -> None], 
       CellMargins -> {{20, 0}, {0, 10}}, LineSpacing -> {1, 18}]}, Closed]], 
   
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subtitle"], ShowCellBracket -> False, 
       CellMargins -> {{0, 0}, {0, 50}}, 
       CellBracketOptions -> {"Margins" -> {0, 0}}, 
       CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> False, 
       DefaultNewInlineCellStyle -> "None", 
       InputAutoReplacements -> {"TeX" -> StyleBox[
           RowBox[{"T", 
             AdjustmentBox[
             "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
              0.5], "X"}]], "LaTeX" -> StyleBox[
           RowBox[{"L", 
             StyleBox[
              AdjustmentBox[
              "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
               BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
             AdjustmentBox[
             "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
              0.5], "X"}]], "mma" -> "Mathematica", "Mma" -> "Mathematica", 
         "MMA" -> "Mathematica", "gridMathematica" -> FormBox[
           RowBox[{"grid", 
             AdjustmentBox[
              StyleBox["Mathematica", FontSlant -> "Italic"], 
              BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
         "webMathematica" -> FormBox[
           RowBox[{"web", 
             AdjustmentBox[
              StyleBox["Mathematica", FontSlant -> "Italic"], 
              BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], Inherited}, 
       CellChangeTimes -> {3.483202458953512*^9}, TextAlignment -> Left, 
       LanguageCategory -> "NaturalLanguage", CounterIncrements -> "Subtitle",
        CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
         "Figure", 0}, {"Subsubtitle", 0}}, FontFamily -> "Helvetica", 
       FontSize -> 20, FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
       RGBColor[0.4162966353856718, 0.4162966353856718, 0.4162966353856718], 
       Background -> None], 
      Cell[
       StyleData["Subtitle", "Presentation", StyleDefinitions -> None], 
       CellMargins -> {{58, 0}, {0, 5}}, LineSpacing -> {0, 0}, FontSize -> 
       20], 
      Cell[
       StyleData["Subtitle", "Working", StyleDefinitions -> None], 
       CellMargins -> {{58, 0}, {0, 5}}, LineSpacing -> {0, 0}, FontSize -> 
       20], 
      Cell[
       StyleData["Subtitle", "SlideShow", StyleDefinitions -> None], 
       CellMargins -> {{58, 0}, {0, 5}}, FontSize -> 20], 
      Cell[
       StyleData["Subtitle", "Printout", StyleDefinitions -> None], 
       CellMargins -> {{20, 0}, {0, 5}}, FontSize -> 14, Background -> 
       GrayLevel[1]], 
      Cell[
       StyleData["Subsubtitle", "Presentation"], 
       CellMargins -> {{54, 10}, {20, 20}}, LineSpacing -> {1, 0}, FontSize -> 
       20], 
      Cell[
       StyleData["Subsubtitle", "Slideshow"], 
       CellMargins -> {{54, 10}, {20, 20}}, LineSpacing -> {1, 0}, FontSize -> 
       20], 
      Cell[
       StyleData["Subsubtitle", "Printout"], 
       CellMargins -> {{2, 10}, {12, 8}}, FontSize -> 14]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Section"], CellFrame -> {{0, 0}, {0.2, 0}}, ShowGroupOpener -> 
       True, CellMargins -> {{58, 50}, {10, 40}}, 
       CellChangeTimes -> {3.483202458955147*^9}, FontSize -> 18, FontWeight -> 
       "Plain", FontColor -> RGBColor[0.7330281528953994, 0., 0.]], 
      Cell[
       StyleData["Section", "Presentation"], CellFrame -> {{0, 0}, {0.2, 0}}, 
       ShowGroupOpener -> True, CellMargins -> {{58, 50}, {10, 40}}, 
       CellChangeTimes -> {3.483202458955147*^9}, FontSize -> 18, FontWeight -> 
       "Plain"], 
      Cell[
       StyleData["Section", "SlideShow"], CellFrame -> {{0, 0}, {0.2, 0}}, 
       CellMargins -> {{58, 50}, {10, 40}}, 
       CellChangeTimes -> {3.483202458955409*^9}, FontSize -> 24, FontWeight -> 
       "Plain"], 
      Cell[
       StyleData["Section", "Printout"], ShowGroupOpener -> False, 
       CellMargins -> {{2, 0}, {7, 22}}, 
       CellChangeTimes -> {3.483202458955634*^9}, FontSize -> 14, FontWeight -> 
       "Plain"]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsection"], CellDingbat -> None, ShowGroupOpener -> False,
        CellMargins -> {{60, Inherited}, {0, 12}}, 
       CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> False, 
       DefaultNewInlineCellStyle -> "None", 
       InputAutoReplacements -> {"TeX" -> StyleBox[
           RowBox[{"T", 
             AdjustmentBox[
             "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
              0.5], "X"}]], "LaTeX" -> StyleBox[
           RowBox[{"L", 
             StyleBox[
              AdjustmentBox[
              "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
               BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
             AdjustmentBox[
             "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
              0.5], "X"}]], "mma" -> "Mathematica", "Mma" -> "Mathematica", 
         "MMA" -> "Mathematica", "gridMathematica" -> FormBox[
           RowBox[{"grid", 
             AdjustmentBox[
              StyleBox["Mathematica", FontSlant -> "Italic"], 
              BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
         "webMathematica" -> FormBox[
           RowBox[{"web", 
             AdjustmentBox[
              StyleBox["Mathematica", FontSlant -> "Italic"], 
              BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], Inherited}, 
       CellChangeTimes -> {3.4832024589558487`*^9}, LanguageCategory -> 
       "NaturalLanguage", CounterIncrements -> "Subsection", 
       CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
       "Helvetica", FontSize -> 16, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontColor -> GrayLevel[0.5]], 
      Cell[
       StyleData["Subsection", "Presentation"], 
       CellMargins -> {{60, 50}, {6, 15}}, 
       CellChangeTimes -> {3.483202458956058*^9}, LineSpacing -> {1, 0}, 
       FontFamily -> "Helvetica", FontSize -> 16], 
      Cell[
       StyleData["Subsection", "SlideShow"], 
       CellMargins -> {{60, 50}, {8, 12}}, 
       CellChangeTimes -> {3.483202458956277*^9}, LineSpacing -> {1, 0}, 
       FontFamily -> "Helvetica", FontSize -> 18], 
      Cell[
       StyleData["Subsection", "Printout"], CellMargins -> {{2, 0}, {2, 22}}, 
       FontSize -> 12]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
       False, CellMargins -> {{60, Inherited}, {0, 12}}, 
       CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> False, 
       DefaultNewInlineCellStyle -> "None", 
       InputAutoReplacements -> {"TeX" -> StyleBox[
           RowBox[{"T", 
             AdjustmentBox[
             "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
              0.5], "X"}]], "LaTeX" -> StyleBox[
           RowBox[{"L", 
             StyleBox[
              AdjustmentBox[
              "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
               BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
             AdjustmentBox[
             "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
              0.5], "X"}]], "mma" -> "Mathematica", "Mma" -> "Mathematica", 
         "MMA" -> "Mathematica", "gridMathematica" -> FormBox[
           RowBox[{"grid", 
             AdjustmentBox[
              StyleBox["Mathematica", FontSlant -> "Italic"], 
              BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
         "webMathematica" -> FormBox[
           RowBox[{"web", 
             AdjustmentBox[
              StyleBox["Mathematica", FontSlant -> "Italic"], 
              BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], Inherited}, 
       CellChangeTimes -> {3.483202458956718*^9}, LanguageCategory -> 
       "NaturalLanguage", CounterIncrements -> "Subsubsection", FontFamily -> 
       "Helvetica", FontSize -> 14, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontColor -> GrayLevel[0.5]], 
      Cell[
       StyleData["Subsubsection", "Presentation"], 
       CellMargins -> {{60, 50}, {6, 20}}, 
       CellChangeTimes -> {3.483202458956935*^9}, LineSpacing -> {1, 0}, 
       FontFamily -> "Helvetica", FontSize -> 14], 
      Cell[
       StyleData["Subsubsection", "SlideShow"], 
       CellMargins -> {{60, 50}, {6, 20}}, 
       CellChangeTimes -> {3.483202458957169*^9}, FontFamily -> "Helvetica", 
       FontSize -> 14], 
      Cell[
       StyleData["Subsubsection", "Printout"], 
       CellMargins -> {{2, 0}, {2, 22}}, FontSize -> 11]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Text"], CellMargins -> {{60, 10}, {7, 7}}, 
       InputAutoReplacements -> {"TeX" -> StyleBox[
           RowBox[{"T", 
             AdjustmentBox[
             "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
              0.5], "X"}]], "LaTeX" -> StyleBox[
           RowBox[{"L", 
             StyleBox[
              AdjustmentBox[
              "A", BoxMargins -> {{-0.36, -0.1}, {0, 0}}, 
               BoxBaselineShift -> -0.2], FontSize -> Smaller], "T", 
             AdjustmentBox[
             "E", BoxMargins -> {{-0.075, -0.085}, {0, 0}}, BoxBaselineShift -> 
              0.5], "X"}]], "mma" -> "Mathematica", "Mma" -> "Mathematica", 
         "MMA" -> "Mathematica", "gridMathematica" -> FormBox[
           RowBox[{"grid", 
             AdjustmentBox[
              StyleBox["Mathematica", FontSlant -> "Italic"], 
              BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], 
         "webMathematica" -> FormBox[
           RowBox[{"web", 
             AdjustmentBox[
              StyleBox["Mathematica", FontSlant -> "Italic"], 
              BoxMargins -> {{-0.175, 0}, {0, 0}}]}], TextForm], Inherited}, 
       LineSpacing -> {1, 3}, CounterIncrements -> "Text", FontFamily -> 
       "Helvetica", FontSize -> 17], 
      Cell[
       StyleData["Text", "Presentation"], CellMargins -> {{60, 50}, {10, 10}},
        LineSpacing -> {1, 5}, FontSize -> 17], 
      Cell[
       StyleData["Text", "SlideShow"], CellMargins -> {{60, 50}, {10, 10}}, 
       FontSize -> 17], 
      Cell[
       StyleData["Text", "Printout"], CellMargins -> {{2, 2}, {6, 6}}, 
       TextJustification -> 0.5, Hyphenation -> True, FontSize -> 10]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["SmallText"], CellMargins -> {{60, 10}, {6, 6}}, 
       DefaultNewInlineCellStyle -> "None", LineSpacing -> {1, 3}, 
       LanguageCategory -> "NaturalLanguage", CounterIncrements -> 
       "SmallText", FontFamily -> "Helvetica", FontSize -> 9], 
      Cell[
       StyleData["SmallText", "Presentation"], 
       CellMargins -> {{103, 50}, {8, 8}}, LineSpacing -> {1, 5}, FontSize -> 
       10], 
      Cell[
       StyleData["SmallText", "SlideShow"], 
       CellMargins -> {{103, 50}, {8, 8}}, LineSpacing -> {1, 5}, FontSize -> 
       10], 
      Cell[
       StyleData["SmallText", "Printout"], CellMargins -> {{2, 2}, {5, 5}}, 
       TextJustification -> 0.5, Hyphenation -> True, FontSize -> 7]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Item", StyleDefinitions -> StyleData["Text"]], CellDingbat -> 
       Cell["\[FilledSmallCircle]", FontWeight -> "Bold"], 
       CellMargins -> {{84, 10}, {7, 7}}, ReturnCreatesNewCell -> True, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
       CounterIncrements -> "Item"], 
      Cell[
       StyleData["Item", "Presentation"], CellMargins -> {{124, 10}, {7, 7}}], 
      Cell[
       StyleData[
       "Item", "SlideShow", StyleDefinitions -> 
        StyleData["Item", "Presentation"]]], 
      Cell[
       StyleData["Item", "Printout"], CellMargins -> {{2, 2}, {0, 6}}]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subitem", StyleDefinitions -> StyleData["Item"]], 
       CellMargins -> {{108, 10}, {7, 7}}, ReturnCreatesNewCell -> True, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
       CounterIncrements -> "Subitem"], 
      Cell[
       StyleData["Subitem", "Presentation"], 
       CellMargins -> {{146, 10}, {7, 7}}], 
      Cell[
       StyleData[
       "Subitem", "SlideShow", StyleDefinitions -> 
        StyleData["Subitem", "Presentation"]]], 
      Cell[
       StyleData["Subitem", "Printout"], CellMargins -> {{30, 2}, {0, 6}}]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ItemNumbered", StyleDefinitions -> StyleData["Text"]], 
       CellDingbat -> Cell[
         TextData[{
           CounterBox["ItemNumbered"], "."}], FontWeight -> "Bold"], 
       CellMargins -> {{84, 10}, {7, 7}}, ReturnCreatesNewCell -> True, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15000}, 
       CounterIncrements -> "ItemNumbered"], 
      Cell[
       StyleData["ItemNumbered", "Presentation"], 
       CellMargins -> {{124, 10}, {7, 7}}], 
      Cell[
       StyleData[
       "ItemNumbered", "SlideShow", StyleDefinitions -> 
        StyleData["ItemNumbered", "Presentation"]]], 
      Cell[
       StyleData["ItemNumbered", "Printout"], 
       CellMargins -> {{2, 2}, {0, 6}}]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData[
       "SubitemNumbered", StyleDefinitions -> StyleData["ItemNumbered"]], 
       CellDingbat -> Cell[
         TextData[{
           CounterBox["SubitemNumbered"], "."}], FontWeight -> "Bold"], 
       CellMargins -> {{108, 10}, {7, 7}}, ReturnCreatesNewCell -> True, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
       CounterIncrements -> "SubitemNumbered"], 
      Cell[
       StyleData["SubitemNumbered", "Presentation"], 
       CellMargins -> {{146, 10}, {7, 7}}], 
      Cell[
       StyleData[
       "SubitemNumbered", "SlideShow", StyleDefinitions -> 
        StyleData["SubitemNumbered", "Presentation"]]], 
      Cell[
       StyleData["SubitemNumbered", "Printout"], 
       CellMargins -> {{30, 2}, {0, 6}}]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["ItemParagraph", StyleDefinitions -> StyleData["Item"]], 
       CellDingbat -> None, CellMargins -> {{84, 10}, {7, 7}}, 
       ReturnCreatesNewCell -> True, 
       CellGroupingRules -> {"GroupTogetherNestedGrouping", 15100}, 
       CounterIncrements -> "ItemParagraph"], 
      Cell[
       StyleData["ItemParagraph", "Presentation"], 
       CellMargins -> {{124, 10}, {7, 7}}], 
      Cell[
       StyleData[
       "ItemParagraph", "SlideShow", StyleDefinitions -> 
        StyleData["ItemParagraph", "Presentation"]]], 
      Cell[
       StyleData["ItemParagraph", "Printout"], 
       CellMargins -> {{14, 2}, {0, 6}}]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData[
       "SubitemParagraph", StyleDefinitions -> StyleData["Subitem"]], 
       CellDingbat -> None, ReturnCreatesNewCell -> True, CounterIncrements -> 
       "SubitemParagraph"], 
      Cell[
       StyleData["SubitemParagraph", "Presentation"]], 
      Cell[
       StyleData[
       "SubitemParagraph", "SlideShow", StyleDefinitions -> 
        StyleData["SubitemParagraph", "Presentation"]]], 
      Cell[
       StyleData["SubitemParagraph", "Printout"]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["DisplayFormula"]], 
      Cell[
       StyleData["DisplayFormula", "Presentation"], 
       CellMargins -> {{60, Inherited}, {Inherited 1.5, Inherited 1.5}}, 
       FontSize -> 18], 
      Cell[
       StyleData["DisplayFormula", "SlideShow"], 
       CellMargins -> {{60, Inherited}, {Inherited 1.5, Inherited 1.5}}, 
       FontSize -> 18], 
      Cell[
       StyleData["DisplayFormula", "Condensed"]], 
      Cell[
       StyleData["DisplayFormula", "Printout"], 
       CellMargins -> {{39, Inherited}, {Inherited, Inherited}}, FontSize -> 
       10]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData[
       "DisplayFormulaNumbered", StyleDefinitions -> 
        StyleData["DisplayFormula"]], CellFrameLabels -> {{None, 
          Cell[
           TextData[{"(", 
             CounterBox["DisplayFormulaNumbered"], ")"}]]}, {None, None}}, 
       CounterIncrements -> "DisplayFormulaNumbered"], 
      Cell[
       StyleData["DisplayFormulaNumbered", "Presentation"], 
       CellMargins -> {{103, Inherited}, {Inherited 1.5, Inherited 1.5}}, 
       FontSize -> 18], 
      Cell[
       StyleData["DisplayFormulaNumbered", "SlideShow"], 
       CellMargins -> {{103, Inherited}, {Inherited 1.5, Inherited 1.5}}, 
       FontSize -> 18], 
      Cell[
       StyleData["DisplayFormulaNumbered", "Condensed"]], 
      Cell[
       StyleData["DisplayFormulaNumbered", "Printout"], 
       CellMargins -> {{39, Inherited}, {Inherited, Inherited}}]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Author"], ShowGroupOpener -> False, 
       CellMargins -> {{27, 27}, {2, 20}}, CellGroupingRules -> 
       "InputGrouping", CellChangeTimes -> {3.483202458973776*^9}, FontFamily -> 
       "Helvetica", FontSize -> 14, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontColor -> GrayLevel[0.5]], 
      Cell[
       StyleData["Author", "Presentation"], 
       CellMargins -> {{58, 27}, {2, 30}}, 
       CellChangeTimes -> {3.483202458973956*^9}, FontSize -> 18], 
      Cell[
       StyleData["Author", "SlideShow"], CellMargins -> {{58, 27}, {2, 30}}, 
       CellChangeTimes -> {3.4832024589741793`*^9}, FontSize -> 18], 
      Cell[
       StyleData["Author", "Printout"], CellMargins -> {{2, 27}, {2, 20}}, 
       CellChangeTimes -> {3.4832024589744*^9}, FontSize -> 14, FontColor -> 
       RGBColor[0.4886854352635996, 0.4886854352635996, 0.4886854352635996]]},
      Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Affiliation"], CellMargins -> {{27, 27}, {20, 5}}, 
       CellGroupingRules -> "OutputGrouping", 
       CellChangeTimes -> {3.483202458974585*^9}, FontFamily -> "Helvetica", 
       FontSize -> 13, FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
       RGBColor[
        0.29411764705882354`, 0.29411764705882354`, 0.29411764705882354`]], 
      Cell[
       StyleData["Affiliation", "Presentation"], 
       CellMargins -> {{58, 27}, {2, 5}}, 
       CellChangeTimes -> {3.483202458974771*^9}, FontFamily -> 
       "L Helvetica Light", FontSize -> 12], 
      Cell[
       StyleData["Affiliation", "SlideShow"], 
       CellMargins -> {{58, 27}, {2, 5}}, 
       CellChangeTimes -> {3.483202458975004*^9}, FontSize -> 14], 
      Cell[
       StyleData["Affiliation", "Printout"], 
       CellMargins -> {{2, 27}, {20, 5}}, 
       CellChangeTimes -> {3.483202458975235*^9}, FontSize -> 14, FontColor -> 
       RGBColor[0.4886854352635996, 0.4886854352635996, 0.4886854352635996]]},
      Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["GraphicNoMagnification"], CellMargins -> {{60, 10}, {7, 7}},
        CellChangeTimes -> {3.483202458975418*^9}, LineSpacing -> {1, 3}, 
       CounterIncrements -> "Text", FontFamily -> "Helvetica", Magnification -> 
       1], 
      Cell[
       StyleData["GraphicNoMagnification", "Presentation"], 
       CellMargins -> {{100, 50}, {10, 10}}, 
       CellChangeTimes -> {3.4832024589755983`*^9}, LineSpacing -> {1, 5}, 
       FontSize -> 17], 
      Cell[
       StyleData["GraphicNoMagnification", "SlideShow"], 
       CellMargins -> {{100, 50}, {10, 10}}, 
       CellChangeTimes -> {3.483202458975821*^9}, FontSize -> 17], 
      Cell[
       StyleData["GraphicNoMagnification", "PrintoutSAVE"], 
       CellMargins -> {{2, 2}, {6, 6}}, 
       CellChangeTimes -> {3.483202458976042*^9}, FontSize -> 10]}, Closed]], 
   
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Input"], ShowCellBracket -> True, 
       CellMargins -> {{60, 10}, {5, 7}}, 
       CellBracketOptions -> {
        "Color" -> RGBColor[0.734936, 0.713848, 0.694041]}, Evaluatable -> 
       True, CellGroupingRules -> "InputGrouping", CellHorizontalScrolling -> 
       True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
       DefaultFormatType -> DefaultInputFormatType, 
       "TwoByteSyntaxCharacterAutoReplacement" -> True, 
       HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
       AutoItalicWords -> {}, LanguageCategory -> "Mathematica", FormatType -> 
       InputForm, ShowStringCharacters -> True, NumberMarks -> True, 
       LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, CounterIncrements -> 
       "Input", FontWeight -> "Bold"], 
      Cell[
       StyleData["Input", "Presentation"], CellMargins -> {{60, 50}, {8, 10}},
        LineSpacing -> {1, 0}, FontSize -> 17], 
      Cell[
       StyleData["Input", "SlideShow"], CellMargins -> {{60, 50}, {8, 10}}, 
       LineSpacing -> {1, 0}, FontSize -> 17], 
      Cell[
       StyleData["Input", "Printout"], CellMargins -> {{39, 0}, {4, 6}}, 
       LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 9]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Code"], CellChangeTimes -> {3.483202458976812*^9}], 
      Cell[
       StyleData["Code", "Presentation"], CellMargins -> {{103, 50}, {8, 10}},
        CellChangeTimes -> {3.4832024589769573`*^9}, LineSpacing -> {1, 0}, 
       FontSize -> 17], 
      Cell[
       StyleData["Code", "SlideShow"], CellMargins -> {{103, 50}, {8, 10}}, 
       CellChangeTimes -> {3.483202458977096*^9}, LineSpacing -> {1, 0}, 
       FontSize -> 17], 
      Cell[
       StyleData["Code", "Printout"], CellMargins -> {{39, 0}, {4, 6}}, 
       CellChangeTimes -> {3.483202458977253*^9}, 
       LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 9]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Program"], CellMargins -> {{60, 4}, {6, 8}}], 
      Cell[
       StyleData["Program", "Presentation"], 
       CellMargins -> {{103, 50}, {8, 10}}, LineSpacing -> {1, 0}, FontSize -> 
       17], 
      Cell[
       StyleData["Program", "SlideShow"], CellMargins -> {{103, 50}, {8, 10}},
        LineSpacing -> {1, 0}, FontSize -> 17], 
      Cell[
       StyleData["Program", "Printout"], FontSize -> 9]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["InputOnly"], ShowCellBracket -> True, 
       CellMargins -> {{60, 10}, {7, 7}}, 
       CellBracketOptions -> {
        "Color" -> RGBColor[0.734936, 0.713848, 0.694041]}, Evaluatable -> 
       True, CellGroupingRules -> "InputGrouping", CellHorizontalScrolling -> 
       True, DefaultFormatType -> DefaultInputFormatType, 
       "TwoByteSyntaxCharacterAutoReplacement" -> True, 
       HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
       AutoItalicWords -> {}, LanguageCategory -> "Mathematica", FormatType -> 
       InputForm, ShowStringCharacters -> True, NumberMarks -> True, 
       LinebreakAdjustments -> {0.85, 2, 10, 0, 1}, CounterIncrements -> 
       "Input", StyleMenuListing -> None, FontWeight -> "Bold"], 
      Cell[
       StyleData["InputOnly", "Presentation"], 
       CellMargins -> {{100, Inherited}, {8, 10}}, LineSpacing -> {1, 0}, 
       FontSize -> 17], 
      Cell[
       StyleData["InputOnly", "SlideShow"], 
       CellMargins -> {{100, Inherited}, {8, 10}}, LineSpacing -> {1, 0}, 
       FontSize -> 17], 
      Cell[
       StyleData["InputOnly", "Printout"], CellMargins -> {{39, 0}, {4, 6}}, 
       LinebreakAdjustments -> {0.85, 2, 10, 1, 1}, FontSize -> 9]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Output"], ShowCellBracket -> True, 
       CellMargins -> {{60, 10}, {7, 5}}, 
       CellBracketOptions -> {
        "Color" -> RGBColor[0.734936, 0.713848, 0.694041]}, CellEditDuplicate -> 
       True, CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
       True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
       GeneratedCell -> True, CellAutoOverwrite -> True, DefaultFormatType -> 
       DefaultOutputFormatType, "TwoByteSyntaxCharacterAutoReplacement" -> 
       True, HyphenationOptions -> {
        "HyphenationCharacter" -> "\[Continuation]"}, AutoItalicWords -> {}, 
       LanguageCategory -> None, FormatType -> InputForm, CounterIncrements -> 
       "Output"], 
      Cell[
       StyleData["Output", "Presentation"], 
       CellMargins -> {{60, 50}, {10, 8}}, LineSpacing -> {1, 0}, FontSize -> 
       17], 
      Cell[
       StyleData["Output", "SlideShow"], CellMargins -> {{60, 50}, {10, 8}}, 
       LineSpacing -> {1, 0}, FontSize -> 17], 
      Cell[
       StyleData["Output", "Printout"], CellMargins -> {{39, 0}, {6, 4}}, 
       FontSize -> 9]}, Open]], 
   Cell[
    RawData[
    "Cell[StyleData[\"slideshowheader\"],\n ShowCellBracket->False,\n \
CellMargins->{{0, 0}, {0, -2}},\n Evaluatable->False,\n \
CellHorizontalScrolling->False,\n PageBreakBelow->False,\n \
CellFrameMargins->0,\n ImageMargins->{{0, 0}, {0, 0}},\n ImageRegion->{{0, \
1}, {0, 1}},\n CellPadding -> 0,\n CellFramePadding -> 0,\n Magnification->1,\
\n Background->GrayLevel[1]]"], ShowCellBracket -> False, 
    CellMargins -> {{0, 0}, {0, -2}}, Evaluatable -> False, 
    CellHorizontalScrolling -> False, PageBreakBelow -> False, 
    CellFrameMargins -> 0, ImageMargins -> {{0, 0}, {0, 0}}, 
    ImageRegion -> {{0, 1}, {0, 1}}, Magnification -> 1, Background -> 
    GrayLevel[1], CellPadding -> 0, CellFramePadding -> 0], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["hidefromslideshowgraphic"], ShowCellBracket -> False, 
       CellMargins -> {{0, 0}, {0, 0}}, Evaluatable -> False, 
       CellHorizontalScrolling -> False, PageBreakBelow -> False, 
       CellFrameMargins -> 0, ImageMargins -> {{0, 0}, {0, 0}}, 
       ImageRegion -> {{0, 1}, {0, 1}}, Magnification -> 1, Background -> 
       GrayLevel[1], CellPadding -> 0], 
      Cell[
       StyleData["hidefromslideshowgraphic", "SlideShow"], ShowCellBracket -> 
       False, CellElementSpacings -> {
        "CellMinHeight" -> 0, "ClosedCellHeight" -> 0, "ClosedGroupTopMargin" -> 
         0}, CellOpen -> False, CellHorizontalScrolling -> False]}, Closed]], 
   
   Cell[
    CellGroupData[{
      Cell[
       StyleData["slideshowheader2"], ShowCellBracket -> False, 
       CellMargins -> {{0, 0}, {0, 0}}, Evaluatable -> False, 
       CellHorizontalScrolling -> False, PageBreakBelow -> False, 
       ImageMargins -> {{0, 0}, {0, 0}}, ImageRegion -> {{0, 1}, {0, 1}}, 
       Magnification -> 1, Background -> GrayLevel[1]], 
      Cell[
       StyleData["ConferenceGraphicCell", "SlideShow"], ShowCellBracket -> 
       False, CellElementSpacings -> {
        "CellMinHeight" -> 0, "ClosedCellHeight" -> 0, "ClosedGroupTopMargin" -> 
         0}, CellOpen -> False, CellHorizontalScrolling -> True], 
      Cell[
       StyleData["slideshowheader", "Printout"], FontSize -> 8, Magnification -> 
       0.75]}, Closed]], 
   Cell[
    StyleData[
    "ConferenceGraphicCellSlideShowOnly", StyleDefinitions -> 
     StyleData["ConferenceCellGraphic"]], ShowCellBracket -> False, 
    CellMargins -> 0, 
    CellElementSpacings -> {
     "CellMinHeight" -> 0, "ClosedCellHeight" -> 0, "ClosedGroupTopMargin" -> 
      0}, CellOpen -> False], 
   Cell[
    StyleData["SlideShowNavigationBar"], Editable -> True, Selectable -> 
    False, CellFrame -> 0, ShowGroupOpener -> False, 
    CellMargins -> {{0, 0}, {3, 3}}, CellOpen -> True, CellFrameMargins -> 0, 
    CellFrameColor -> None, Background -> None], 
   Cell[
    StyleData["GraphTitle"], MenuSortingValue -> 10000, FontFamily -> "Arial",
     FontSize -> 18, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["ScaleTitle"], MenuSortingValue -> 10000, FontFamily -> "Arial",
     FontSize -> 12, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
   Cell[
    StyleData["AxesTitle"], MenuSortingValue -> 10000, FontFamily -> "Arial", 
    FontSize -> 16, FontWeight -> "Bold", FontSlant -> "Plain", 
    FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}]}, 
  Visible -> False, FrontEndVersion -> 
  "11.0 for Microsoft Windows (64-bit) (September 21, 2016)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[1770, 47, 64, 1, 57, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 1732794, 35296}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 445, 6, 33, "hidefromslideshowgraphic"],
Cell[CellGroupData[{
Cell[1028, 30, 467, 7, 49, "Title"],
Cell[1498, 39, 235, 3, 42, "Subtitle"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1770, 47, 64, 1, 57, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1859, 52, 191, 3, 119, "Section"],
Cell[2053, 57, 105336, 1733, 1345, "Text"],
Cell[107392, 1792, 291, 4, 48, "Text"],
Cell[CellGroupData[{
Cell[107708, 1800, 577, 10, 48, "ItemNumbered"],
Cell[108288, 1812, 565, 9, 48, "Subitem"],
Cell[108856, 1823, 630, 10, 48, "ItemNumbered"],
Cell[CellGroupData[{
Cell[109511, 1837, 550, 8, 48, "Subitem"],
Cell[110064, 1847, 101, 1, 48, "Subitem"],
Cell[110168, 1850, 106, 1, 48, "Subitem"],
Cell[110277, 1853, 124, 1, 48, "Subitem"]
}, Open  ]],
Cell[110416, 1857, 220, 4, 48, "ItemNumbered"],
Cell[110639, 1863, 272, 3, 48, "ItemNumbered"],
Cell[110914, 1868, 243, 7, 79, "ItemNumbered"]
}, Open  ]],
Cell[111172, 1878, 31966, 530, 972, "Input"],
Cell[143141, 2410, 37036, 611, 855, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[180214, 3026, 657, 9, 63, "Section"],
Cell[180874, 3037, 70224, 1157, 894, "Input"],
Cell[251101, 4196, 291308, 4783, 1602, "Text"],
Cell[542412, 8981, 67, 1, 105, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[542516, 8987, 200, 3, 63, "Section"],
Cell[542719, 8992, 68, 1, 40, "Input"],
Cell[542790, 8995, 27672, 477, 546, "Input"],
Cell[570465, 9474, 26964, 464, 543, "Input"],
Cell[597432, 9940, 27378, 472, 541, "Input"],
Cell[624813, 10414, 68, 1, 40, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[624918, 10420, 111, 1, 63, "Section"],
Cell[625032, 10423, 132810, 4614, 531, "Input"],
Cell[757845, 15039, 133081, 4616, 531, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[890963, 19660, 188, 3, 63, "Section"],
Cell[891154, 19665, 158, 2, 71, "Input"],
Cell[891315, 19669, 137, 2, 41, "Input"],
Cell[891455, 19673, 151463, 3333, 587, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1042955, 23011, 377, 6, 63, "Section"],
Cell[CellGroupData[{
Cell[1043357, 23021, 24348, 613, 2584, "Input"],
Cell[1067708, 23636, 42878, 723, 536, "Output"],
Cell[1110589, 24361, 44559, 747, 541, "Output"],
Cell[1155151, 25110, 44391, 745, 541, "Output"],
Cell[1199545, 25857, 369635, 6543, 569, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

